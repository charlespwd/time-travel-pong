// Compiled by ClojureScript 0.0-3058 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-3058";
cljs.core._STAR_unchecked_if_STAR_ = false;
/**
 * @define {string}
 */
cljs.core._STAR_target_STAR_ = "default";
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
 * Each runtime environment provides a different way to print output.
 * Whatever function *print-fn* is bound to will be passed any
 * Strings which should be printed.
 */
cljs.core._STAR_print_fn_STAR_ = (function cljs$core$_STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
 * Set *print-fn* to f.
 */
cljs.core.set_print_fn_BANG_ = (function cljs$core$set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function cljs$core$pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$_COLON_flush_on_newline,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$_COLON_readably,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$_COLON_meta,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$_COLON_dup,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$_COLON_print_length,cljs.core._STAR_print_length_STAR_], null);
});
/**
 * Set *print-fn* to console.log
 */
cljs.core.enable_console_print_BANG_ = (function cljs$core$enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__669__delegate = function (args){
return console.log.apply(console,(function (){var G__668 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__668) : cljs.core.into_array.call(null,G__668));
})());
};
var G__669 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__670__i = 0, G__670__a = new Array(arguments.length -  0);
while (G__670__i < G__670__a.length) {G__670__a[G__670__i] = arguments[G__670__i + 0]; ++G__670__i;}
  args = new cljs.core.IndexedSeq(G__670__a,0);
} 
return G__669__delegate.call(this,args);};
G__669.cljs$lang$maxFixedArity = 0;
G__669.cljs$lang$applyTo = (function (arglist__671){
var args = cljs.core.seq(arglist__671);
return G__669__delegate(args);
});
G__669.cljs$core$IFn$_invoke$arity$variadic = G__669__delegate;
return G__669;
})()
;
});
/**
 * Internal - do not use!
 */
cljs.core.truth_ = (function cljs$core$truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
 * Tests if 2 arguments are the same object
 */
cljs.core.identical_QMARK_ = (function cljs$core$identical_QMARK_(x,y){
return (x === y);
});
/**
 * Returns true if x is nil, false otherwise.
 */
cljs.core.nil_QMARK_ = (function cljs$core$nil_QMARK_(x){
return (x == null);
});
/**
 * Returns true if x is a JavaScript array.
 */
cljs.core.array_QMARK_ = (function cljs$core$array_QMARK_(x){
return x instanceof Array;
});
/**
 * Returns true if x is a JavaScript number.
 */
cljs.core.number_QMARK_ = (function cljs$core$number_QMARK_(n){
return typeof n === 'number';
});
/**
 * Returns true if x is logical false, false otherwise.
 */
cljs.core.not = (function cljs$core$not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
 * Returns true if x is not nil, false otherwise.
 */
cljs.core.some_QMARK_ = (function cljs$core$some_QMARK_(x){
return !((x == null));
});
/**
 * Returns true if x's constructor is Object
 */
cljs.core.object_QMARK_ = (function cljs$core$object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
/**
 * Returns true if x is a JavaScript string.
 */
cljs.core.string_QMARK_ = (function cljs$core$string_QMARK_(x){
var G__673 = x;
return goog.isString(G__673);
});
/**
 * Internal - do not use!
 */
cljs.core.native_satisfies_QMARK_ = (function cljs$core$native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__675 = x__$1;
return goog.typeOf(G__675);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function cljs$core$is_proto_(x){
return (x.constructor.prototype === x);
});
/**
 * When compiled for a command-line target, whatever
 * function *main-fn* is set to will be called with the command-line
 * argv as arguments
 */
cljs.core._STAR_main_cli_fn_STAR_ = null;
/**
 * Return x's constructor.
 */
cljs.core.type = (function cljs$core$type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function cljs$core$missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__10815__auto__ = ty;
if(cljs.core.truth_(and__10815__auto__)){
return ty.cljs$lang$type;
} else {
return and__10815__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__677 = obj;
return goog.typeOf(G__677);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function cljs$core$type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function cljs$core$load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__679 = Symbol;
return goog.typeOf(G__679);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
/**
 * Construct a JavaScript array of specified size. Accepts ignored type
 * argument for compatibility with Clojure.
 */
cljs.core.make_array = (function() {
var cljs$core$make_array = null;
var cljs$core$make_array__1 = (function (size){
return (new Array(size));
});
var cljs$core$make_array__2 = (function (type,size){
return cljs$core$make_array.cljs$core$IFn$_invoke$arity$1(size);
});
cljs$core$make_array = function(type,size){
switch(arguments.length){
case 1:
return cljs$core$make_array__1.call(this,type);
case 2:
return cljs$core$make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$make_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$make_array__1;
cljs$core$make_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$make_array__2;
return cljs$core$make_array;
})()
;
/**
 * Returns a javascript array, cloned from the passed in array
 */
cljs.core.aclone = (function cljs$core$aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__11242__auto___681 = len;
var i_682 = (0);
while(true){
if((i_682 < n__11242__auto___681)){
(new_arr[i_682] = (arr[i_682]));

var G__683 = (i_682 + (1));
i_682 = G__683;
continue;
} else {
}
break;
}

return new_arr;
});
/**
 * Creates a new javascript array.
 * @param {...*} var_args
 */
cljs.core.array = (function cljs$core$array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__684 = (i + (1));
i = G__684;
continue;
} else {
return a;
}
break;
}
});
/**
 * Returns the value at the index.
 * @param {...*} var_args
 */
cljs.core.aget = (function() {
var cljs$core$aget = null;
var cljs$core$aget__2 = (function (array,i){
return (array[i]);
});
var cljs$core$aget__3 = (function() { 
var G__693__delegate = function (array,i,idxs){
var G__690 = cljs$core$aget;
var G__691 = cljs$core$aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__692 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__690,G__691,G__692) : cljs.core.apply.call(null,G__690,G__691,G__692));
};
var G__693 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__694__i = 0, G__694__a = new Array(arguments.length -  2);
while (G__694__i < G__694__a.length) {G__694__a[G__694__i] = arguments[G__694__i + 2]; ++G__694__i;}
  idxs = new cljs.core.IndexedSeq(G__694__a,0);
} 
return G__693__delegate.call(this,array,i,idxs);};
G__693.cljs$lang$maxFixedArity = 2;
G__693.cljs$lang$applyTo = (function (arglist__695){
var array = cljs.core.first(arglist__695);
arglist__695 = cljs.core.next(arglist__695);
var i = cljs.core.first(arglist__695);
var idxs = cljs.core.rest(arglist__695);
return G__693__delegate(array,i,idxs);
});
G__693.cljs$core$IFn$_invoke$arity$variadic = G__693__delegate;
return G__693;
})()
;
cljs$core$aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return cljs$core$aget__2.call(this,array,i);
default:
var G__696 = null;
if (arguments.length > 2) {
var G__697__i = 0, G__697__a = new Array(arguments.length -  2);
while (G__697__i < G__697__a.length) {G__697__a[G__697__i] = arguments[G__697__i + 2]; ++G__697__i;}
G__696 = new cljs.core.IndexedSeq(G__697__a,0);
}
return cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__696);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$aget.cljs$lang$maxFixedArity = 2;
cljs$core$aget.cljs$lang$applyTo = cljs$core$aget__3.cljs$lang$applyTo;
cljs$core$aget.cljs$core$IFn$_invoke$arity$2 = cljs$core$aget__2;
cljs$core$aget.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$aget;
})()
;
/**
 * Sets the value at the index.
 * @param {...*} var_args
 */
cljs.core.aset = (function() {
var cljs$core$aset = null;
var cljs$core$aset__3 = (function (array,i,val){
return (array[i] = val);
});
var cljs$core$aset__4 = (function() { 
var G__706__delegate = function (array,idx,idx2,idxv){
var G__702 = cljs$core$aset;
var G__703 = (array[idx]);
var G__704 = idx2;
var G__705 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__702,G__703,G__704,G__705) : cljs.core.apply.call(null,G__702,G__703,G__704,G__705));
};
var G__706 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__707__i = 0, G__707__a = new Array(arguments.length -  3);
while (G__707__i < G__707__a.length) {G__707__a[G__707__i] = arguments[G__707__i + 3]; ++G__707__i;}
  idxv = new cljs.core.IndexedSeq(G__707__a,0);
} 
return G__706__delegate.call(this,array,idx,idx2,idxv);};
G__706.cljs$lang$maxFixedArity = 3;
G__706.cljs$lang$applyTo = (function (arglist__708){
var array = cljs.core.first(arglist__708);
arglist__708 = cljs.core.next(arglist__708);
var idx = cljs.core.first(arglist__708);
arglist__708 = cljs.core.next(arglist__708);
var idx2 = cljs.core.first(arglist__708);
var idxv = cljs.core.rest(arglist__708);
return G__706__delegate(array,idx,idx2,idxv);
});
G__706.cljs$core$IFn$_invoke$arity$variadic = G__706__delegate;
return G__706;
})()
;
cljs$core$aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return cljs$core$aset__3.call(this,array,idx,idx2);
default:
var G__709 = null;
if (arguments.length > 3) {
var G__710__i = 0, G__710__a = new Array(arguments.length -  3);
while (G__710__i < G__710__a.length) {G__710__a[G__710__i] = arguments[G__710__i + 3]; ++G__710__i;}
G__709 = new cljs.core.IndexedSeq(G__710__a,0);
}
return cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__709);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$aset.cljs$lang$maxFixedArity = 3;
cljs$core$aset.cljs$lang$applyTo = cljs$core$aset__4.cljs$lang$applyTo;
cljs$core$aset.cljs$core$IFn$_invoke$arity$3 = cljs$core$aset__3;
cljs$core$aset.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$aset;
})()
;
/**
 * Returns the length of the array. Works on arrays of all types.
 */
cljs.core.alength = (function cljs$core$alength(array){
return array.length;
});
/**
 * Returns an array with components set to the values in aseq. Optional type
 * argument accepted for compatibility with Clojure.
 */
cljs.core.into_array = (function() {
var cljs$core$into_array = null;
var cljs$core$into_array__1 = (function (aseq){
return cljs$core$into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var cljs$core$into_array__2 = (function (type,aseq){
var G__716 = (function (a,x){
a.push(x);

return a;
});
var G__717 = [];
var G__718 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__716,G__717,G__718) : cljs.core.reduce.call(null,G__716,G__717,G__718));
});
cljs$core$into_array = function(type,aseq){
switch(arguments.length){
case 1:
return cljs$core$into_array__1.call(this,type);
case 2:
return cljs$core$into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$into_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$into_array__1;
cljs$core$into_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$into_array__2;
return cljs$core$into_array;
})()
;
/**
 * Invoke JavaScript object method via string. Needed when the
 * string is not a valid unquoted property name.
 * @param {...*} var_args
 */
cljs.core.js_invoke = (function() { 
var cljs$core$js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var cljs$core$js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__719__i = 0, G__719__a = new Array(arguments.length -  2);
while (G__719__i < G__719__a.length) {G__719__a[G__719__i] = arguments[G__719__i + 2]; ++G__719__i;}
  args = new cljs.core.IndexedSeq(G__719__a,0);
} 
return cljs$core$js_invoke__delegate.call(this,obj,s,args);};
cljs$core$js_invoke.cljs$lang$maxFixedArity = 2;
cljs$core$js_invoke.cljs$lang$applyTo = (function (arglist__720){
var obj = cljs.core.first(arglist__720);
arglist__720 = cljs.core.next(arglist__720);
var s = cljs.core.first(arglist__720);
var args = cljs.core.rest(arglist__720);
return cljs$core$js_invoke__delegate(obj,s,args);
});
cljs$core$js_invoke.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_invoke__delegate;
return cljs$core$js_invoke;
})()
;

cljs.core.Fn = (function (){var obj722 = {};
return obj722;
})();


cljs.core.IFn = (function (){var obj724 = {};
return obj724;
})();

cljs.core._invoke = (function() {
var cljs$core$_invoke = null;
var cljs$core$_invoke__1 = (function (this$){
if((function (){var and__10815__auto__ = this$;
if(and__10815__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__10815__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__11091__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10823__auto__ = (cljs.core._invoke[(function (){var G__770 = x__11091__auto__;
return goog.typeOf(G__770);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._invoke["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var cljs$core$_invoke__2 = (function (this$,a){
if((function (){var and__10815__auto__ = this$;
if(and__10815__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__10815__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__11091__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10823__auto__ = (cljs.core._invoke[(function (){var G__772 = x__11091__auto__;
return goog.typeOf(G__772);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._invoke["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var cljs$core$_invoke__3 = (function (this$,a,b){
if((function (){var and__10815__auto__ = this$;
if(and__10815__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__10815__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__11091__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10823__auto__ = (cljs.core._invoke[(function (){var G__774 = x__11091__auto__;
return goog.typeOf(G__774);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._invoke["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var cljs$core$_invoke__4 = (function (this$,a,b,c){
if((function (){var and__10815__auto__ = this$;
if(and__10815__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__10815__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__11091__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10823__auto__ = (cljs.core._invoke[(function (){var G__776 = x__11091__auto__;
return goog.typeOf(G__776);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._invoke["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var cljs$core$_invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__10815__auto__ = this$;
if(and__10815__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__10815__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__11091__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10823__auto__ = (cljs.core._invoke[(function (){var G__778 = x__11091__auto__;
return goog.typeOf(G__778);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._invoke["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var cljs$core$_invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__10815__auto__ = this$;
if(and__10815__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__10815__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__11091__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10823__auto__ = (cljs.core._invoke[(function (){var G__780 = x__11091__auto__;
return goog.typeOf(G__780);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._invoke["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var cljs$core$_invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__10815__auto__ = this$;
if(and__10815__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__10815__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__11091__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10823__auto__ = (cljs.core._invoke[(function (){var G__782 = x__11091__auto__;
return goog.typeOf(G__782);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._invoke["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var cljs$core$_invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__10815__auto__ = this$;
if(and__10815__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__10815__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__11091__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10823__auto__ = (cljs.core._invoke[(function (){var G__784 = x__11091__auto__;
return goog.typeOf(G__784);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._invoke["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var cljs$core$_invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__10815__auto__ = this$;
if(and__10815__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__10815__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__11091__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10823__auto__ = (cljs.core._invoke[(function (){var G__786 = x__11091__auto__;
return goog.typeOf(G__786);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._invoke["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var cljs$core$_invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__10815__auto__ = this$;
if(and__10815__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__10815__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__11091__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10823__auto__ = (cljs.core._invoke[(function (){var G__788 = x__11091__auto__;
return goog.typeOf(G__788);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._invoke["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var cljs$core$_invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__10815__auto__ = this$;
if(and__10815__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__10815__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__11091__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10823__auto__ = (cljs.core._invoke[(function (){var G__790 = x__11091__auto__;
return goog.typeOf(G__790);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._invoke["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var cljs$core$_invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__10815__auto__ = this$;
if(and__10815__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__10815__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__11091__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10823__auto__ = (cljs.core._invoke[(function (){var G__792 = x__11091__auto__;
return goog.typeOf(G__792);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._invoke["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var cljs$core$_invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__10815__auto__ = this$;
if(and__10815__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__10815__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__11091__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10823__auto__ = (cljs.core._invoke[(function (){var G__794 = x__11091__auto__;
return goog.typeOf(G__794);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._invoke["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var cljs$core$_invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__10815__auto__ = this$;
if(and__10815__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__10815__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__11091__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10823__auto__ = (cljs.core._invoke[(function (){var G__796 = x__11091__auto__;
return goog.typeOf(G__796);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._invoke["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var cljs$core$_invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__10815__auto__ = this$;
if(and__10815__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__10815__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__11091__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10823__auto__ = (cljs.core._invoke[(function (){var G__798 = x__11091__auto__;
return goog.typeOf(G__798);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._invoke["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var cljs$core$_invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__10815__auto__ = this$;
if(and__10815__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__10815__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__11091__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10823__auto__ = (cljs.core._invoke[(function (){var G__800 = x__11091__auto__;
return goog.typeOf(G__800);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._invoke["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var cljs$core$_invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__10815__auto__ = this$;
if(and__10815__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__10815__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__11091__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10823__auto__ = (cljs.core._invoke[(function (){var G__802 = x__11091__auto__;
return goog.typeOf(G__802);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._invoke["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var cljs$core$_invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__10815__auto__ = this$;
if(and__10815__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__10815__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__11091__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10823__auto__ = (cljs.core._invoke[(function (){var G__804 = x__11091__auto__;
return goog.typeOf(G__804);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._invoke["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var cljs$core$_invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__10815__auto__ = this$;
if(and__10815__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__10815__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__11091__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10823__auto__ = (cljs.core._invoke[(function (){var G__806 = x__11091__auto__;
return goog.typeOf(G__806);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._invoke["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var cljs$core$_invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__10815__auto__ = this$;
if(and__10815__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__10815__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__11091__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10823__auto__ = (cljs.core._invoke[(function (){var G__808 = x__11091__auto__;
return goog.typeOf(G__808);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._invoke["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var cljs$core$_invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__10815__auto__ = this$;
if(and__10815__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__10815__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__11091__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10823__auto__ = (cljs.core._invoke[(function (){var G__810 = x__11091__auto__;
return goog.typeOf(G__810);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._invoke["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var cljs$core$_invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__10815__auto__ = this$;
if(and__10815__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__10815__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__11091__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10823__auto__ = (cljs.core._invoke[(function (){var G__812 = x__11091__auto__;
return goog.typeOf(G__812);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._invoke["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
cljs$core$_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return cljs$core$_invoke__1.call(this,this$);
case 2:
return cljs$core$_invoke__2.call(this,this$,a);
case 3:
return cljs$core$_invoke__3.call(this,this$,a,b);
case 4:
return cljs$core$_invoke__4.call(this,this$,a,b,c);
case 5:
return cljs$core$_invoke__5.call(this,this$,a,b,c,d);
case 6:
return cljs$core$_invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return cljs$core$_invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return cljs$core$_invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return cljs$core$_invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return cljs$core$_invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return cljs$core$_invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return cljs$core$_invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return cljs$core$_invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return cljs$core$_invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return cljs$core$_invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return cljs$core$_invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return cljs$core$_invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return cljs$core$_invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return cljs$core$_invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return cljs$core$_invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return cljs$core$_invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return cljs$core$_invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$1 = cljs$core$_invoke__1;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$2 = cljs$core$_invoke__2;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$3 = cljs$core$_invoke__3;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$4 = cljs$core$_invoke__4;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$5 = cljs$core$_invoke__5;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$6 = cljs$core$_invoke__6;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$7 = cljs$core$_invoke__7;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$8 = cljs$core$_invoke__8;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$9 = cljs$core$_invoke__9;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$10 = cljs$core$_invoke__10;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$11 = cljs$core$_invoke__11;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$12 = cljs$core$_invoke__12;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$13 = cljs$core$_invoke__13;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$14 = cljs$core$_invoke__14;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$15 = cljs$core$_invoke__15;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$16 = cljs$core$_invoke__16;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$17 = cljs$core$_invoke__17;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$18 = cljs$core$_invoke__18;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$19 = cljs$core$_invoke__19;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$20 = cljs$core$_invoke__20;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$21 = cljs$core$_invoke__21;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$22 = cljs$core$_invoke__22;
return cljs$core$_invoke;
})()
;


cljs.core.ICloneable = (function (){var obj814 = {};
return obj814;
})();

cljs.core._clone = (function cljs$core$_clone(value){
if((function (){var and__10815__auto__ = value;
if(and__10815__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__10815__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__11091__auto__ = (((value == null))?null:value);
return (function (){var or__10823__auto__ = (cljs.core._clone[(function (){var G__818 = x__11091__auto__;
return goog.typeOf(G__818);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._clone["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj820 = {};
return obj820;
})();

cljs.core._count = (function cljs$core$_count(coll){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._count[(function (){var G__824 = x__11091__auto__;
return goog.typeOf(G__824);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._count["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj826 = {};
return obj826;
})();

cljs.core._empty = (function cljs$core$_empty(coll){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._empty[(function (){var G__830 = x__11091__auto__;
return goog.typeOf(G__830);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._empty["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj832 = {};
return obj832;
})();

cljs.core._conj = (function cljs$core$_conj(coll,o){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._conj[(function (){var G__836 = x__11091__auto__;
return goog.typeOf(G__836);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._conj["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj838 = {};
return obj838;
})();

cljs.core._nth = (function() {
var cljs$core$_nth = null;
var cljs$core$_nth__2 = (function (coll,n){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._nth[(function (){var G__844 = x__11091__auto__;
return goog.typeOf(G__844);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._nth["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var cljs$core$_nth__3 = (function (coll,n,not_found){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._nth[(function (){var G__846 = x__11091__auto__;
return goog.typeOf(G__846);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._nth["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
cljs$core$_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$_nth__2.call(this,coll,n);
case 3:
return cljs$core$_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$_nth__2;
cljs$core$_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$_nth__3;
return cljs$core$_nth;
})()
;


cljs.core.ASeq = (function (){var obj848 = {};
return obj848;
})();


cljs.core.ISeq = (function (){var obj850 = {};
return obj850;
})();

cljs.core._first = (function cljs$core$_first(coll){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._first[(function (){var G__854 = x__11091__auto__;
return goog.typeOf(G__854);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._first["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function cljs$core$_rest(coll){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._rest[(function (){var G__858 = x__11091__auto__;
return goog.typeOf(G__858);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._rest["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj860 = {};
return obj860;
})();

cljs.core._next = (function cljs$core$_next(coll){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._next[(function (){var G__864 = x__11091__auto__;
return goog.typeOf(G__864);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._next["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj866 = {};
return obj866;
})();

cljs.core._lookup = (function() {
var cljs$core$_lookup = null;
var cljs$core$_lookup__2 = (function (o,k){
if((function (){var and__10815__auto__ = o;
if(and__10815__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__10815__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__11091__auto__ = (((o == null))?null:o);
return (function (){var or__10823__auto__ = (cljs.core._lookup[(function (){var G__872 = x__11091__auto__;
return goog.typeOf(G__872);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._lookup["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var cljs$core$_lookup__3 = (function (o,k,not_found){
if((function (){var and__10815__auto__ = o;
if(and__10815__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__10815__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__11091__auto__ = (((o == null))?null:o);
return (function (){var or__10823__auto__ = (cljs.core._lookup[(function (){var G__874 = x__11091__auto__;
return goog.typeOf(G__874);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._lookup["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
cljs$core$_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return cljs$core$_lookup__2.call(this,o,k);
case 3:
return cljs$core$_lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_lookup.cljs$core$IFn$_invoke$arity$2 = cljs$core$_lookup__2;
cljs$core$_lookup.cljs$core$IFn$_invoke$arity$3 = cljs$core$_lookup__3;
return cljs$core$_lookup;
})()
;


cljs.core.IAssociative = (function (){var obj876 = {};
return obj876;
})();

cljs.core._contains_key_QMARK_ = (function cljs$core$_contains_key_QMARK_(coll,k){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__880 = x__11091__auto__;
return goog.typeOf(G__880);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function cljs$core$_assoc(coll,k,v){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._assoc[(function (){var G__884 = x__11091__auto__;
return goog.typeOf(G__884);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._assoc["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj886 = {};
return obj886;
})();

cljs.core._dissoc = (function cljs$core$_dissoc(coll,k){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._dissoc[(function (){var G__890 = x__11091__auto__;
return goog.typeOf(G__890);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._dissoc["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj892 = {};
return obj892;
})();

cljs.core._key = (function cljs$core$_key(coll){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._key[(function (){var G__896 = x__11091__auto__;
return goog.typeOf(G__896);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._key["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function cljs$core$_val(coll){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._val[(function (){var G__900 = x__11091__auto__;
return goog.typeOf(G__900);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._val["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj902 = {};
return obj902;
})();

cljs.core._disjoin = (function cljs$core$_disjoin(coll,v){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._disjoin[(function (){var G__906 = x__11091__auto__;
return goog.typeOf(G__906);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._disjoin["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj908 = {};
return obj908;
})();

cljs.core._peek = (function cljs$core$_peek(coll){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._peek[(function (){var G__912 = x__11091__auto__;
return goog.typeOf(G__912);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._peek["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function cljs$core$_pop(coll){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._pop[(function (){var G__916 = x__11091__auto__;
return goog.typeOf(G__916);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._pop["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj918 = {};
return obj918;
})();

cljs.core._assoc_n = (function cljs$core$_assoc_n(coll,n,val){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._assoc_n[(function (){var G__922 = x__11091__auto__;
return goog.typeOf(G__922);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj924 = {};
return obj924;
})();

cljs.core._deref = (function cljs$core$_deref(o){
if((function (){var and__10815__auto__ = o;
if(and__10815__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__10815__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__11091__auto__ = (((o == null))?null:o);
return (function (){var or__10823__auto__ = (cljs.core._deref[(function (){var G__928 = x__11091__auto__;
return goog.typeOf(G__928);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._deref["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj930 = {};
return obj930;
})();

cljs.core._deref_with_timeout = (function cljs$core$_deref_with_timeout(o,msec,timeout_val){
if((function (){var and__10815__auto__ = o;
if(and__10815__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__10815__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__11091__auto__ = (((o == null))?null:o);
return (function (){var or__10823__auto__ = (cljs.core._deref_with_timeout[(function (){var G__934 = x__11091__auto__;
return goog.typeOf(G__934);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj936 = {};
return obj936;
})();

cljs.core._meta = (function cljs$core$_meta(o){
if((function (){var and__10815__auto__ = o;
if(and__10815__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__10815__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__11091__auto__ = (((o == null))?null:o);
return (function (){var or__10823__auto__ = (cljs.core._meta[(function (){var G__940 = x__11091__auto__;
return goog.typeOf(G__940);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._meta["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj942 = {};
return obj942;
})();

cljs.core._with_meta = (function cljs$core$_with_meta(o,meta){
if((function (){var and__10815__auto__ = o;
if(and__10815__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__10815__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__11091__auto__ = (((o == null))?null:o);
return (function (){var or__10823__auto__ = (cljs.core._with_meta[(function (){var G__946 = x__11091__auto__;
return goog.typeOf(G__946);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._with_meta["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj948 = {};
return obj948;
})();

cljs.core._reduce = (function() {
var cljs$core$_reduce = null;
var cljs$core$_reduce__2 = (function (coll,f){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._reduce[(function (){var G__954 = x__11091__auto__;
return goog.typeOf(G__954);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._reduce["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var cljs$core$_reduce__3 = (function (coll,f,start){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._reduce[(function (){var G__956 = x__11091__auto__;
return goog.typeOf(G__956);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._reduce["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
cljs$core$_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return cljs$core$_reduce__2.call(this,coll,f);
case 3:
return cljs$core$_reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$_reduce__2;
cljs$core$_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$_reduce__3;
return cljs$core$_reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj958 = {};
return obj958;
})();

cljs.core._kv_reduce = (function cljs$core$_kv_reduce(coll,f,init){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._kv_reduce[(function (){var G__962 = x__11091__auto__;
return goog.typeOf(G__962);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj964 = {};
return obj964;
})();

cljs.core._equiv = (function cljs$core$_equiv(o,other){
if((function (){var and__10815__auto__ = o;
if(and__10815__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__10815__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__11091__auto__ = (((o == null))?null:o);
return (function (){var or__10823__auto__ = (cljs.core._equiv[(function (){var G__968 = x__11091__auto__;
return goog.typeOf(G__968);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._equiv["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj970 = {};
return obj970;
})();

cljs.core._hash = (function cljs$core$_hash(o){
if((function (){var and__10815__auto__ = o;
if(and__10815__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__10815__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__11091__auto__ = (((o == null))?null:o);
return (function (){var or__10823__auto__ = (cljs.core._hash[(function (){var G__974 = x__11091__auto__;
return goog.typeOf(G__974);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._hash["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj976 = {};
return obj976;
})();

cljs.core._seq = (function cljs$core$_seq(o){
if((function (){var and__10815__auto__ = o;
if(and__10815__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__10815__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__11091__auto__ = (((o == null))?null:o);
return (function (){var or__10823__auto__ = (cljs.core._seq[(function (){var G__980 = x__11091__auto__;
return goog.typeOf(G__980);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._seq["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj982 = {};
return obj982;
})();


cljs.core.IList = (function (){var obj984 = {};
return obj984;
})();


cljs.core.IRecord = (function (){var obj986 = {};
return obj986;
})();


cljs.core.IReversible = (function (){var obj988 = {};
return obj988;
})();

cljs.core._rseq = (function cljs$core$_rseq(coll){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._rseq[(function (){var G__992 = x__11091__auto__;
return goog.typeOf(G__992);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._rseq["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj994 = {};
return obj994;
})();

cljs.core._sorted_seq = (function cljs$core$_sorted_seq(coll,ascending_QMARK_){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._sorted_seq[(function (){var G__998 = x__11091__auto__;
return goog.typeOf(G__998);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function cljs$core$_sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._sorted_seq_from[(function (){var G__1002 = x__11091__auto__;
return goog.typeOf(G__1002);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function cljs$core$_entry_key(coll,entry){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._entry_key[(function (){var G__1006 = x__11091__auto__;
return goog.typeOf(G__1006);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._entry_key["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function cljs$core$_comparator(coll){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._comparator[(function (){var G__1010 = x__11091__auto__;
return goog.typeOf(G__1010);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._comparator["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj1012 = {};
return obj1012;
})();

cljs.core._write = (function cljs$core$_write(writer,s){
if((function (){var and__10815__auto__ = writer;
if(and__10815__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__10815__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__11091__auto__ = (((writer == null))?null:writer);
return (function (){var or__10823__auto__ = (cljs.core._write[(function (){var G__1016 = x__11091__auto__;
return goog.typeOf(G__1016);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._write["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function cljs$core$_flush(writer){
if((function (){var and__10815__auto__ = writer;
if(and__10815__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__10815__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__11091__auto__ = (((writer == null))?null:writer);
return (function (){var or__10823__auto__ = (cljs.core._flush[(function (){var G__1020 = x__11091__auto__;
return goog.typeOf(G__1020);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._flush["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj1022 = {};
return obj1022;
})();

cljs.core._pr_writer = (function cljs$core$_pr_writer(o,writer,opts){
if((function (){var and__10815__auto__ = o;
if(and__10815__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__10815__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__11091__auto__ = (((o == null))?null:o);
return (function (){var or__10823__auto__ = (cljs.core._pr_writer[(function (){var G__1026 = x__11091__auto__;
return goog.typeOf(G__1026);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj1028 = {};
return obj1028;
})();

cljs.core._realized_QMARK_ = (function cljs$core$_realized_QMARK_(d){
if((function (){var and__10815__auto__ = d;
if(and__10815__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__10815__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__11091__auto__ = (((d == null))?null:d);
return (function (){var or__10823__auto__ = (cljs.core._realized_QMARK_[(function (){var G__1032 = x__11091__auto__;
return goog.typeOf(G__1032);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj1034 = {};
return obj1034;
})();

cljs.core._notify_watches = (function cljs$core$_notify_watches(this$,oldval,newval){
if((function (){var and__10815__auto__ = this$;
if(and__10815__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__10815__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__11091__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10823__auto__ = (cljs.core._notify_watches[(function (){var G__1038 = x__11091__auto__;
return goog.typeOf(G__1038);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function cljs$core$_add_watch(this$,key,f){
if((function (){var and__10815__auto__ = this$;
if(and__10815__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__10815__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__11091__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10823__auto__ = (cljs.core._add_watch[(function (){var G__1042 = x__11091__auto__;
return goog.typeOf(G__1042);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._add_watch["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function cljs$core$_remove_watch(this$,key){
if((function (){var and__10815__auto__ = this$;
if(and__10815__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__10815__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__11091__auto__ = (((this$ == null))?null:this$);
return (function (){var or__10823__auto__ = (cljs.core._remove_watch[(function (){var G__1046 = x__11091__auto__;
return goog.typeOf(G__1046);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj1048 = {};
return obj1048;
})();

cljs.core._as_transient = (function cljs$core$_as_transient(coll){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._as_transient[(function (){var G__1052 = x__11091__auto__;
return goog.typeOf(G__1052);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._as_transient["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj1054 = {};
return obj1054;
})();

cljs.core._conj_BANG_ = (function cljs$core$_conj_BANG_(tcoll,val){
if((function (){var and__10815__auto__ = tcoll;
if(and__10815__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__10815__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__11091__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__10823__auto__ = (cljs.core._conj_BANG_[(function (){var G__1058 = x__11091__auto__;
return goog.typeOf(G__1058);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function cljs$core$_persistent_BANG_(tcoll){
if((function (){var and__10815__auto__ = tcoll;
if(and__10815__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__10815__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__11091__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__10823__auto__ = (cljs.core._persistent_BANG_[(function (){var G__1062 = x__11091__auto__;
return goog.typeOf(G__1062);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj1064 = {};
return obj1064;
})();

cljs.core._assoc_BANG_ = (function cljs$core$_assoc_BANG_(tcoll,key,val){
if((function (){var and__10815__auto__ = tcoll;
if(and__10815__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__10815__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__11091__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__10823__auto__ = (cljs.core._assoc_BANG_[(function (){var G__1068 = x__11091__auto__;
return goog.typeOf(G__1068);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj1070 = {};
return obj1070;
})();

cljs.core._dissoc_BANG_ = (function cljs$core$_dissoc_BANG_(tcoll,key){
if((function (){var and__10815__auto__ = tcoll;
if(and__10815__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__10815__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__11091__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__10823__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__1074 = x__11091__auto__;
return goog.typeOf(G__1074);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj1076 = {};
return obj1076;
})();

cljs.core._assoc_n_BANG_ = (function cljs$core$_assoc_n_BANG_(tcoll,n,val){
if((function (){var and__10815__auto__ = tcoll;
if(and__10815__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__10815__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__11091__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__10823__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__1080 = x__11091__auto__;
return goog.typeOf(G__1080);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function cljs$core$_pop_BANG_(tcoll){
if((function (){var and__10815__auto__ = tcoll;
if(and__10815__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__10815__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__11091__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__10823__auto__ = (cljs.core._pop_BANG_[(function (){var G__1084 = x__11091__auto__;
return goog.typeOf(G__1084);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj1086 = {};
return obj1086;
})();

cljs.core._disjoin_BANG_ = (function cljs$core$_disjoin_BANG_(tcoll,v){
if((function (){var and__10815__auto__ = tcoll;
if(and__10815__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__10815__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__11091__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__10823__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__1090 = x__11091__auto__;
return goog.typeOf(G__1090);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj1092 = {};
return obj1092;
})();

cljs.core._compare = (function cljs$core$_compare(x,y){
if((function (){var and__10815__auto__ = x;
if(and__10815__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__10815__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__11091__auto__ = (((x == null))?null:x);
return (function (){var or__10823__auto__ = (cljs.core._compare[(function (){var G__1096 = x__11091__auto__;
return goog.typeOf(G__1096);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._compare["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj1098 = {};
return obj1098;
})();

cljs.core._drop_first = (function cljs$core$_drop_first(coll){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._drop_first[(function (){var G__1102 = x__11091__auto__;
return goog.typeOf(G__1102);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._drop_first["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj1104 = {};
return obj1104;
})();

cljs.core._chunked_first = (function cljs$core$_chunked_first(coll){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._chunked_first[(function (){var G__1108 = x__11091__auto__;
return goog.typeOf(G__1108);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function cljs$core$_chunked_rest(coll){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._chunked_rest[(function (){var G__1112 = x__11091__auto__;
return goog.typeOf(G__1112);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj1114 = {};
return obj1114;
})();

cljs.core._chunked_next = (function cljs$core$_chunked_next(coll){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._chunked_next[(function (){var G__1118 = x__11091__auto__;
return goog.typeOf(G__1118);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj1120 = {};
return obj1120;
})();

cljs.core._name = (function cljs$core$_name(x){
if((function (){var and__10815__auto__ = x;
if(and__10815__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__10815__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__11091__auto__ = (((x == null))?null:x);
return (function (){var or__10823__auto__ = (cljs.core._name[(function (){var G__1124 = x__11091__auto__;
return goog.typeOf(G__1124);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._name["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function cljs$core$_namespace(x){
if((function (){var and__10815__auto__ = x;
if(and__10815__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__10815__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__11091__auto__ = (((x == null))?null:x);
return (function (){var or__10823__auto__ = (cljs.core._namespace[(function (){var G__1128 = x__11091__auto__;
return goog.typeOf(G__1128);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._namespace["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj1130 = {};
return obj1130;
})();


cljs.core.IReset = (function (){var obj1132 = {};
return obj1132;
})();

cljs.core._reset_BANG_ = (function cljs$core$_reset_BANG_(o,new_value){
if((function (){var and__10815__auto__ = o;
if(and__10815__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__10815__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__11091__auto__ = (((o == null))?null:o);
return (function (){var or__10823__auto__ = (cljs.core._reset_BANG_[(function (){var G__1136 = x__11091__auto__;
return goog.typeOf(G__1136);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj1138 = {};
return obj1138;
})();

cljs.core._swap_BANG_ = (function() {
var cljs$core$_swap_BANG_ = null;
var cljs$core$_swap_BANG___2 = (function (o,f){
if((function (){var and__10815__auto__ = o;
if(and__10815__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__10815__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__11091__auto__ = (((o == null))?null:o);
return (function (){var or__10823__auto__ = (cljs.core._swap_BANG_[(function (){var G__1148 = x__11091__auto__;
return goog.typeOf(G__1148);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var cljs$core$_swap_BANG___3 = (function (o,f,a){
if((function (){var and__10815__auto__ = o;
if(and__10815__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__10815__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__11091__auto__ = (((o == null))?null:o);
return (function (){var or__10823__auto__ = (cljs.core._swap_BANG_[(function (){var G__1150 = x__11091__auto__;
return goog.typeOf(G__1150);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var cljs$core$_swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__10815__auto__ = o;
if(and__10815__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__10815__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__11091__auto__ = (((o == null))?null:o);
return (function (){var or__10823__auto__ = (cljs.core._swap_BANG_[(function (){var G__1152 = x__11091__auto__;
return goog.typeOf(G__1152);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var cljs$core$_swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__10815__auto__ = o;
if(and__10815__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__10815__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__11091__auto__ = (((o == null))?null:o);
return (function (){var or__10823__auto__ = (cljs.core._swap_BANG_[(function (){var G__1154 = x__11091__auto__;
return goog.typeOf(G__1154);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
cljs$core$_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return cljs$core$_swap_BANG___2.call(this,o,f);
case 3:
return cljs$core$_swap_BANG___3.call(this,o,f,a);
case 4:
return cljs$core$_swap_BANG___4.call(this,o,f,a,b);
case 5:
return cljs$core$_swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_swap_BANG___2;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$_swap_BANG___3;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$_swap_BANG___4;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = cljs$core$_swap_BANG___5;
return cljs$core$_swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj1156 = {};
return obj1156;
})();

cljs.core._vreset_BANG_ = (function cljs$core$_vreset_BANG_(o,new_value){
if((function (){var and__10815__auto__ = o;
if(and__10815__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__10815__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__11091__auto__ = (((o == null))?null:o);
return (function (){var or__10823__auto__ = (cljs.core._vreset_BANG_[(function (){var G__1160 = x__11091__auto__;
return goog.typeOf(G__1160);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj1162 = {};
return obj1162;
})();

cljs.core._iterator = (function cljs$core$_iterator(coll){
if((function (){var and__10815__auto__ = coll;
if(and__10815__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__10815__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__11091__auto__ = (((coll == null))?null:coll);
return (function (){var or__10823__auto__ = (cljs.core._iterator[(function (){var G__1166 = x__11091__auto__;
return goog.typeOf(G__1166);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._iterator["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function cljs$core$__GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
 * Support so that collections can implement toString without
 * loading all the printing machinery.
 */
cljs.core.pr_str_STAR_ = (function cljs$core$pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function cljs$core$int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__1169 = (4294967295);
var G__1170 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__1169,G__1170) : Math.imul.call(null,G__1169,G__1170));
})() === (0))))){
cljs.core.imul = (function cljs$core$imul(a,b){
var G__1173 = a;
var G__1174 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__1173,G__1174) : Math.imul.call(null,G__1173,G__1174));
});
} else {
cljs.core.imul = (function cljs$core$imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = ((3432918353) | (0));
cljs.core.m3_C2 = ((461845907) | (0));
cljs.core.m3_mix_K1 = (function cljs$core$m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul((k1 | (0)),cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function cljs$core$m3_mix_H1(h1,k1){
return ((cljs.core.imul(cljs.core.int_rotate_left(((h1 | (0)) ^ (k1 | (0))),(13)),(5)) + ((3864292196) | (0))) | (0));
});
cljs.core.m3_fmix = (function cljs$core$m3_fmix(h1,len){
var h1__$1 = (h1 | (0));
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,((2246822507) | (0)));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,((3266489909) | (0)));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function cljs$core$m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function cljs$core$m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__1175 = (i + (2));
var G__1176 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__1175;
h1 = G__1176;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj1178 = {};
return obj1178;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function cljs$core$hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__1179 = (i + (1));
var G__1180 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__1179;
hash = G__1180;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function cljs$core$add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function cljs$core$hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj1184 = {};
return obj1184;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
/**
 * Returns the hash code of its argument. Note this is the hash code
 * consistent with =.
 */
cljs.core.hash = (function cljs$core$hash(o){
if((function (){var G__1187 = o;
if(G__1187){
var bit__11117__auto__ = (G__1187.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__11117__auto__) || (G__1187.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__1188 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__1188) : Math.floor.call(null,G__1188));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function cljs$core$hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
/**
 * Evaluates x and tests if it is an instance of the type
 * c. Returns true or false
 */
cljs.core.instance_QMARK_ = (function cljs$core$instance_QMARK_(t,o){
return (o instanceof t);
});
/**
 * Return true if x is a Symbol
 */
cljs.core.symbol_QMARK_ = (function cljs$core$symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function cljs$core$hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function cljs$core$compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__10815__auto__ = cljs.core.not(a.ns);
if(and__10815__auto__){
return b.ns;
} else {
return and__10815__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__1195 = a.ns;
var G__1196 = b.ns;
return goog.array.defaultCompare(G__1195,G__1196);
})();
if(((0) === nsc)){
var G__1197 = a.name;
var G__1198 = b.name;
return goog.array.defaultCompare(G__1197,G__1198);
} else {
return nsc;
}
}
} else {
var G__1199 = a.name;
var G__1200 = b.name;
return goog.array.defaultCompare(G__1199,G__1200);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__10916__auto__ = self__._hash;
if(!((h__10916__auto__ == null))){
return h__10916__auto__;
} else {
var h__10916__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__10916__auto____$1;

return h__10916__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__1202 = null;
var G__1202__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__1202__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__1202 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__1202__2.call(this,self__,coll);
case 3:
return G__1202__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__1202.cljs$core$IFn$_invoke$arity$2 = G__1202__2;
G__1202.cljs$core$IFn$_invoke$arity$3 = G__1202__3;
return G__1202;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args1201){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args1201)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function cljs$core$__GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var cljs$core$symbol = null;
var cljs$core$symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return cljs$core$symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var cljs$core$symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
cljs$core$symbol = function(ns,name){
switch(arguments.length){
case 1:
return cljs$core$symbol__1.call(this,ns);
case 2:
return cljs$core$symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$symbol.cljs$core$IFn$_invoke$arity$1 = cljs$core$symbol__1;
cljs$core$symbol.cljs$core$IFn$_invoke$arity$2 = cljs$core$symbol__2;
return cljs$core$symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__1250 = null;
var G__1250__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__1250__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__1250__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__1250__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__1250__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__1250__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__1250__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__1250__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__1250__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__1250__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__1250__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__1250__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__1250__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__1250__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__1250__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__1250__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__1250__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__1250__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__1250__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__1250__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__1250__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__1250__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1206 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__1207 = a;
var G__1208 = b;
var G__1209 = c;
var G__1210 = d;
var G__1211 = e;
var G__1212 = f;
var G__1213 = g;
var G__1214 = h;
var G__1215 = i;
var G__1216 = j;
var G__1217 = k;
var G__1218 = l;
var G__1219 = m;
var G__1220 = n;
var G__1221 = o;
var G__1222 = p;
var G__1223 = q;
var G__1224 = r;
var G__1225 = s;
var G__1226 = t;
var G__1227 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__1206,G__1207,G__1208,G__1209,G__1210,G__1211,G__1212,G__1213,G__1214,G__1215,G__1216,G__1217,G__1218,G__1219,G__1220,G__1221,G__1222,G__1223,G__1224,G__1225,G__1226,G__1227) : cljs.core.apply.call(null,G__1206,G__1207,G__1208,G__1209,G__1210,G__1211,G__1212,G__1213,G__1214,G__1215,G__1216,G__1217,G__1218,G__1219,G__1220,G__1221,G__1222,G__1223,G__1224,G__1225,G__1226,G__1227));
});
G__1250 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__1250__1.call(this,self__);
case 2:
return G__1250__2.call(this,self__,a);
case 3:
return G__1250__3.call(this,self__,a,b);
case 4:
return G__1250__4.call(this,self__,a,b,c);
case 5:
return G__1250__5.call(this,self__,a,b,c,d);
case 6:
return G__1250__6.call(this,self__,a,b,c,d,e);
case 7:
return G__1250__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__1250__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__1250__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__1250__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__1250__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__1250__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__1250__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__1250__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__1250__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__1250__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__1250__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__1250__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__1250__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__1250__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__1250__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__1250__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__1250.cljs$core$IFn$_invoke$arity$1 = G__1250__1;
G__1250.cljs$core$IFn$_invoke$arity$2 = G__1250__2;
G__1250.cljs$core$IFn$_invoke$arity$3 = G__1250__3;
G__1250.cljs$core$IFn$_invoke$arity$4 = G__1250__4;
G__1250.cljs$core$IFn$_invoke$arity$5 = G__1250__5;
G__1250.cljs$core$IFn$_invoke$arity$6 = G__1250__6;
G__1250.cljs$core$IFn$_invoke$arity$7 = G__1250__7;
G__1250.cljs$core$IFn$_invoke$arity$8 = G__1250__8;
G__1250.cljs$core$IFn$_invoke$arity$9 = G__1250__9;
G__1250.cljs$core$IFn$_invoke$arity$10 = G__1250__10;
G__1250.cljs$core$IFn$_invoke$arity$11 = G__1250__11;
G__1250.cljs$core$IFn$_invoke$arity$12 = G__1250__12;
G__1250.cljs$core$IFn$_invoke$arity$13 = G__1250__13;
G__1250.cljs$core$IFn$_invoke$arity$14 = G__1250__14;
G__1250.cljs$core$IFn$_invoke$arity$15 = G__1250__15;
G__1250.cljs$core$IFn$_invoke$arity$16 = G__1250__16;
G__1250.cljs$core$IFn$_invoke$arity$17 = G__1250__17;
G__1250.cljs$core$IFn$_invoke$arity$18 = G__1250__18;
G__1250.cljs$core$IFn$_invoke$arity$19 = G__1250__19;
G__1250.cljs$core$IFn$_invoke$arity$20 = G__1250__20;
G__1250.cljs$core$IFn$_invoke$arity$21 = G__1250__21;
G__1250.cljs$core$IFn$_invoke$arity$22 = G__1250__22;
return G__1250;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args1205){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args1205)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__1228 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__1229 = a;
var G__1230 = b;
var G__1231 = c;
var G__1232 = d;
var G__1233 = e;
var G__1234 = f;
var G__1235 = g;
var G__1236 = h;
var G__1237 = i;
var G__1238 = j;
var G__1239 = k;
var G__1240 = l;
var G__1241 = m;
var G__1242 = n;
var G__1243 = o;
var G__1244 = p;
var G__1245 = q;
var G__1246 = r;
var G__1247 = s;
var G__1248 = t;
var G__1249 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__1228,G__1229,G__1230,G__1231,G__1232,G__1233,G__1234,G__1235,G__1236,G__1237,G__1238,G__1239,G__1240,G__1241,G__1242,G__1243,G__1244,G__1245,G__1246,G__1247,G__1248,G__1249) : cljs.core.apply.call(null,G__1228,G__1229,G__1230,G__1231,G__1232,G__1233,G__1234,G__1235,G__1236,G__1237,G__1238,G__1239,G__1240,G__1241,G__1242,G__1243,G__1244,G__1245,G__1246,G__1247,G__1248,G__1249));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function cljs$core$__GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



/**
 * Return true if x implements IIterable protocol.
 */
cljs.core.iterable_QMARK_ = (function cljs$core$iterable_QMARK_(x){
var G__1252 = x;
if(G__1252){
var bit__11120__auto__ = null;
if(cljs.core.truth_((function (){var or__10823__auto__ = bit__11120__auto__;
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
return G__1252.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__1252.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__1252);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__1252);
}
});
/**
 * Clone the supplied value which must implement ICloneable.
 */
cljs.core.clone = (function cljs$core$clone(value){
return cljs.core._clone(value);
});
/**
 * Return true if x implements ICloneable protocol.
 */
cljs.core.cloneable_QMARK_ = (function cljs$core$cloneable_QMARK_(value){
var G__1254 = value;
if(G__1254){
var bit__11120__auto__ = (G__1254.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__11120__auto__) || (G__1254.cljs$core$ICloneable$)){
return true;
} else {
if((!G__1254.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__1254);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__1254);
}
});
/**
 * Returns a seq on the collection. If the collection is
 * empty, returns nil.  (seq nil) returns nil. seq also works on
 * Strings.
 */
cljs.core.seq = (function cljs$core$seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__1256 = coll;
if(G__1256){
var bit__11117__auto__ = (G__1256.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__11117__auto__) || (G__1256.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
 * Returns the first item in the collection. Calls seq on its
 * argument. If coll is nil, returns nil.
 */
cljs.core.first = (function cljs$core$first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__1258 = coll;
if(G__1258){
var bit__11117__auto__ = (G__1258.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__11117__auto__) || (G__1258.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
 * Returns a possibly empty seq of the items after the first. Calls seq on its
 * argument.
 */
cljs.core.rest = (function cljs$core$rest(coll){
if(!((coll == null))){
if((function (){var G__1260 = coll;
if(G__1260){
var bit__11117__auto__ = (G__1260.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__11117__auto__) || (G__1260.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
 * Returns a seq of the items after the first. Calls seq on its
 * argument.  If there are no more items, returns nil
 */
cljs.core.next = (function cljs$core$next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__1262 = coll;
if(G__1262){
var bit__11117__auto__ = (G__1262.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__11117__auto__) || (G__1262.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
 * Equality. Returns true if x equals y, false if not. Compares
 * numbers and collections in a type-independent manner.  Clojure's immutable data
 * structures define -equiv (and thus =) as a value, not an identity,
 * comparison.
 * @param {...*} var_args
 */
cljs.core._EQ_ = (function() {
var cljs$core$_EQ_ = null;
var cljs$core$_EQ___1 = (function (x){
return true;
});
var cljs$core$_EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var cljs$core$_EQ___3 = (function() { 
var G__1267__delegate = function (x,y,more){
while(true){
if(cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__1268 = y;
var G__1269 = cljs.core.first(more);
var G__1270 = cljs.core.next(more);
x = G__1268;
y = G__1269;
more = G__1270;
continue;
} else {
return cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__1267 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__1271__i = 0, G__1271__a = new Array(arguments.length -  2);
while (G__1271__i < G__1271__a.length) {G__1271__a[G__1271__i] = arguments[G__1271__i + 2]; ++G__1271__i;}
  more = new cljs.core.IndexedSeq(G__1271__a,0);
} 
return G__1267__delegate.call(this,x,y,more);};
G__1267.cljs$lang$maxFixedArity = 2;
G__1267.cljs$lang$applyTo = (function (arglist__1272){
var x = cljs.core.first(arglist__1272);
arglist__1272 = cljs.core.next(arglist__1272);
var y = cljs.core.first(arglist__1272);
var more = cljs.core.rest(arglist__1272);
return G__1267__delegate(x,y,more);
});
G__1267.cljs$core$IFn$_invoke$arity$variadic = G__1267__delegate;
return G__1267;
})()
;
cljs$core$_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_EQ___1.call(this,x);
case 2:
return cljs$core$_EQ___2.call(this,x,y);
default:
var G__1273 = null;
if (arguments.length > 2) {
var G__1274__i = 0, G__1274__a = new Array(arguments.length -  2);
while (G__1274__i < G__1274__a.length) {G__1274__a[G__1274__i] = arguments[G__1274__i + 2]; ++G__1274__i;}
G__1273 = new cljs.core.IndexedSeq(G__1274__a,0);
}
return cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1273);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_EQ_.cljs$lang$applyTo = cljs$core$_EQ___3.cljs$lang$applyTo;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ___1;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ___2;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function cljs$core$__GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

/**
 * EXPERIMENTAL: Return a ES2015 compatible iterator for coll.
 */
cljs.core.es6_iterator = (function cljs$core$es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__1275 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__1275) : cljs.core.es6_iterator_seq.call(null,G__1275));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function cljs$core$__GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

/**
 * EXPERIMENTAL: Given an ES2015 compatible iterator return a seq.
 */
cljs.core.es6_iterator_seq = (function cljs$core$es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
 * Mix final collection hash for ordered or unordered collections.
 * hash-basis is the combined collection hash, count is the number
 * of elements included in the basis. Note this is the hash code
 * consistent with =, different from .hashCode.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.mix_collection_hash = (function cljs$core$mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
 * Returns the hash code, consistent with =, for an external ordered
 * collection implementing Iterable.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_ordered_coll = (function cljs$core$hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__1276 = (n + (1));
var G__1277 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__1278 = cljs.core.next(coll__$1);
n = G__1276;
hash_code = G__1277;
coll__$1 = G__1278;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
 * Returns the hash code, consistent with =, for an external unordered
 * collection implementing Iterable. For maps, the iterator should
 * return map entries whose hash is computed as
 * (hash-ordered-coll [k v]).
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_unordered_coll = (function cljs$core$hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__1279 = (n + (1));
var G__1280 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__1281 = cljs.core.next(coll__$1);
n = G__1279;
hash_code = G__1280;
coll__$1 = G__1281;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__1282 = o;
return goog.getUid(G__1282);
}));
/**
 * Returns a number one greater than num.
 */
cljs.core.inc = (function cljs$core$inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function cljs$core$__GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
 * Wraps x in a way such that a reduce will terminate with the value x
 */
cljs.core.reduced = (function cljs$core$reduced(x){
return (new cljs.core.Reduced(x));
});
/**
 * Returns true if x is the result of a call to reduced
 */
cljs.core.reduced_QMARK_ = (function cljs$core$reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
 * If x is already reduced?, returns it, else returns (reduced x)
 */
cljs.core.ensure_reduced = (function cljs$core$ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
 * If x is reduced?, returns (deref x), else returns x
 */
cljs.core.unreduced = (function cljs$core$unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__1284 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__1284) : cljs.core.deref.call(null,G__1284));
} else {
return x;
}
});
/**
 * Also reader macro: @var/@atom/@delay. Returns the
 * most-recently-committed value of ref. When applied to a var
 * or atom, returns its current state. When applied to a delay, forces
 * it if not already forced. See also - realized?.
 */
cljs.core.deref = (function cljs$core$deref(o){
return cljs.core._deref(o);
});
/**
 * Accepts any collection which satisfies the ICount and IIndexed protocols and
 * reduces them without incurring seq initialization
 */
cljs.core.ci_reduce = (function() {
var cljs$core$ci_reduce = null;
var cljs$core$ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__1291 = val;
var G__1292 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__1291,G__1292) : f.call(null,G__1291,G__1292));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__1297 = nval;
var G__1298 = (n + (1));
val = G__1297;
n = G__1298;
continue;
}
} else {
return val;
}
break;
}
}
});
var cljs$core$ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__1293 = val__$1;
var G__1294 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__1293,G__1294) : f.call(null,G__1293,G__1294));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__1299 = nval;
var G__1300 = (n + (1));
val__$1 = G__1299;
n = G__1300;
continue;
}
} else {
return val__$1;
}
break;
}
});
var cljs$core$ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__1295 = val__$1;
var G__1296 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__1295,G__1296) : f.call(null,G__1295,G__1296));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__1301 = nval;
var G__1302 = (n + (1));
val__$1 = G__1301;
n = G__1302;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return cljs$core$ci_reduce__2.call(this,cicoll,f);
case 3:
return cljs$core$ci_reduce__3.call(this,cicoll,f,val);
case 4:
return cljs$core$ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$ci_reduce__2;
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$ci_reduce__3;
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$ci_reduce__4;
return cljs$core$ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var cljs$core$array_reduce = null;
var cljs$core$array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__1309 = val;
var G__1310 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__1309,G__1310) : f.call(null,G__1309,G__1310));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__1315 = nval;
var G__1316 = (n + (1));
val = G__1315;
n = G__1316;
continue;
}
} else {
return val;
}
break;
}
}
});
var cljs$core$array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__1311 = val__$1;
var G__1312 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__1311,G__1312) : f.call(null,G__1311,G__1312));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__1317 = nval;
var G__1318 = (n + (1));
val__$1 = G__1317;
n = G__1318;
continue;
}
} else {
return val__$1;
}
break;
}
});
var cljs$core$array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__1313 = val__$1;
var G__1314 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__1313,G__1314) : f.call(null,G__1313,G__1314));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__1319 = nval;
var G__1320 = (n + (1));
val__$1 = G__1319;
n = G__1320;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return cljs$core$array_reduce__2.call(this,arr,f);
case 3:
return cljs$core$array_reduce__3.call(this,arr,f,val);
case 4:
return cljs$core$array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_reduce__2;
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_reduce__3;
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$array_reduce__4;
return cljs$core$array_reduce;
})()
;



/**
 * Returns true if coll implements count in constant time
 */
cljs.core.counted_QMARK_ = (function cljs$core$counted_QMARK_(x){
var G__1322 = x;
if(G__1322){
var bit__11120__auto__ = (G__1322.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__11120__auto__) || (G__1322.cljs$core$ICounted$)){
return true;
} else {
if((!G__1322.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__1322);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__1322);
}
});
/**
 * Returns true if coll implements nth in constant time
 */
cljs.core.indexed_QMARK_ = (function cljs$core$indexed_QMARK_(x){
var G__1324 = x;
if(G__1324){
var bit__11120__auto__ = (G__1324.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__11120__auto__) || (G__1324.cljs$core$IIndexed$)){
return true;
} else {
if((!G__1324.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__1324);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__1324);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function cljs$core$__GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__1325 = coll__$1;
var G__1326 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__1325,G__1326) : cljs.core.equiv_sequential.call(null,G__1325,G__1326));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__1327 = o;
var G__1328 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__1327,G__1328) : cljs.core.cons.call(null,G__1327,G__1328));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function cljs$core$__GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));
/**
 * Create seq from a primitive JavaScript Array-like.
 */
cljs.core.prim_seq = (function() {
var cljs$core$prim_seq = null;
var cljs$core$prim_seq__1 = (function (prim){
return cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var cljs$core$prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
cljs$core$prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return cljs$core$prim_seq__1.call(this,prim);
case 2:
return cljs$core$prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$prim_seq__1;
cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$prim_seq__2;
return cljs$core$prim_seq;
})()
;
/**
 * Create a seq from a JavaScript array.
 */
cljs.core.array_seq = (function() {
var cljs$core$array_seq = null;
var cljs$core$array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var cljs$core$array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
cljs$core$array_seq = function(array,i){
switch(arguments.length){
case 1:
return cljs$core$array_seq__1.call(this,array);
case 2:
return cljs$core$array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_seq__1;
cljs$core$array_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_seq__2;
return cljs$core$array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__1331 = coll__$1;
var G__1332 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__1331,G__1332) : cljs.core.equiv_sequential.call(null,G__1331,G__1332));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__1333 = cljs.core.List.EMPTY;
var G__1334 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__1333,G__1334) : cljs.core.with_meta.call(null,G__1333,G__1334));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__1335 = f;
var G__1336 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__1335,G__1336) : cljs.core.seq_reduce.call(null,G__1335,G__1336));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__1337 = f;
var G__1338 = start;
var G__1339 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__1337,G__1338,G__1339) : cljs.core.seq_reduce.call(null,G__1337,G__1338,G__1339));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__1340 = o;
var G__1341 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__1340,G__1341) : cljs.core.cons.call(null,G__1340,G__1341));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function cljs$core$__GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));
/**
 * Same as (first (next x))
 */
cljs.core.second = (function cljs$core$second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (first (first x))
 */
cljs.core.ffirst = (function cljs$core$ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
 * Same as (next (first x))
 */
cljs.core.nfirst = (function cljs$core$nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
 * Same as (first (next x))
 */
cljs.core.fnext = (function cljs$core$fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (next (next x))
 */
cljs.core.nnext = (function cljs$core$nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
 * Return the last item in coll, in linear time
 */
cljs.core.last = (function cljs$core$last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__1342 = sn;
s = G__1342;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
 * conj[oin]. Returns a new collection with the xs
 * 'added'. (conj nil item) returns (item).  The 'addition' may
 * happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj = (function() {
var cljs$core$conj = null;
var cljs$core$conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var cljs$core$conj__1 = (function (coll){
return coll;
});
var cljs$core$conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var cljs$core$conj__3 = (function() { 
var G__1347__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__1348 = cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__1349 = cljs.core.first(xs);
var G__1350 = cljs.core.next(xs);
coll = G__1348;
x = G__1349;
xs = G__1350;
continue;
} else {
return cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__1347 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__1351__i = 0, G__1351__a = new Array(arguments.length -  2);
while (G__1351__i < G__1351__a.length) {G__1351__a[G__1351__i] = arguments[G__1351__i + 2]; ++G__1351__i;}
  xs = new cljs.core.IndexedSeq(G__1351__a,0);
} 
return G__1347__delegate.call(this,coll,x,xs);};
G__1347.cljs$lang$maxFixedArity = 2;
G__1347.cljs$lang$applyTo = (function (arglist__1352){
var coll = cljs.core.first(arglist__1352);
arglist__1352 = cljs.core.next(arglist__1352);
var x = cljs.core.first(arglist__1352);
var xs = cljs.core.rest(arglist__1352);
return G__1347__delegate(coll,x,xs);
});
G__1347.cljs$core$IFn$_invoke$arity$variadic = G__1347__delegate;
return G__1347;
})()
;
cljs$core$conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return cljs$core$conj__0.call(this);
case 1:
return cljs$core$conj__1.call(this,coll);
case 2:
return cljs$core$conj__2.call(this,coll,x);
default:
var G__1353 = null;
if (arguments.length > 2) {
var G__1354__i = 0, G__1354__a = new Array(arguments.length -  2);
while (G__1354__i < G__1354__a.length) {G__1354__a[G__1354__i] = arguments[G__1354__i + 2]; ++G__1354__i;}
G__1353 = new cljs.core.IndexedSeq(G__1354__a,0);
}
return cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__1353);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$conj.cljs$lang$maxFixedArity = 2;
cljs$core$conj.cljs$lang$applyTo = cljs$core$conj__3.cljs$lang$applyTo;
cljs$core$conj.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj__0;
cljs$core$conj.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj__1;
cljs$core$conj.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj__2;
cljs$core$conj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$conj;
})()
;
/**
 * Returns an empty collection of the same category as coll, or nil
 */
cljs.core.empty = (function cljs$core$empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function cljs$core$accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__1355 = cljs.core.next(s);
var G__1356 = (acc + (1));
s = G__1355;
acc = G__1356;
continue;
}
break;
}
});
/**
 * Returns the number of items in the collection. (count nil) returns
 * 0.  Also works on strings, arrays, and Maps
 */
cljs.core.count = (function cljs$core$count(coll){
if(!((coll == null))){
if((function (){var G__1358 = coll;
if(G__1358){
var bit__11117__auto__ = (G__1358.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__11117__auto__) || (G__1358.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var cljs$core$linear_traversal_nth = null;
var cljs$core$linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__1359 = cljs.core.next(coll);
var G__1360 = (n - (1));
coll = G__1359;
n = G__1360;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var cljs$core$linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__1361 = cljs.core.next(coll);
var G__1362 = (n - (1));
var G__1363 = not_found;
coll = G__1361;
n = G__1362;
not_found = G__1363;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
cljs$core$linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$linear_traversal_nth__2.call(this,coll,n);
case 3:
return cljs$core$linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$linear_traversal_nth__2;
cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$linear_traversal_nth__3;
return cljs$core$linear_traversal_nth;
})()
;
/**
 * Returns the value at the index. get returns nil if index out of
 * bounds, nth throws an exception unless not-found is supplied.  nth
 * also works for strings, arrays, regex Matchers and Lists, and,
 * in O(n) time, for sequences.
 */
cljs.core.nth = (function() {
var cljs$core$nth = null;
var cljs$core$nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__1368 = coll;
if(G__1368){
var bit__11117__auto__ = (G__1368.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__11117__auto__) || (G__1368.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__1369 = coll;
if(G__1369){
var bit__11120__auto__ = (G__1369.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__11120__auto__) || (G__1369.cljs$core$ISeq$)){
return true;
} else {
if((!G__1369.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__1369);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__1369);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var cljs$core$nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__1370 = coll;
if(G__1370){
var bit__11117__auto__ = (G__1370.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__11117__auto__) || (G__1370.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__1371 = coll;
if(G__1371){
var bit__11120__auto__ = (G__1371.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__11120__auto__) || (G__1371.cljs$core$ISeq$)){
return true;
} else {
if((!G__1371.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__1371);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__1371);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
cljs$core$nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$nth__2.call(this,coll,n);
case 3:
return cljs$core$nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$nth__2;
cljs$core$nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$nth__3;
return cljs$core$nth;
})()
;
/**
 * Returns the nth rest of coll, coll when n is 0.
 */
cljs.core.nthrest = (function cljs$core$nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__1372 = (n__$1 - (1));
var G__1373 = cljs.core.rest(xs);
n__$1 = G__1372;
xs = G__1373;
continue;
} else {
return xs;
}
break;
}
});
/**
 * Returns the value mapped to key, not-found or nil if key not present.
 */
cljs.core.get = (function() {
var cljs$core$get = null;
var cljs$core$get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__1376 = o;
if(G__1376){
var bit__11117__auto__ = (G__1376.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__11117__auto__) || (G__1376.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var cljs$core$get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__1377 = o;
if(G__1377){
var bit__11117__auto__ = (G__1377.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__11117__auto__) || (G__1377.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
cljs$core$get = function(o,k,not_found){
switch(arguments.length){
case 2:
return cljs$core$get__2.call(this,o,k);
case 3:
return cljs$core$get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$get.cljs$core$IFn$_invoke$arity$2 = cljs$core$get__2;
cljs$core$get.cljs$core$IFn$_invoke$arity$3 = cljs$core$get__3;
return cljs$core$get;
})()
;
/**
 * assoc[iate]. When applied to a map, returns a new map of the
 * same (hashed/sorted) type, that contains the mapping of key(s) to
 * val(s). When applied to a vector, returns a new vector that
 * contains val at index.
 * @param {...*} var_args
 */
cljs.core.assoc = (function() {
var cljs$core$assoc = null;
var cljs$core$assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var cljs$core$assoc__4 = (function() { 
var G__1381__delegate = function (coll,k,v,kvs){
while(true){
var ret = cljs$core$assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__1382 = ret;
var G__1383 = cljs.core.first(kvs);
var G__1384 = cljs.core.second(kvs);
var G__1385 = cljs.core.nnext(kvs);
coll = G__1382;
k = G__1383;
v = G__1384;
kvs = G__1385;
continue;
} else {
return ret;
}
break;
}
};
var G__1381 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__1386__i = 0, G__1386__a = new Array(arguments.length -  3);
while (G__1386__i < G__1386__a.length) {G__1386__a[G__1386__i] = arguments[G__1386__i + 3]; ++G__1386__i;}
  kvs = new cljs.core.IndexedSeq(G__1386__a,0);
} 
return G__1381__delegate.call(this,coll,k,v,kvs);};
G__1381.cljs$lang$maxFixedArity = 3;
G__1381.cljs$lang$applyTo = (function (arglist__1387){
var coll = cljs.core.first(arglist__1387);
arglist__1387 = cljs.core.next(arglist__1387);
var k = cljs.core.first(arglist__1387);
arglist__1387 = cljs.core.next(arglist__1387);
var v = cljs.core.first(arglist__1387);
var kvs = cljs.core.rest(arglist__1387);
return G__1381__delegate(coll,k,v,kvs);
});
G__1381.cljs$core$IFn$_invoke$arity$variadic = G__1381__delegate;
return G__1381;
})()
;
cljs$core$assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return cljs$core$assoc__3.call(this,coll,k,v);
default:
var G__1388 = null;
if (arguments.length > 3) {
var G__1389__i = 0, G__1389__a = new Array(arguments.length -  3);
while (G__1389__i < G__1389__a.length) {G__1389__a[G__1389__i] = arguments[G__1389__i + 3]; ++G__1389__i;}
G__1388 = new cljs.core.IndexedSeq(G__1389__a,0);
}
return cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__1388);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$assoc.cljs$lang$maxFixedArity = 3;
cljs$core$assoc.cljs$lang$applyTo = cljs$core$assoc__4.cljs$lang$applyTo;
cljs$core$assoc.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc__3;
cljs$core$assoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$assoc;
})()
;
/**
 * dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
 * that does not contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc = (function() {
var cljs$core$dissoc = null;
var cljs$core$dissoc__1 = (function (coll){
return coll;
});
var cljs$core$dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var cljs$core$dissoc__3 = (function() { 
var G__1392__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__1393 = ret;
var G__1394 = cljs.core.first(ks);
var G__1395 = cljs.core.next(ks);
coll = G__1393;
k = G__1394;
ks = G__1395;
continue;
} else {
return ret;
}
}
break;
}
};
var G__1392 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__1396__i = 0, G__1396__a = new Array(arguments.length -  2);
while (G__1396__i < G__1396__a.length) {G__1396__a[G__1396__i] = arguments[G__1396__i + 2]; ++G__1396__i;}
  ks = new cljs.core.IndexedSeq(G__1396__a,0);
} 
return G__1392__delegate.call(this,coll,k,ks);};
G__1392.cljs$lang$maxFixedArity = 2;
G__1392.cljs$lang$applyTo = (function (arglist__1397){
var coll = cljs.core.first(arglist__1397);
arglist__1397 = cljs.core.next(arglist__1397);
var k = cljs.core.first(arglist__1397);
var ks = cljs.core.rest(arglist__1397);
return G__1392__delegate(coll,k,ks);
});
G__1392.cljs$core$IFn$_invoke$arity$variadic = G__1392__delegate;
return G__1392;
})()
;
cljs$core$dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return cljs$core$dissoc__1.call(this,coll);
case 2:
return cljs$core$dissoc__2.call(this,coll,k);
default:
var G__1398 = null;
if (arguments.length > 2) {
var G__1399__i = 0, G__1399__a = new Array(arguments.length -  2);
while (G__1399__i < G__1399__a.length) {G__1399__a[G__1399__i] = arguments[G__1399__i + 2]; ++G__1399__i;}
G__1398 = new cljs.core.IndexedSeq(G__1399__a,0);
}
return cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__1398);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dissoc.cljs$lang$maxFixedArity = 2;
cljs$core$dissoc.cljs$lang$applyTo = cljs$core$dissoc__3.cljs$lang$applyTo;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$1 = cljs$core$dissoc__1;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc__2;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$dissoc;
})()
;
/**
 * Return true if f is a JavaScript function or satisfies the Fn protocol.
 */
cljs.core.fn_QMARK_ = (function cljs$core$fn_QMARK_(f){
var or__10823__auto__ = (function (){var G__1404 = f;
return goog.isFunction(G__1404);
})();
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
var G__1405 = f;
if(G__1405){
var bit__11120__auto__ = null;
if(cljs.core.truth_((function (){var or__10823__auto____$1 = bit__11120__auto__;
if(cljs.core.truth_(or__10823__auto____$1)){
return or__10823__auto____$1;
} else {
return G__1405.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__1405.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__1405);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__1405);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__1871 = null;
var G__1871__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__1871__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1407 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__1407) : self__.afn.call(null,G__1407));
});
var G__1871__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1408 = a;
var G__1409 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__1408,G__1409) : self__.afn.call(null,G__1408,G__1409));
});
var G__1871__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1410 = a;
var G__1411 = b;
var G__1412 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__1410,G__1411,G__1412) : self__.afn.call(null,G__1410,G__1411,G__1412));
});
var G__1871__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1413 = a;
var G__1414 = b;
var G__1415 = c;
var G__1416 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__1413,G__1414,G__1415,G__1416) : self__.afn.call(null,G__1413,G__1414,G__1415,G__1416));
});
var G__1871__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1417 = a;
var G__1418 = b;
var G__1419 = c;
var G__1420 = d;
var G__1421 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__1417,G__1418,G__1419,G__1420,G__1421) : self__.afn.call(null,G__1417,G__1418,G__1419,G__1420,G__1421));
});
var G__1871__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1422 = a;
var G__1423 = b;
var G__1424 = c;
var G__1425 = d;
var G__1426 = e;
var G__1427 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__1422,G__1423,G__1424,G__1425,G__1426,G__1427) : self__.afn.call(null,G__1422,G__1423,G__1424,G__1425,G__1426,G__1427));
});
var G__1871__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1428 = a;
var G__1429 = b;
var G__1430 = c;
var G__1431 = d;
var G__1432 = e;
var G__1433 = f;
var G__1434 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__1428,G__1429,G__1430,G__1431,G__1432,G__1433,G__1434) : self__.afn.call(null,G__1428,G__1429,G__1430,G__1431,G__1432,G__1433,G__1434));
});
var G__1871__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1435 = a;
var G__1436 = b;
var G__1437 = c;
var G__1438 = d;
var G__1439 = e;
var G__1440 = f;
var G__1441 = g;
var G__1442 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__1435,G__1436,G__1437,G__1438,G__1439,G__1440,G__1441,G__1442) : self__.afn.call(null,G__1435,G__1436,G__1437,G__1438,G__1439,G__1440,G__1441,G__1442));
});
var G__1871__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1443 = a;
var G__1444 = b;
var G__1445 = c;
var G__1446 = d;
var G__1447 = e;
var G__1448 = f;
var G__1449 = g;
var G__1450 = h;
var G__1451 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__1443,G__1444,G__1445,G__1446,G__1447,G__1448,G__1449,G__1450,G__1451) : self__.afn.call(null,G__1443,G__1444,G__1445,G__1446,G__1447,G__1448,G__1449,G__1450,G__1451));
});
var G__1871__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1452 = a;
var G__1453 = b;
var G__1454 = c;
var G__1455 = d;
var G__1456 = e;
var G__1457 = f;
var G__1458 = g;
var G__1459 = h;
var G__1460 = i;
var G__1461 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__1452,G__1453,G__1454,G__1455,G__1456,G__1457,G__1458,G__1459,G__1460,G__1461) : self__.afn.call(null,G__1452,G__1453,G__1454,G__1455,G__1456,G__1457,G__1458,G__1459,G__1460,G__1461));
});
var G__1871__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1462 = a;
var G__1463 = b;
var G__1464 = c;
var G__1465 = d;
var G__1466 = e;
var G__1467 = f;
var G__1468 = g;
var G__1469 = h;
var G__1470 = i;
var G__1471 = j;
var G__1472 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__1462,G__1463,G__1464,G__1465,G__1466,G__1467,G__1468,G__1469,G__1470,G__1471,G__1472) : self__.afn.call(null,G__1462,G__1463,G__1464,G__1465,G__1466,G__1467,G__1468,G__1469,G__1470,G__1471,G__1472));
});
var G__1871__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1473 = a;
var G__1474 = b;
var G__1475 = c;
var G__1476 = d;
var G__1477 = e;
var G__1478 = f;
var G__1479 = g;
var G__1480 = h;
var G__1481 = i;
var G__1482 = j;
var G__1483 = k;
var G__1484 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__1473,G__1474,G__1475,G__1476,G__1477,G__1478,G__1479,G__1480,G__1481,G__1482,G__1483,G__1484) : self__.afn.call(null,G__1473,G__1474,G__1475,G__1476,G__1477,G__1478,G__1479,G__1480,G__1481,G__1482,G__1483,G__1484));
});
var G__1871__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1485 = a;
var G__1486 = b;
var G__1487 = c;
var G__1488 = d;
var G__1489 = e;
var G__1490 = f;
var G__1491 = g;
var G__1492 = h;
var G__1493 = i;
var G__1494 = j;
var G__1495 = k;
var G__1496 = l;
var G__1497 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__1485,G__1486,G__1487,G__1488,G__1489,G__1490,G__1491,G__1492,G__1493,G__1494,G__1495,G__1496,G__1497) : self__.afn.call(null,G__1485,G__1486,G__1487,G__1488,G__1489,G__1490,G__1491,G__1492,G__1493,G__1494,G__1495,G__1496,G__1497));
});
var G__1871__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1498 = a;
var G__1499 = b;
var G__1500 = c;
var G__1501 = d;
var G__1502 = e;
var G__1503 = f;
var G__1504 = g;
var G__1505 = h;
var G__1506 = i;
var G__1507 = j;
var G__1508 = k;
var G__1509 = l;
var G__1510 = m;
var G__1511 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__1498,G__1499,G__1500,G__1501,G__1502,G__1503,G__1504,G__1505,G__1506,G__1507,G__1508,G__1509,G__1510,G__1511) : self__.afn.call(null,G__1498,G__1499,G__1500,G__1501,G__1502,G__1503,G__1504,G__1505,G__1506,G__1507,G__1508,G__1509,G__1510,G__1511));
});
var G__1871__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1512 = a;
var G__1513 = b;
var G__1514 = c;
var G__1515 = d;
var G__1516 = e;
var G__1517 = f;
var G__1518 = g;
var G__1519 = h;
var G__1520 = i;
var G__1521 = j;
var G__1522 = k;
var G__1523 = l;
var G__1524 = m;
var G__1525 = n;
var G__1526 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__1512,G__1513,G__1514,G__1515,G__1516,G__1517,G__1518,G__1519,G__1520,G__1521,G__1522,G__1523,G__1524,G__1525,G__1526) : self__.afn.call(null,G__1512,G__1513,G__1514,G__1515,G__1516,G__1517,G__1518,G__1519,G__1520,G__1521,G__1522,G__1523,G__1524,G__1525,G__1526));
});
var G__1871__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1527 = a;
var G__1528 = b;
var G__1529 = c;
var G__1530 = d;
var G__1531 = e;
var G__1532 = f;
var G__1533 = g;
var G__1534 = h;
var G__1535 = i;
var G__1536 = j;
var G__1537 = k;
var G__1538 = l;
var G__1539 = m;
var G__1540 = n;
var G__1541 = o;
var G__1542 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__1527,G__1528,G__1529,G__1530,G__1531,G__1532,G__1533,G__1534,G__1535,G__1536,G__1537,G__1538,G__1539,G__1540,G__1541,G__1542) : self__.afn.call(null,G__1527,G__1528,G__1529,G__1530,G__1531,G__1532,G__1533,G__1534,G__1535,G__1536,G__1537,G__1538,G__1539,G__1540,G__1541,G__1542));
});
var G__1871__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1543 = a;
var G__1544 = b;
var G__1545 = c;
var G__1546 = d;
var G__1547 = e;
var G__1548 = f;
var G__1549 = g;
var G__1550 = h;
var G__1551 = i;
var G__1552 = j;
var G__1553 = k;
var G__1554 = l;
var G__1555 = m;
var G__1556 = n;
var G__1557 = o;
var G__1558 = p;
var G__1559 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__1543,G__1544,G__1545,G__1546,G__1547,G__1548,G__1549,G__1550,G__1551,G__1552,G__1553,G__1554,G__1555,G__1556,G__1557,G__1558,G__1559) : self__.afn.call(null,G__1543,G__1544,G__1545,G__1546,G__1547,G__1548,G__1549,G__1550,G__1551,G__1552,G__1553,G__1554,G__1555,G__1556,G__1557,G__1558,G__1559));
});
var G__1871__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1560 = a;
var G__1561 = b;
var G__1562 = c;
var G__1563 = d;
var G__1564 = e;
var G__1565 = f;
var G__1566 = g;
var G__1567 = h;
var G__1568 = i;
var G__1569 = j;
var G__1570 = k;
var G__1571 = l;
var G__1572 = m;
var G__1573 = n;
var G__1574 = o;
var G__1575 = p;
var G__1576 = q;
var G__1577 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__1560,G__1561,G__1562,G__1563,G__1564,G__1565,G__1566,G__1567,G__1568,G__1569,G__1570,G__1571,G__1572,G__1573,G__1574,G__1575,G__1576,G__1577) : self__.afn.call(null,G__1560,G__1561,G__1562,G__1563,G__1564,G__1565,G__1566,G__1567,G__1568,G__1569,G__1570,G__1571,G__1572,G__1573,G__1574,G__1575,G__1576,G__1577));
});
var G__1871__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1578 = a;
var G__1579 = b;
var G__1580 = c;
var G__1581 = d;
var G__1582 = e;
var G__1583 = f;
var G__1584 = g;
var G__1585 = h;
var G__1586 = i;
var G__1587 = j;
var G__1588 = k;
var G__1589 = l;
var G__1590 = m;
var G__1591 = n;
var G__1592 = o;
var G__1593 = p;
var G__1594 = q;
var G__1595 = r;
var G__1596 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__1578,G__1579,G__1580,G__1581,G__1582,G__1583,G__1584,G__1585,G__1586,G__1587,G__1588,G__1589,G__1590,G__1591,G__1592,G__1593,G__1594,G__1595,G__1596) : self__.afn.call(null,G__1578,G__1579,G__1580,G__1581,G__1582,G__1583,G__1584,G__1585,G__1586,G__1587,G__1588,G__1589,G__1590,G__1591,G__1592,G__1593,G__1594,G__1595,G__1596));
});
var G__1871__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1597 = a;
var G__1598 = b;
var G__1599 = c;
var G__1600 = d;
var G__1601 = e;
var G__1602 = f;
var G__1603 = g;
var G__1604 = h;
var G__1605 = i;
var G__1606 = j;
var G__1607 = k;
var G__1608 = l;
var G__1609 = m;
var G__1610 = n;
var G__1611 = o;
var G__1612 = p;
var G__1613 = q;
var G__1614 = r;
var G__1615 = s;
var G__1616 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__1597,G__1598,G__1599,G__1600,G__1601,G__1602,G__1603,G__1604,G__1605,G__1606,G__1607,G__1608,G__1609,G__1610,G__1611,G__1612,G__1613,G__1614,G__1615,G__1616) : self__.afn.call(null,G__1597,G__1598,G__1599,G__1600,G__1601,G__1602,G__1603,G__1604,G__1605,G__1606,G__1607,G__1608,G__1609,G__1610,G__1611,G__1612,G__1613,G__1614,G__1615,G__1616));
});
var G__1871__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1617 = self__.afn;
var G__1618 = a;
var G__1619 = b;
var G__1620 = c;
var G__1621 = d;
var G__1622 = e;
var G__1623 = f;
var G__1624 = g;
var G__1625 = h;
var G__1626 = i;
var G__1627 = j;
var G__1628 = k;
var G__1629 = l;
var G__1630 = m;
var G__1631 = n;
var G__1632 = o;
var G__1633 = p;
var G__1634 = q;
var G__1635 = r;
var G__1636 = s;
var G__1637 = t;
var G__1638 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__1617,G__1618,G__1619,G__1620,G__1621,G__1622,G__1623,G__1624,G__1625,G__1626,G__1627,G__1628,G__1629,G__1630,G__1631,G__1632,G__1633,G__1634,G__1635,G__1636,G__1637,G__1638) : cljs.core.apply.call(null,G__1617,G__1618,G__1619,G__1620,G__1621,G__1622,G__1623,G__1624,G__1625,G__1626,G__1627,G__1628,G__1629,G__1630,G__1631,G__1632,G__1633,G__1634,G__1635,G__1636,G__1637,G__1638));
});
G__1871 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__1871__1.call(this,self__);
case 2:
return G__1871__2.call(this,self__,a);
case 3:
return G__1871__3.call(this,self__,a,b);
case 4:
return G__1871__4.call(this,self__,a,b,c);
case 5:
return G__1871__5.call(this,self__,a,b,c,d);
case 6:
return G__1871__6.call(this,self__,a,b,c,d,e);
case 7:
return G__1871__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__1871__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__1871__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__1871__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__1871__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__1871__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__1871__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__1871__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__1871__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__1871__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__1871__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__1871__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__1871__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__1871__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__1871__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__1871__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__1871.cljs$core$IFn$_invoke$arity$1 = G__1871__1;
G__1871.cljs$core$IFn$_invoke$arity$2 = G__1871__2;
G__1871.cljs$core$IFn$_invoke$arity$3 = G__1871__3;
G__1871.cljs$core$IFn$_invoke$arity$4 = G__1871__4;
G__1871.cljs$core$IFn$_invoke$arity$5 = G__1871__5;
G__1871.cljs$core$IFn$_invoke$arity$6 = G__1871__6;
G__1871.cljs$core$IFn$_invoke$arity$7 = G__1871__7;
G__1871.cljs$core$IFn$_invoke$arity$8 = G__1871__8;
G__1871.cljs$core$IFn$_invoke$arity$9 = G__1871__9;
G__1871.cljs$core$IFn$_invoke$arity$10 = G__1871__10;
G__1871.cljs$core$IFn$_invoke$arity$11 = G__1871__11;
G__1871.cljs$core$IFn$_invoke$arity$12 = G__1871__12;
G__1871.cljs$core$IFn$_invoke$arity$13 = G__1871__13;
G__1871.cljs$core$IFn$_invoke$arity$14 = G__1871__14;
G__1871.cljs$core$IFn$_invoke$arity$15 = G__1871__15;
G__1871.cljs$core$IFn$_invoke$arity$16 = G__1871__16;
G__1871.cljs$core$IFn$_invoke$arity$17 = G__1871__17;
G__1871.cljs$core$IFn$_invoke$arity$18 = G__1871__18;
G__1871.cljs$core$IFn$_invoke$arity$19 = G__1871__19;
G__1871.cljs$core$IFn$_invoke$arity$20 = G__1871__20;
G__1871.cljs$core$IFn$_invoke$arity$21 = G__1871__21;
G__1871.cljs$core$IFn$_invoke$arity$22 = G__1871__22;
return G__1871;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args1406){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args1406)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__1639 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__1639) : self__.afn.call(null,G__1639));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__1640 = a;
var G__1641 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__1640,G__1641) : self__.afn.call(null,G__1640,G__1641));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__1642 = a;
var G__1643 = b;
var G__1644 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__1642,G__1643,G__1644) : self__.afn.call(null,G__1642,G__1643,G__1644));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__1645 = a;
var G__1646 = b;
var G__1647 = c;
var G__1648 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__1645,G__1646,G__1647,G__1648) : self__.afn.call(null,G__1645,G__1646,G__1647,G__1648));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__1649 = a;
var G__1650 = b;
var G__1651 = c;
var G__1652 = d;
var G__1653 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__1649,G__1650,G__1651,G__1652,G__1653) : self__.afn.call(null,G__1649,G__1650,G__1651,G__1652,G__1653));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__1654 = a;
var G__1655 = b;
var G__1656 = c;
var G__1657 = d;
var G__1658 = e;
var G__1659 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__1654,G__1655,G__1656,G__1657,G__1658,G__1659) : self__.afn.call(null,G__1654,G__1655,G__1656,G__1657,G__1658,G__1659));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__1660 = a;
var G__1661 = b;
var G__1662 = c;
var G__1663 = d;
var G__1664 = e;
var G__1665 = f;
var G__1666 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__1660,G__1661,G__1662,G__1663,G__1664,G__1665,G__1666) : self__.afn.call(null,G__1660,G__1661,G__1662,G__1663,G__1664,G__1665,G__1666));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__1667 = a;
var G__1668 = b;
var G__1669 = c;
var G__1670 = d;
var G__1671 = e;
var G__1672 = f;
var G__1673 = g;
var G__1674 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__1667,G__1668,G__1669,G__1670,G__1671,G__1672,G__1673,G__1674) : self__.afn.call(null,G__1667,G__1668,G__1669,G__1670,G__1671,G__1672,G__1673,G__1674));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__1675 = a;
var G__1676 = b;
var G__1677 = c;
var G__1678 = d;
var G__1679 = e;
var G__1680 = f;
var G__1681 = g;
var G__1682 = h;
var G__1683 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__1675,G__1676,G__1677,G__1678,G__1679,G__1680,G__1681,G__1682,G__1683) : self__.afn.call(null,G__1675,G__1676,G__1677,G__1678,G__1679,G__1680,G__1681,G__1682,G__1683));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__1684 = a;
var G__1685 = b;
var G__1686 = c;
var G__1687 = d;
var G__1688 = e;
var G__1689 = f;
var G__1690 = g;
var G__1691 = h;
var G__1692 = i;
var G__1693 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__1684,G__1685,G__1686,G__1687,G__1688,G__1689,G__1690,G__1691,G__1692,G__1693) : self__.afn.call(null,G__1684,G__1685,G__1686,G__1687,G__1688,G__1689,G__1690,G__1691,G__1692,G__1693));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__1694 = a;
var G__1695 = b;
var G__1696 = c;
var G__1697 = d;
var G__1698 = e;
var G__1699 = f;
var G__1700 = g;
var G__1701 = h;
var G__1702 = i;
var G__1703 = j;
var G__1704 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__1694,G__1695,G__1696,G__1697,G__1698,G__1699,G__1700,G__1701,G__1702,G__1703,G__1704) : self__.afn.call(null,G__1694,G__1695,G__1696,G__1697,G__1698,G__1699,G__1700,G__1701,G__1702,G__1703,G__1704));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__1705 = a;
var G__1706 = b;
var G__1707 = c;
var G__1708 = d;
var G__1709 = e;
var G__1710 = f;
var G__1711 = g;
var G__1712 = h;
var G__1713 = i;
var G__1714 = j;
var G__1715 = k;
var G__1716 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__1705,G__1706,G__1707,G__1708,G__1709,G__1710,G__1711,G__1712,G__1713,G__1714,G__1715,G__1716) : self__.afn.call(null,G__1705,G__1706,G__1707,G__1708,G__1709,G__1710,G__1711,G__1712,G__1713,G__1714,G__1715,G__1716));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__1717 = a;
var G__1718 = b;
var G__1719 = c;
var G__1720 = d;
var G__1721 = e;
var G__1722 = f;
var G__1723 = g;
var G__1724 = h;
var G__1725 = i;
var G__1726 = j;
var G__1727 = k;
var G__1728 = l;
var G__1729 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__1717,G__1718,G__1719,G__1720,G__1721,G__1722,G__1723,G__1724,G__1725,G__1726,G__1727,G__1728,G__1729) : self__.afn.call(null,G__1717,G__1718,G__1719,G__1720,G__1721,G__1722,G__1723,G__1724,G__1725,G__1726,G__1727,G__1728,G__1729));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__1730 = a;
var G__1731 = b;
var G__1732 = c;
var G__1733 = d;
var G__1734 = e;
var G__1735 = f;
var G__1736 = g;
var G__1737 = h;
var G__1738 = i;
var G__1739 = j;
var G__1740 = k;
var G__1741 = l;
var G__1742 = m;
var G__1743 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__1730,G__1731,G__1732,G__1733,G__1734,G__1735,G__1736,G__1737,G__1738,G__1739,G__1740,G__1741,G__1742,G__1743) : self__.afn.call(null,G__1730,G__1731,G__1732,G__1733,G__1734,G__1735,G__1736,G__1737,G__1738,G__1739,G__1740,G__1741,G__1742,G__1743));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__1744 = a;
var G__1745 = b;
var G__1746 = c;
var G__1747 = d;
var G__1748 = e;
var G__1749 = f;
var G__1750 = g;
var G__1751 = h;
var G__1752 = i;
var G__1753 = j;
var G__1754 = k;
var G__1755 = l;
var G__1756 = m;
var G__1757 = n;
var G__1758 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__1744,G__1745,G__1746,G__1747,G__1748,G__1749,G__1750,G__1751,G__1752,G__1753,G__1754,G__1755,G__1756,G__1757,G__1758) : self__.afn.call(null,G__1744,G__1745,G__1746,G__1747,G__1748,G__1749,G__1750,G__1751,G__1752,G__1753,G__1754,G__1755,G__1756,G__1757,G__1758));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__1759 = a;
var G__1760 = b;
var G__1761 = c;
var G__1762 = d;
var G__1763 = e;
var G__1764 = f;
var G__1765 = g;
var G__1766 = h;
var G__1767 = i;
var G__1768 = j;
var G__1769 = k;
var G__1770 = l;
var G__1771 = m;
var G__1772 = n;
var G__1773 = o;
var G__1774 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__1759,G__1760,G__1761,G__1762,G__1763,G__1764,G__1765,G__1766,G__1767,G__1768,G__1769,G__1770,G__1771,G__1772,G__1773,G__1774) : self__.afn.call(null,G__1759,G__1760,G__1761,G__1762,G__1763,G__1764,G__1765,G__1766,G__1767,G__1768,G__1769,G__1770,G__1771,G__1772,G__1773,G__1774));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__1775 = a;
var G__1776 = b;
var G__1777 = c;
var G__1778 = d;
var G__1779 = e;
var G__1780 = f;
var G__1781 = g;
var G__1782 = h;
var G__1783 = i;
var G__1784 = j;
var G__1785 = k;
var G__1786 = l;
var G__1787 = m;
var G__1788 = n;
var G__1789 = o;
var G__1790 = p;
var G__1791 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__1775,G__1776,G__1777,G__1778,G__1779,G__1780,G__1781,G__1782,G__1783,G__1784,G__1785,G__1786,G__1787,G__1788,G__1789,G__1790,G__1791) : self__.afn.call(null,G__1775,G__1776,G__1777,G__1778,G__1779,G__1780,G__1781,G__1782,G__1783,G__1784,G__1785,G__1786,G__1787,G__1788,G__1789,G__1790,G__1791));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__1792 = a;
var G__1793 = b;
var G__1794 = c;
var G__1795 = d;
var G__1796 = e;
var G__1797 = f;
var G__1798 = g;
var G__1799 = h;
var G__1800 = i;
var G__1801 = j;
var G__1802 = k;
var G__1803 = l;
var G__1804 = m;
var G__1805 = n;
var G__1806 = o;
var G__1807 = p;
var G__1808 = q;
var G__1809 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__1792,G__1793,G__1794,G__1795,G__1796,G__1797,G__1798,G__1799,G__1800,G__1801,G__1802,G__1803,G__1804,G__1805,G__1806,G__1807,G__1808,G__1809) : self__.afn.call(null,G__1792,G__1793,G__1794,G__1795,G__1796,G__1797,G__1798,G__1799,G__1800,G__1801,G__1802,G__1803,G__1804,G__1805,G__1806,G__1807,G__1808,G__1809));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__1810 = a;
var G__1811 = b;
var G__1812 = c;
var G__1813 = d;
var G__1814 = e;
var G__1815 = f;
var G__1816 = g;
var G__1817 = h;
var G__1818 = i;
var G__1819 = j;
var G__1820 = k;
var G__1821 = l;
var G__1822 = m;
var G__1823 = n;
var G__1824 = o;
var G__1825 = p;
var G__1826 = q;
var G__1827 = r;
var G__1828 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__1810,G__1811,G__1812,G__1813,G__1814,G__1815,G__1816,G__1817,G__1818,G__1819,G__1820,G__1821,G__1822,G__1823,G__1824,G__1825,G__1826,G__1827,G__1828) : self__.afn.call(null,G__1810,G__1811,G__1812,G__1813,G__1814,G__1815,G__1816,G__1817,G__1818,G__1819,G__1820,G__1821,G__1822,G__1823,G__1824,G__1825,G__1826,G__1827,G__1828));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__1829 = a;
var G__1830 = b;
var G__1831 = c;
var G__1832 = d;
var G__1833 = e;
var G__1834 = f;
var G__1835 = g;
var G__1836 = h;
var G__1837 = i;
var G__1838 = j;
var G__1839 = k;
var G__1840 = l;
var G__1841 = m;
var G__1842 = n;
var G__1843 = o;
var G__1844 = p;
var G__1845 = q;
var G__1846 = r;
var G__1847 = s;
var G__1848 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__1829,G__1830,G__1831,G__1832,G__1833,G__1834,G__1835,G__1836,G__1837,G__1838,G__1839,G__1840,G__1841,G__1842,G__1843,G__1844,G__1845,G__1846,G__1847,G__1848) : self__.afn.call(null,G__1829,G__1830,G__1831,G__1832,G__1833,G__1834,G__1835,G__1836,G__1837,G__1838,G__1839,G__1840,G__1841,G__1842,G__1843,G__1844,G__1845,G__1846,G__1847,G__1848));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__1849 = self__.afn;
var G__1850 = a;
var G__1851 = b;
var G__1852 = c;
var G__1853 = d;
var G__1854 = e;
var G__1855 = f;
var G__1856 = g;
var G__1857 = h;
var G__1858 = i;
var G__1859 = j;
var G__1860 = k;
var G__1861 = l;
var G__1862 = m;
var G__1863 = n;
var G__1864 = o;
var G__1865 = p;
var G__1866 = q;
var G__1867 = r;
var G__1868 = s;
var G__1869 = t;
var G__1870 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__1849,G__1850,G__1851,G__1852,G__1853,G__1854,G__1855,G__1856,G__1857,G__1858,G__1859,G__1860,G__1861,G__1862,G__1863,G__1864,G__1865,G__1866,G__1867,G__1868,G__1869,G__1870) : cljs.core.apply.call(null,G__1849,G__1850,G__1851,G__1852,G__1853,G__1854,G__1855,G__1856,G__1857,G__1858,G__1859,G__1860,G__1861,G__1862,G__1863,G__1864,G__1865,G__1866,G__1867,G__1868,G__1869,G__1870));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function cljs$core$__GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
 * Returns an object of the same type and value as obj, with
 * map m as its metadata.
 */
cljs.core.with_meta = (function cljs$core$with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__1875 = o;
if(G__1875){
var bit__11120__auto__ = (G__1875.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__11120__auto__) || (G__1875.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__1875.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__1875);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__1875);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
 * Returns the metadata of obj, returns nil if there is no metadata.
 */
cljs.core.meta = (function cljs$core$meta(o){
if((function (){var and__10815__auto__ = !((o == null));
if(and__10815__auto__){
var G__1879 = o;
if(G__1879){
var bit__11120__auto__ = (G__1879.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__11120__auto__) || (G__1879.cljs$core$IMeta$)){
return true;
} else {
if((!G__1879.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__1879);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__1879);
}
} else {
return and__10815__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
 * For a list or queue, same as first, for a vector, same as, but much
 * more efficient than, last. If the collection is empty, returns nil.
 */
cljs.core.peek = (function cljs$core$peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
 * For a list or queue, returns a new list/queue without the first
 * item, for a vector, returns a new vector without the last item.
 * Note - not the same as next/butlast.
 */
cljs.core.pop = (function cljs$core$pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
 * disj[oin]. Returns a new set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj = (function() {
var cljs$core$disj = null;
var cljs$core$disj__1 = (function (coll){
return coll;
});
var cljs$core$disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var cljs$core$disj__3 = (function() { 
var G__1882__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs$core$disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__1883 = ret;
var G__1884 = cljs.core.first(ks);
var G__1885 = cljs.core.next(ks);
coll = G__1883;
k = G__1884;
ks = G__1885;
continue;
} else {
return ret;
}
}
break;
}
};
var G__1882 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__1886__i = 0, G__1886__a = new Array(arguments.length -  2);
while (G__1886__i < G__1886__a.length) {G__1886__a[G__1886__i] = arguments[G__1886__i + 2]; ++G__1886__i;}
  ks = new cljs.core.IndexedSeq(G__1886__a,0);
} 
return G__1882__delegate.call(this,coll,k,ks);};
G__1882.cljs$lang$maxFixedArity = 2;
G__1882.cljs$lang$applyTo = (function (arglist__1887){
var coll = cljs.core.first(arglist__1887);
arglist__1887 = cljs.core.next(arglist__1887);
var k = cljs.core.first(arglist__1887);
var ks = cljs.core.rest(arglist__1887);
return G__1882__delegate(coll,k,ks);
});
G__1882.cljs$core$IFn$_invoke$arity$variadic = G__1882__delegate;
return G__1882;
})()
;
cljs$core$disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return cljs$core$disj__1.call(this,coll);
case 2:
return cljs$core$disj__2.call(this,coll,k);
default:
var G__1888 = null;
if (arguments.length > 2) {
var G__1889__i = 0, G__1889__a = new Array(arguments.length -  2);
while (G__1889__i < G__1889__a.length) {G__1889__a[G__1889__i] = arguments[G__1889__i + 2]; ++G__1889__i;}
G__1888 = new cljs.core.IndexedSeq(G__1889__a,0);
}
return cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__1888);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$disj.cljs$lang$maxFixedArity = 2;
cljs$core$disj.cljs$lang$applyTo = cljs$core$disj__3.cljs$lang$applyTo;
cljs$core$disj.cljs$core$IFn$_invoke$arity$1 = cljs$core$disj__1;
cljs$core$disj.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj__2;
cljs$core$disj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$disj;
})()
;
/**
 * Returns true if coll has no items - same as (not (seq coll)).
 * Please use the idiom (seq x) rather than (not (empty? x))
 */
cljs.core.empty_QMARK_ = (function cljs$core$empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
 * Returns true if x satisfies ICollection
 */
cljs.core.coll_QMARK_ = (function cljs$core$coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__1891 = x;
if(G__1891){
var bit__11120__auto__ = (G__1891.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__11120__auto__) || (G__1891.cljs$core$ICollection$)){
return true;
} else {
if((!G__1891.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__1891);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__1891);
}
}
});
/**
 * Returns true if x satisfies ISet
 */
cljs.core.set_QMARK_ = (function cljs$core$set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__1893 = x;
if(G__1893){
var bit__11120__auto__ = (G__1893.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__11120__auto__) || (G__1893.cljs$core$ISet$)){
return true;
} else {
if((!G__1893.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__1893);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__1893);
}
}
});
/**
 * Returns true if coll implements Associative
 */
cljs.core.associative_QMARK_ = (function cljs$core$associative_QMARK_(x){
var G__1895 = x;
if(G__1895){
var bit__11120__auto__ = (G__1895.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__11120__auto__) || (G__1895.cljs$core$IAssociative$)){
return true;
} else {
if((!G__1895.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__1895);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__1895);
}
});
/**
 * Returns true if coll satisfies ISequential
 */
cljs.core.sequential_QMARK_ = (function cljs$core$sequential_QMARK_(x){
var G__1897 = x;
if(G__1897){
var bit__11120__auto__ = (G__1897.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__11120__auto__) || (G__1897.cljs$core$ISequential$)){
return true;
} else {
if((!G__1897.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__1897);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__1897);
}
});
/**
 * Returns true if coll satisfies ISorted
 */
cljs.core.sorted_QMARK_ = (function cljs$core$sorted_QMARK_(x){
var G__1899 = x;
if(G__1899){
var bit__11120__auto__ = (G__1899.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__11120__auto__) || (G__1899.cljs$core$ISorted$)){
return true;
} else {
if((!G__1899.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__1899);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__1899);
}
});
/**
 * Returns true if coll satisfies IReduce
 */
cljs.core.reduceable_QMARK_ = (function cljs$core$reduceable_QMARK_(x){
var G__1901 = x;
if(G__1901){
var bit__11120__auto__ = (G__1901.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__11120__auto__) || (G__1901.cljs$core$IReduce$)){
return true;
} else {
if((!G__1901.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__1901);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__1901);
}
});
/**
 * Return true if x satisfies IMap
 */
cljs.core.map_QMARK_ = (function cljs$core$map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__1903 = x;
if(G__1903){
var bit__11120__auto__ = (G__1903.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__11120__auto__) || (G__1903.cljs$core$IMap$)){
return true;
} else {
if((!G__1903.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__1903);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__1903);
}
}
});
/**
 * Return true if x satisfies IVector
 */
cljs.core.vector_QMARK_ = (function cljs$core$vector_QMARK_(x){
var G__1905 = x;
if(G__1905){
var bit__11120__auto__ = (G__1905.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__11120__auto__) || (G__1905.cljs$core$IVector$)){
return true;
} else {
if((!G__1905.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__1905);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__1905);
}
});

/**
 * Return true if x is satisfies IChunkedSeq.
 */
cljs.core.chunked_seq_QMARK_ = (function cljs$core$chunked_seq_QMARK_(x){
var G__1907 = x;
if(G__1907){
var bit__11117__auto__ = (G__1907.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__11117__auto__) || (G__1907.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
 * Create JavaSript object from an even number arguments representing
 * interleaved keys and values.
 * @param {...*} var_args
 */
cljs.core.js_obj = (function() {
var cljs$core$js_obj = null;
var cljs$core$js_obj__0 = (function (){
var obj1913 = {};
return obj1913;
});
var cljs$core$js_obj__1 = (function() { 
var G__1916__delegate = function (keyvals){
var G__1914 = goog.object.create;
var G__1915 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__1914,G__1915) : cljs.core.apply.call(null,G__1914,G__1915));
};
var G__1916 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__1917__i = 0, G__1917__a = new Array(arguments.length -  0);
while (G__1917__i < G__1917__a.length) {G__1917__a[G__1917__i] = arguments[G__1917__i + 0]; ++G__1917__i;}
  keyvals = new cljs.core.IndexedSeq(G__1917__a,0);
} 
return G__1916__delegate.call(this,keyvals);};
G__1916.cljs$lang$maxFixedArity = 0;
G__1916.cljs$lang$applyTo = (function (arglist__1918){
var keyvals = cljs.core.seq(arglist__1918);
return G__1916__delegate(keyvals);
});
G__1916.cljs$core$IFn$_invoke$arity$variadic = G__1916__delegate;
return G__1916;
})()
;
cljs$core$js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return cljs$core$js_obj__0.call(this);
default:
var G__1919 = null;
if (arguments.length > 0) {
var G__1920__i = 0, G__1920__a = new Array(arguments.length -  0);
while (G__1920__i < G__1920__a.length) {G__1920__a[G__1920__i] = arguments[G__1920__i + 0]; ++G__1920__i;}
G__1919 = new cljs.core.IndexedSeq(G__1920__a,0);
}
return cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__1919);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$js_obj.cljs$lang$maxFixedArity = 0;
cljs$core$js_obj.cljs$lang$applyTo = cljs$core$js_obj__1.cljs$lang$applyTo;
cljs$core$js_obj.cljs$core$IFn$_invoke$arity$0 = cljs$core$js_obj__0;
cljs$core$js_obj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$js_obj;
})()
;
/**
 * Return the JavaScript keys for an object.
 */
cljs.core.js_keys = (function cljs$core$js_keys(obj){
var keys = [];
var G__1923_1925 = obj;
var G__1924_1926 = ((function (G__1923_1925,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__1923_1925,keys))
;
goog.object.forEach(G__1923_1925,G__1924_1926);

return keys;
});
/**
 * Delete a property from a JavaScript object.
 */
cljs.core.js_delete = (function cljs$core$js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function cljs$core$array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__1927 = (i__$1 + (1));
var G__1928 = (j__$1 + (1));
var G__1929 = (len__$1 - (1));
i__$1 = G__1927;
j__$1 = G__1928;
len__$1 = G__1929;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function cljs$core$array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__1930 = (i__$1 - (1));
var G__1931 = (j__$1 - (1));
var G__1932 = (len__$1 - (1));
i__$1 = G__1930;
j__$1 = G__1931;
len__$1 = G__1932;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj1934 = {};
return obj1934;
})();
/**
 * Returns true if x is the value false, false otherwise.
 */
cljs.core.false_QMARK_ = (function cljs$core$false_QMARK_(x){
return x === false;
});
/**
 * Returns true if x is the value true, false otherwise.
 */
cljs.core.true_QMARK_ = (function cljs$core$true_QMARK_(x){
return x === true;
});
/**
 * Returns true if x identical to the JavaScript undefined value.
 */
cljs.core.undefined_QMARK_ = (function cljs$core$undefined_QMARK_(x){
return (void 0 === x);
});
/**
 * Return true if s satisfies ISeq
 */
cljs.core.seq_QMARK_ = (function cljs$core$seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__1936 = s;
if(G__1936){
var bit__11120__auto__ = (G__1936.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__11120__auto__) || (G__1936.cljs$core$ISeq$)){
return true;
} else {
if((!G__1936.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__1936);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__1936);
}
}
});
/**
 * Return true if s satisfies ISeqable
 */
cljs.core.seqable_QMARK_ = (function cljs$core$seqable_QMARK_(s){
var G__1938 = s;
if(G__1938){
var bit__11120__auto__ = (G__1938.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__11120__auto__) || (G__1938.cljs$core$ISeqable$)){
return true;
} else {
if((!G__1938.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__1938);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__1938);
}
});
/**
 * Coerce to boolean
 */
cljs.core.boolean$ = (function cljs$core$boolean(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
/**
 * Returns true if f returns true for fn? or satisfies IFn.
 */
cljs.core.ifn_QMARK_ = (function cljs$core$ifn_QMARK_(f){
var or__10823__auto__ = cljs.core.fn_QMARK_(f);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var G__1942 = f;
if(G__1942){
var bit__11120__auto__ = (G__1942.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__11120__auto__) || (G__1942.cljs$core$IFn$)){
return true;
} else {
if((!G__1942.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__1942);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__1942);
}
}
});
/**
 * Returns true if n is an integer.
 */
cljs.core.integer_QMARK_ = (function cljs$core$integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__1955 = n;
return isNaN(G__1955);
})())) && (!((n === Infinity))) && (((function (){var G__1956 = n;
return parseFloat(G__1956);
})() === (function (){var G__1957 = n;
var G__1958 = (10);
return parseInt(G__1957,G__1958);
})()));
});
/**
 * Returns true if key is present in the given collection, otherwise
 * returns false.  Note that for numerically indexed collections like
 * vectors and arrays, this tests if the numeric key is within the
 * range of indexes. 'contains?' operates constant or logarithmic time;
 * it will not perform a linear search for a value.  See also 'some'.
 */
cljs.core.contains_QMARK_ = (function cljs$core$contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
 * Returns the map entry for key, or nil if key not present.
 */
cljs.core.find = (function cljs$core$find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
 * Returns true if no two of the arguments are =
 * @param {...*} var_args
 */
cljs.core.distinct_QMARK_ = (function() {
var cljs$core$distinct_QMARK_ = null;
var cljs$core$distinct_QMARK___1 = (function (x){
return true;
});
var cljs$core$distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var cljs$core$distinct_QMARK___3 = (function() { 
var G__1959__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__1960 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__1961 = etc;
s = G__1960;
xs = G__1961;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__1959 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__1962__i = 0, G__1962__a = new Array(arguments.length -  2);
while (G__1962__i < G__1962__a.length) {G__1962__a[G__1962__i] = arguments[G__1962__i + 2]; ++G__1962__i;}
  more = new cljs.core.IndexedSeq(G__1962__a,0);
} 
return G__1959__delegate.call(this,x,y,more);};
G__1959.cljs$lang$maxFixedArity = 2;
G__1959.cljs$lang$applyTo = (function (arglist__1963){
var x = cljs.core.first(arglist__1963);
arglist__1963 = cljs.core.next(arglist__1963);
var y = cljs.core.first(arglist__1963);
var more = cljs.core.rest(arglist__1963);
return G__1959__delegate(x,y,more);
});
G__1959.cljs$core$IFn$_invoke$arity$variadic = G__1959__delegate;
return G__1959;
})()
;
cljs$core$distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$distinct_QMARK___1.call(this,x);
case 2:
return cljs$core$distinct_QMARK___2.call(this,x,y);
default:
var G__1964 = null;
if (arguments.length > 2) {
var G__1965__i = 0, G__1965__a = new Array(arguments.length -  2);
while (G__1965__i < G__1965__a.length) {G__1965__a[G__1965__i] = arguments[G__1965__i + 2]; ++G__1965__i;}
G__1964 = new cljs.core.IndexedSeq(G__1965__a,0);
}
return cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1964);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs$core$distinct_QMARK_.cljs$lang$applyTo = cljs$core$distinct_QMARK___3.cljs$lang$applyTo;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct_QMARK___1;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$distinct_QMARK___2;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$distinct_QMARK_;
})()
;
/**
 * Comparator. Returns a negative number, zero, or a positive number
 * when x is logically 'less than', 'equal to', or 'greater than'
 * y. Uses IComparable if available and google.array.defaultCompare for objects
 * of the same type and special-cases nil to be less than any other object.
 */
cljs.core.compare = (function cljs$core$compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__1969 = x;
if(G__1969){
var bit__11117__auto__ = (G__1969.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__11117__auto__) || (G__1969.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__1970 = x;
var G__1971 = y;
return goog.array.defaultCompare(G__1970,G__1971);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
 * Compare indexed collection.
 */
cljs.core.compare_indexed = (function() {
var cljs$core$compare_indexed = null;
var cljs$core$compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var cljs$core$compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__1976 = xs;
var G__1977 = ys;
var G__1978 = len;
var G__1979 = (n + (1));
xs = G__1976;
ys = G__1977;
len = G__1978;
n = G__1979;
continue;
} else {
return d;
}
break;
}
});
cljs$core$compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return cljs$core$compare_indexed__2.call(this,xs,ys);
case 4:
return cljs$core$compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$compare_indexed__2;
cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4 = cljs$core$compare_indexed__4;
return cljs$core$compare_indexed;
})()
;
/**
 * Given a fn that might be boolean valued or a comparator,
 * return a fn that is a comparator.
 */
cljs.core.fn__GT_comparator = (function cljs$core$fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__1984 = x;
var G__1985 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__1984,G__1985) : f.call(null,G__1984,G__1985));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__1986 = y;
var G__1987 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__1986,G__1987) : f.call(null,G__1986,G__1987));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
 * Returns a sorted sequence of the items in coll. Comp can be
 * boolean-valued comparison function, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort = (function() {
var cljs$core$sort = null;
var cljs$core$sort__1 = (function (coll){
return cljs$core$sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var cljs$core$sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__1993 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__1993) : cljs.core.to_array.call(null,G__1993));
})();
var G__1994_1996 = a;
var G__1995_1997 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__1994_1996,G__1995_1997);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
cljs$core$sort = function(comp,coll){
switch(arguments.length){
case 1:
return cljs$core$sort__1.call(this,comp);
case 2:
return cljs$core$sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sort.cljs$core$IFn$_invoke$arity$1 = cljs$core$sort__1;
cljs$core$sort.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort__2;
return cljs$core$sort;
})()
;
/**
 * Returns a sorted sequence of the items in coll, where the sort
 * order is determined by comparing (keyfn item).  Comp can be
 * boolean-valued comparison funcion, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort_by = (function() {
var cljs$core$sort_by = null;
var cljs$core$sort_by__2 = (function (keyfn,coll){
return cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var cljs$core$sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__2003 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__2003) : keyfn.call(null,G__2003));
})(),(function (){var G__2004 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__2004) : keyfn.call(null,G__2004));
})());
}),coll);
});
cljs$core$sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return cljs$core$sort_by__2.call(this,keyfn,comp);
case 3:
return cljs$core$sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sort_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort_by__2;
cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3 = cljs$core$sort_by__3;
return cljs$core$sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var cljs$core$seq_reduce = null;
var cljs$core$seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__2010 = f;
var G__2011 = cljs.core.first(s);
var G__2012 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__2010,G__2011,G__2012) : cljs.core.reduce.call(null,G__2010,G__2011,G__2012));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var cljs$core$seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__2013 = val__$1;
var G__2014 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2013,G__2014) : f.call(null,G__2013,G__2014));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__2015 = nval;
var G__2016 = cljs.core.next(coll__$1);
val__$1 = G__2015;
coll__$1 = G__2016;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return cljs$core$seq_reduce__2.call(this,f,val);
case 3:
return cljs$core$seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$seq_reduce__2;
cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$seq_reduce__3;
return cljs$core$seq_reduce;
})()
;
/**
 * Return a random permutation of coll
 */
cljs.core.shuffle = (function cljs$core$shuffle(coll){
var a = (function (){var G__2020 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__2020) : cljs.core.to_array.call(null,G__2020));
})();
var G__2021_2023 = a;
goog.array.shuffle(G__2021_2023);

var G__2022 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__2022) : cljs.core.vec.call(null,G__2022));
});
/**
 * f should be a function of 2 arguments. If val is not supplied,
 * returns the result of applying f to the first 2 items in coll, then
 * applying f to that result and the 3rd item, etc. If coll contains no
 * items, f must accept no arguments as well, and reduce returns the
 * result of calling f with no arguments.  If coll has only 1 item, it
 * is returned and f is not called.  If val is supplied, returns the
 * result of applying f to val and the first item in coll, then
 * applying f to that result and the 2nd item, etc. If coll contains no
 * items, returns val and f is not called.
 */
cljs.core.reduce = (function() {
var cljs$core$reduce = null;
var cljs$core$reduce__2 = (function (f,coll){
if((function (){var G__2026 = coll;
if(G__2026){
var bit__11117__auto__ = (G__2026.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__11117__auto__) || (G__2026.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var cljs$core$reduce__3 = (function (f,val,coll){
if((function (){var G__2027 = coll;
if(G__2027){
var bit__11117__auto__ = (G__2027.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__11117__auto__) || (G__2027.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
cljs$core$reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return cljs$core$reduce__2.call(this,f,val);
case 3:
return cljs$core$reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$reduce__2;
cljs$core$reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$reduce__3;
return cljs$core$reduce;
})()
;
/**
 * Reduces an associative collection. f should be a function of 3
 * arguments. Returns the result of applying f to init, the first key
 * and the first value in coll, then applying f to that result and the
 * 2nd key and value, etc. If coll contains no entries, returns init
 * and f is not called. Note that reduce-kv is supported on vectors,
 * where the keys will be the ordinals.
 */
cljs.core.reduce_kv = (function cljs$core$reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
/**
 * Returns its argument.
 */
cljs.core.identity = (function cljs$core$identity(x){
return x;
});
/**
 * Takes a reducing function f of 2 args and returns a fn suitable for
 * transduce by adding an arity-1 signature that calls cf (default -
 * identity) on the result argument.
 */
cljs.core.completing = (function() {
var cljs$core$completing = null;
var cljs$core$completing__1 = (function (f){
return cljs$core$completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var cljs$core$completing__2 = (function (f,cf){
return (function() {
var G__2036 = null;
var G__2036__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__2036__1 = (function (x){
var G__2033 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__2033) : cf.call(null,G__2033));
});
var G__2036__2 = (function (x,y){
var G__2034 = x;
var G__2035 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2034,G__2035) : f.call(null,G__2034,G__2035));
});
G__2036 = function(x,y){
switch(arguments.length){
case 0:
return G__2036__0.call(this);
case 1:
return G__2036__1.call(this,x);
case 2:
return G__2036__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2036.cljs$core$IFn$_invoke$arity$0 = G__2036__0;
G__2036.cljs$core$IFn$_invoke$arity$1 = G__2036__1;
G__2036.cljs$core$IFn$_invoke$arity$2 = G__2036__2;
return G__2036;
})()
});
cljs$core$completing = function(f,cf){
switch(arguments.length){
case 1:
return cljs$core$completing__1.call(this,f);
case 2:
return cljs$core$completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$completing.cljs$core$IFn$_invoke$arity$1 = cljs$core$completing__1;
cljs$core$completing.cljs$core$IFn$_invoke$arity$2 = cljs$core$completing__2;
return cljs$core$completing;
})()
;
/**
 * reduce with a transformation of f (xf). If init is not
 * supplied, (f) will be called to produce it. f should be a reducing
 * step function that accepts both 1 and 2 arguments, if it accepts
 * only 2 you can add the arity-1 with 'completing'. Returns the result
 * of applying (the transformed) xf to init and the first item in coll,
 * then applying xf to that result and the 2nd item, etc. If coll
 * contains no items, returns init and f is not called. Note that
 * certain transforms may inject or skip items.
 */
cljs.core.transduce = (function() {
var cljs$core$transduce = null;
var cljs$core$transduce__3 = (function (xform,f,coll){
return cljs$core$transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var cljs$core$transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__2043 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__2043) : xform.call(null,G__2043));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__2044 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__2044) : f__$1.call(null,G__2044));
});
cljs$core$transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return cljs$core$transduce__3.call(this,xform,f,init);
case 4:
return cljs$core$transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$transduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$transduce__3;
cljs$core$transduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$transduce__4;
return cljs$core$transduce;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core._PLUS_ = (function() {
var cljs$core$_PLUS_ = null;
var cljs$core$_PLUS___0 = (function (){
return (0);
});
var cljs$core$_PLUS___1 = (function (x){
return x;
});
var cljs$core$_PLUS___2 = (function (x,y){
return (x + y);
});
var cljs$core$_PLUS___3 = (function() { 
var G__2045__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_PLUS_,(x + y),more);
};
var G__2045 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__2046__i = 0, G__2046__a = new Array(arguments.length -  2);
while (G__2046__i < G__2046__a.length) {G__2046__a[G__2046__i] = arguments[G__2046__i + 2]; ++G__2046__i;}
  more = new cljs.core.IndexedSeq(G__2046__a,0);
} 
return G__2045__delegate.call(this,x,y,more);};
G__2045.cljs$lang$maxFixedArity = 2;
G__2045.cljs$lang$applyTo = (function (arglist__2047){
var x = cljs.core.first(arglist__2047);
arglist__2047 = cljs.core.next(arglist__2047);
var y = cljs.core.first(arglist__2047);
var more = cljs.core.rest(arglist__2047);
return G__2045__delegate(x,y,more);
});
G__2045.cljs$core$IFn$_invoke$arity$variadic = G__2045__delegate;
return G__2045;
})()
;
cljs$core$_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$_PLUS___0.call(this);
case 1:
return cljs$core$_PLUS___1.call(this,x);
case 2:
return cljs$core$_PLUS___2.call(this,x,y);
default:
var G__2048 = null;
if (arguments.length > 2) {
var G__2049__i = 0, G__2049__a = new Array(arguments.length -  2);
while (G__2049__i < G__2049__a.length) {G__2049__a[G__2049__i] = arguments[G__2049__i + 2]; ++G__2049__i;}
G__2048 = new cljs.core.IndexedSeq(G__2049__a,0);
}
return cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2048);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_PLUS_.cljs$lang$maxFixedArity = 2;
cljs$core$_PLUS_.cljs$lang$applyTo = cljs$core$_PLUS___3.cljs$lang$applyTo;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_PLUS___0;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_PLUS___1;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_PLUS___2;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_PLUS_;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core._ = (function() {
var cljs$core$_ = null;
var cljs$core$___1 = (function (x){
return (- x);
});
var cljs$core$___2 = (function (x,y){
return (x - y);
});
var cljs$core$___3 = (function() { 
var G__2050__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_,(x - y),more);
};
var G__2050 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__2051__i = 0, G__2051__a = new Array(arguments.length -  2);
while (G__2051__i < G__2051__a.length) {G__2051__a[G__2051__i] = arguments[G__2051__i + 2]; ++G__2051__i;}
  more = new cljs.core.IndexedSeq(G__2051__a,0);
} 
return G__2050__delegate.call(this,x,y,more);};
G__2050.cljs$lang$maxFixedArity = 2;
G__2050.cljs$lang$applyTo = (function (arglist__2052){
var x = cljs.core.first(arglist__2052);
arglist__2052 = cljs.core.next(arglist__2052);
var y = cljs.core.first(arglist__2052);
var more = cljs.core.rest(arglist__2052);
return G__2050__delegate(x,y,more);
});
G__2050.cljs$core$IFn$_invoke$arity$variadic = G__2050__delegate;
return G__2050;
})()
;
cljs$core$_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$___1.call(this,x);
case 2:
return cljs$core$___2.call(this,x,y);
default:
var G__2053 = null;
if (arguments.length > 2) {
var G__2054__i = 0, G__2054__a = new Array(arguments.length -  2);
while (G__2054__i < G__2054__a.length) {G__2054__a[G__2054__i] = arguments[G__2054__i + 2]; ++G__2054__i;}
G__2053 = new cljs.core.IndexedSeq(G__2054__a,0);
}
return cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2053);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_.cljs$lang$maxFixedArity = 2;
cljs$core$_.cljs$lang$applyTo = cljs$core$___3.cljs$lang$applyTo;
cljs$core$_.cljs$core$IFn$_invoke$arity$1 = cljs$core$___1;
cljs$core$_.cljs$core$IFn$_invoke$arity$2 = cljs$core$___2;
cljs$core$_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core._STAR_ = (function() {
var cljs$core$_STAR_ = null;
var cljs$core$_STAR___0 = (function (){
return (1);
});
var cljs$core$_STAR___1 = (function (x){
return x;
});
var cljs$core$_STAR___2 = (function (x,y){
return (x * y);
});
var cljs$core$_STAR___3 = (function() { 
var G__2055__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_STAR_,(x * y),more);
};
var G__2055 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__2056__i = 0, G__2056__a = new Array(arguments.length -  2);
while (G__2056__i < G__2056__a.length) {G__2056__a[G__2056__i] = arguments[G__2056__i + 2]; ++G__2056__i;}
  more = new cljs.core.IndexedSeq(G__2056__a,0);
} 
return G__2055__delegate.call(this,x,y,more);};
G__2055.cljs$lang$maxFixedArity = 2;
G__2055.cljs$lang$applyTo = (function (arglist__2057){
var x = cljs.core.first(arglist__2057);
arglist__2057 = cljs.core.next(arglist__2057);
var y = cljs.core.first(arglist__2057);
var more = cljs.core.rest(arglist__2057);
return G__2055__delegate(x,y,more);
});
G__2055.cljs$core$IFn$_invoke$arity$variadic = G__2055__delegate;
return G__2055;
})()
;
cljs$core$_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$_STAR___0.call(this);
case 1:
return cljs$core$_STAR___1.call(this,x);
case 2:
return cljs$core$_STAR___2.call(this,x,y);
default:
var G__2058 = null;
if (arguments.length > 2) {
var G__2059__i = 0, G__2059__a = new Array(arguments.length -  2);
while (G__2059__i < G__2059__a.length) {G__2059__a[G__2059__i] = arguments[G__2059__i + 2]; ++G__2059__i;}
G__2058 = new cljs.core.IndexedSeq(G__2059__a,0);
}
return cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2058);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_STAR_.cljs$lang$maxFixedArity = 2;
cljs$core$_STAR_.cljs$lang$applyTo = cljs$core$_STAR___3.cljs$lang$applyTo;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_STAR___0;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_STAR___1;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_STAR___2;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_STAR_;
})()
;
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core._SLASH_ = (function() {
var cljs$core$_SLASH_ = null;
var cljs$core$_SLASH___1 = (function (x){
return cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var cljs$core$_SLASH___2 = (function (x,y){
return (x / y);
});
var cljs$core$_SLASH___3 = (function() { 
var G__2064__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_SLASH_,cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__2064 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__2065__i = 0, G__2065__a = new Array(arguments.length -  2);
while (G__2065__i < G__2065__a.length) {G__2065__a[G__2065__i] = arguments[G__2065__i + 2]; ++G__2065__i;}
  more = new cljs.core.IndexedSeq(G__2065__a,0);
} 
return G__2064__delegate.call(this,x,y,more);};
G__2064.cljs$lang$maxFixedArity = 2;
G__2064.cljs$lang$applyTo = (function (arglist__2066){
var x = cljs.core.first(arglist__2066);
arglist__2066 = cljs.core.next(arglist__2066);
var y = cljs.core.first(arglist__2066);
var more = cljs.core.rest(arglist__2066);
return G__2064__delegate(x,y,more);
});
G__2064.cljs$core$IFn$_invoke$arity$variadic = G__2064__delegate;
return G__2064;
})()
;
cljs$core$_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_SLASH___1.call(this,x);
case 2:
return cljs$core$_SLASH___2.call(this,x,y);
default:
var G__2067 = null;
if (arguments.length > 2) {
var G__2068__i = 0, G__2068__a = new Array(arguments.length -  2);
while (G__2068__i < G__2068__a.length) {G__2068__a[G__2068__i] = arguments[G__2068__i + 2]; ++G__2068__i;}
G__2067 = new cljs.core.IndexedSeq(G__2068__a,0);
}
return cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2067);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_SLASH_.cljs$lang$maxFixedArity = 2;
cljs$core$_SLASH_.cljs$lang$applyTo = cljs$core$_SLASH___3.cljs$lang$applyTo;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_SLASH___1;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_SLASH___2;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_SLASH_;
})()
;
/**
 * Returns non-nil if nums are in monotonically increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT_ = (function() {
var cljs$core$_LT_ = null;
var cljs$core$_LT___1 = (function (x){
return true;
});
var cljs$core$_LT___2 = (function (x,y){
return (x < y);
});
var cljs$core$_LT___3 = (function() { 
var G__2069__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__2070 = y;
var G__2071 = cljs.core.first(more);
var G__2072 = cljs.core.next(more);
x = G__2070;
y = G__2071;
more = G__2072;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__2069 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__2073__i = 0, G__2073__a = new Array(arguments.length -  2);
while (G__2073__i < G__2073__a.length) {G__2073__a[G__2073__i] = arguments[G__2073__i + 2]; ++G__2073__i;}
  more = new cljs.core.IndexedSeq(G__2073__a,0);
} 
return G__2069__delegate.call(this,x,y,more);};
G__2069.cljs$lang$maxFixedArity = 2;
G__2069.cljs$lang$applyTo = (function (arglist__2074){
var x = cljs.core.first(arglist__2074);
arglist__2074 = cljs.core.next(arglist__2074);
var y = cljs.core.first(arglist__2074);
var more = cljs.core.rest(arglist__2074);
return G__2069__delegate(x,y,more);
});
G__2069.cljs$core$IFn$_invoke$arity$variadic = G__2069__delegate;
return G__2069;
})()
;
cljs$core$_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_LT___1.call(this,x);
case 2:
return cljs$core$_LT___2.call(this,x,y);
default:
var G__2075 = null;
if (arguments.length > 2) {
var G__2076__i = 0, G__2076__a = new Array(arguments.length -  2);
while (G__2076__i < G__2076__a.length) {G__2076__a[G__2076__i] = arguments[G__2076__i + 2]; ++G__2076__i;}
G__2075 = new cljs.core.IndexedSeq(G__2076__a,0);
}
return cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2075);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_LT_.cljs$lang$maxFixedArity = 2;
cljs$core$_LT_.cljs$lang$applyTo = cljs$core$_LT___3.cljs$lang$applyTo;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT___1;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT___2;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_LT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT__EQ_ = (function() {
var cljs$core$_LT__EQ_ = null;
var cljs$core$_LT__EQ___1 = (function (x){
return true;
});
var cljs$core$_LT__EQ___2 = (function (x,y){
return (x <= y);
});
var cljs$core$_LT__EQ___3 = (function() { 
var G__2077__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__2078 = y;
var G__2079 = cljs.core.first(more);
var G__2080 = cljs.core.next(more);
x = G__2078;
y = G__2079;
more = G__2080;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__2077 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__2081__i = 0, G__2081__a = new Array(arguments.length -  2);
while (G__2081__i < G__2081__a.length) {G__2081__a[G__2081__i] = arguments[G__2081__i + 2]; ++G__2081__i;}
  more = new cljs.core.IndexedSeq(G__2081__a,0);
} 
return G__2077__delegate.call(this,x,y,more);};
G__2077.cljs$lang$maxFixedArity = 2;
G__2077.cljs$lang$applyTo = (function (arglist__2082){
var x = cljs.core.first(arglist__2082);
arglist__2082 = cljs.core.next(arglist__2082);
var y = cljs.core.first(arglist__2082);
var more = cljs.core.rest(arglist__2082);
return G__2077__delegate(x,y,more);
});
G__2077.cljs$core$IFn$_invoke$arity$variadic = G__2077__delegate;
return G__2077;
})()
;
cljs$core$_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_LT__EQ___1.call(this,x);
case 2:
return cljs$core$_LT__EQ___2.call(this,x,y);
default:
var G__2083 = null;
if (arguments.length > 2) {
var G__2084__i = 0, G__2084__a = new Array(arguments.length -  2);
while (G__2084__i < G__2084__a.length) {G__2084__a[G__2084__i] = arguments[G__2084__i + 2]; ++G__2084__i;}
G__2083 = new cljs.core.IndexedSeq(G__2084__a,0);
}
return cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2083);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_LT__EQ_.cljs$lang$applyTo = cljs$core$_LT__EQ___3.cljs$lang$applyTo;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT__EQ___1;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT__EQ___2;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_LT__EQ_;
})()
;
/**
 * Returns non-nil if nums are in monotonically decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT_ = (function() {
var cljs$core$_GT_ = null;
var cljs$core$_GT___1 = (function (x){
return true;
});
var cljs$core$_GT___2 = (function (x,y){
return (x > y);
});
var cljs$core$_GT___3 = (function() { 
var G__2085__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__2086 = y;
var G__2087 = cljs.core.first(more);
var G__2088 = cljs.core.next(more);
x = G__2086;
y = G__2087;
more = G__2088;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__2085 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__2089__i = 0, G__2089__a = new Array(arguments.length -  2);
while (G__2089__i < G__2089__a.length) {G__2089__a[G__2089__i] = arguments[G__2089__i + 2]; ++G__2089__i;}
  more = new cljs.core.IndexedSeq(G__2089__a,0);
} 
return G__2085__delegate.call(this,x,y,more);};
G__2085.cljs$lang$maxFixedArity = 2;
G__2085.cljs$lang$applyTo = (function (arglist__2090){
var x = cljs.core.first(arglist__2090);
arglist__2090 = cljs.core.next(arglist__2090);
var y = cljs.core.first(arglist__2090);
var more = cljs.core.rest(arglist__2090);
return G__2085__delegate(x,y,more);
});
G__2085.cljs$core$IFn$_invoke$arity$variadic = G__2085__delegate;
return G__2085;
})()
;
cljs$core$_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_GT___1.call(this,x);
case 2:
return cljs$core$_GT___2.call(this,x,y);
default:
var G__2091 = null;
if (arguments.length > 2) {
var G__2092__i = 0, G__2092__a = new Array(arguments.length -  2);
while (G__2092__i < G__2092__a.length) {G__2092__a[G__2092__i] = arguments[G__2092__i + 2]; ++G__2092__i;}
G__2091 = new cljs.core.IndexedSeq(G__2092__a,0);
}
return cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2091);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_GT_.cljs$lang$maxFixedArity = 2;
cljs$core$_GT_.cljs$lang$applyTo = cljs$core$_GT___3.cljs$lang$applyTo;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT___1;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT___2;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_GT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT__EQ_ = (function() {
var cljs$core$_GT__EQ_ = null;
var cljs$core$_GT__EQ___1 = (function (x){
return true;
});
var cljs$core$_GT__EQ___2 = (function (x,y){
return (x >= y);
});
var cljs$core$_GT__EQ___3 = (function() { 
var G__2093__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__2094 = y;
var G__2095 = cljs.core.first(more);
var G__2096 = cljs.core.next(more);
x = G__2094;
y = G__2095;
more = G__2096;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__2093 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__2097__i = 0, G__2097__a = new Array(arguments.length -  2);
while (G__2097__i < G__2097__a.length) {G__2097__a[G__2097__i] = arguments[G__2097__i + 2]; ++G__2097__i;}
  more = new cljs.core.IndexedSeq(G__2097__a,0);
} 
return G__2093__delegate.call(this,x,y,more);};
G__2093.cljs$lang$maxFixedArity = 2;
G__2093.cljs$lang$applyTo = (function (arglist__2098){
var x = cljs.core.first(arglist__2098);
arglist__2098 = cljs.core.next(arglist__2098);
var y = cljs.core.first(arglist__2098);
var more = cljs.core.rest(arglist__2098);
return G__2093__delegate(x,y,more);
});
G__2093.cljs$core$IFn$_invoke$arity$variadic = G__2093__delegate;
return G__2093;
})()
;
cljs$core$_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_GT__EQ___1.call(this,x);
case 2:
return cljs$core$_GT__EQ___2.call(this,x,y);
default:
var G__2099 = null;
if (arguments.length > 2) {
var G__2100__i = 0, G__2100__a = new Array(arguments.length -  2);
while (G__2100__i < G__2100__a.length) {G__2100__a[G__2100__i] = arguments[G__2100__i + 2]; ++G__2100__i;}
G__2099 = new cljs.core.IndexedSeq(G__2100__a,0);
}
return cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2099);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_GT__EQ_.cljs$lang$applyTo = cljs$core$_GT__EQ___3.cljs$lang$applyTo;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT__EQ___1;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT__EQ___2;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_GT__EQ_;
})()
;
/**
 * Returns a number one less than num.
 */
cljs.core.dec = (function cljs$core$dec(x){
return (x - (1));
});
/**
 * Returns the greatest of the nums.
 * @param {...*} var_args
 */
cljs.core.max = (function() {
var cljs$core$max = null;
var cljs$core$max__1 = (function (x){
return x;
});
var cljs$core$max__2 = (function (x,y){
var x__10892__auto__ = x;
var y__10893__auto__ = y;
return ((x__10892__auto__ > y__10893__auto__) ? x__10892__auto__ : y__10893__auto__);
});
var cljs$core$max__3 = (function() { 
var G__2101__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$max,(function (){var x__10892__auto__ = x;
var y__10893__auto__ = y;
return ((x__10892__auto__ > y__10893__auto__) ? x__10892__auto__ : y__10893__auto__);
})(),more);
};
var G__2101 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__2102__i = 0, G__2102__a = new Array(arguments.length -  2);
while (G__2102__i < G__2102__a.length) {G__2102__a[G__2102__i] = arguments[G__2102__i + 2]; ++G__2102__i;}
  more = new cljs.core.IndexedSeq(G__2102__a,0);
} 
return G__2101__delegate.call(this,x,y,more);};
G__2101.cljs$lang$maxFixedArity = 2;
G__2101.cljs$lang$applyTo = (function (arglist__2103){
var x = cljs.core.first(arglist__2103);
arglist__2103 = cljs.core.next(arglist__2103);
var y = cljs.core.first(arglist__2103);
var more = cljs.core.rest(arglist__2103);
return G__2101__delegate(x,y,more);
});
G__2101.cljs$core$IFn$_invoke$arity$variadic = G__2101__delegate;
return G__2101;
})()
;
cljs$core$max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$max__1.call(this,x);
case 2:
return cljs$core$max__2.call(this,x,y);
default:
var G__2104 = null;
if (arguments.length > 2) {
var G__2105__i = 0, G__2105__a = new Array(arguments.length -  2);
while (G__2105__i < G__2105__a.length) {G__2105__a[G__2105__i] = arguments[G__2105__i + 2]; ++G__2105__i;}
G__2104 = new cljs.core.IndexedSeq(G__2105__a,0);
}
return cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2104);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$max.cljs$lang$maxFixedArity = 2;
cljs$core$max.cljs$lang$applyTo = cljs$core$max__3.cljs$lang$applyTo;
cljs$core$max.cljs$core$IFn$_invoke$arity$1 = cljs$core$max__1;
cljs$core$max.cljs$core$IFn$_invoke$arity$2 = cljs$core$max__2;
cljs$core$max.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$max;
})()
;
/**
 * Returns the least of the nums.
 * @param {...*} var_args
 */
cljs.core.min = (function() {
var cljs$core$min = null;
var cljs$core$min__1 = (function (x){
return x;
});
var cljs$core$min__2 = (function (x,y){
var x__10895__auto__ = x;
var y__10896__auto__ = y;
return ((x__10895__auto__ < y__10896__auto__) ? x__10895__auto__ : y__10896__auto__);
});
var cljs$core$min__3 = (function() { 
var G__2106__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$min,(function (){var x__10895__auto__ = x;
var y__10896__auto__ = y;
return ((x__10895__auto__ < y__10896__auto__) ? x__10895__auto__ : y__10896__auto__);
})(),more);
};
var G__2106 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__2107__i = 0, G__2107__a = new Array(arguments.length -  2);
while (G__2107__i < G__2107__a.length) {G__2107__a[G__2107__i] = arguments[G__2107__i + 2]; ++G__2107__i;}
  more = new cljs.core.IndexedSeq(G__2107__a,0);
} 
return G__2106__delegate.call(this,x,y,more);};
G__2106.cljs$lang$maxFixedArity = 2;
G__2106.cljs$lang$applyTo = (function (arglist__2108){
var x = cljs.core.first(arglist__2108);
arglist__2108 = cljs.core.next(arglist__2108);
var y = cljs.core.first(arglist__2108);
var more = cljs.core.rest(arglist__2108);
return G__2106__delegate(x,y,more);
});
G__2106.cljs$core$IFn$_invoke$arity$variadic = G__2106__delegate;
return G__2106;
})()
;
cljs$core$min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$min__1.call(this,x);
case 2:
return cljs$core$min__2.call(this,x,y);
default:
var G__2109 = null;
if (arguments.length > 2) {
var G__2110__i = 0, G__2110__a = new Array(arguments.length -  2);
while (G__2110__i < G__2110__a.length) {G__2110__a[G__2110__i] = arguments[G__2110__i + 2]; ++G__2110__i;}
G__2109 = new cljs.core.IndexedSeq(G__2110__a,0);
}
return cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2109);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$min.cljs$lang$maxFixedArity = 2;
cljs$core$min.cljs$lang$applyTo = cljs$core$min__3.cljs$lang$applyTo;
cljs$core$min.cljs$core$IFn$_invoke$arity$1 = cljs$core$min__1;
cljs$core$min.cljs$core$IFn$_invoke$arity$2 = cljs$core$min__2;
cljs$core$min.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$min;
})()
;
cljs.core.byte$ = (function cljs$core$byte(x){
return x;
});
/**
 * Coerce to char
 */
cljs.core.char$ = (function cljs$core$char(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function cljs$core$short(x){
return x;
});
cljs.core.float$ = (function cljs$core$float(x){
return x;
});
cljs.core.double$ = (function cljs$core$double(x){
return x;
});
cljs.core.unchecked_byte = (function cljs$core$unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function cljs$core$unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function cljs$core$unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function cljs$core$unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function cljs$core$unchecked_double(x){
return x;
});
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add = (function() {
var cljs$core$unchecked_add = null;
var cljs$core$unchecked_add__0 = (function (){
return (0);
});
var cljs$core$unchecked_add__1 = (function (x){
return x;
});
var cljs$core$unchecked_add__2 = (function (x,y){
return (x + y);
});
var cljs$core$unchecked_add__3 = (function() { 
var G__2111__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add,(x + y),more);
};
var G__2111 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__2112__i = 0, G__2112__a = new Array(arguments.length -  2);
while (G__2112__i < G__2112__a.length) {G__2112__a[G__2112__i] = arguments[G__2112__i + 2]; ++G__2112__i;}
  more = new cljs.core.IndexedSeq(G__2112__a,0);
} 
return G__2111__delegate.call(this,x,y,more);};
G__2111.cljs$lang$maxFixedArity = 2;
G__2111.cljs$lang$applyTo = (function (arglist__2113){
var x = cljs.core.first(arglist__2113);
arglist__2113 = cljs.core.next(arglist__2113);
var y = cljs.core.first(arglist__2113);
var more = cljs.core.rest(arglist__2113);
return G__2111__delegate(x,y,more);
});
G__2111.cljs$core$IFn$_invoke$arity$variadic = G__2111__delegate;
return G__2111;
})()
;
cljs$core$unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_add__0.call(this);
case 1:
return cljs$core$unchecked_add__1.call(this,x);
case 2:
return cljs$core$unchecked_add__2.call(this,x,y);
default:
var G__2114 = null;
if (arguments.length > 2) {
var G__2115__i = 0, G__2115__a = new Array(arguments.length -  2);
while (G__2115__i < G__2115__a.length) {G__2115__a[G__2115__i] = arguments[G__2115__i + 2]; ++G__2115__i;}
G__2114 = new cljs.core.IndexedSeq(G__2115__a,0);
}
return cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2114);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_add.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_add.cljs$lang$applyTo = cljs$core$unchecked_add__3.cljs$lang$applyTo;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add__0;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add__1;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add__2;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_add;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add_int = (function() {
var cljs$core$unchecked_add_int = null;
var cljs$core$unchecked_add_int__0 = (function (){
return (0);
});
var cljs$core$unchecked_add_int__1 = (function (x){
return x;
});
var cljs$core$unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var cljs$core$unchecked_add_int__3 = (function() { 
var G__2116__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add_int,(x + y),more);
};
var G__2116 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__2117__i = 0, G__2117__a = new Array(arguments.length -  2);
while (G__2117__i < G__2117__a.length) {G__2117__a[G__2117__i] = arguments[G__2117__i + 2]; ++G__2117__i;}
  more = new cljs.core.IndexedSeq(G__2117__a,0);
} 
return G__2116__delegate.call(this,x,y,more);};
G__2116.cljs$lang$maxFixedArity = 2;
G__2116.cljs$lang$applyTo = (function (arglist__2118){
var x = cljs.core.first(arglist__2118);
arglist__2118 = cljs.core.next(arglist__2118);
var y = cljs.core.first(arglist__2118);
var more = cljs.core.rest(arglist__2118);
return G__2116__delegate(x,y,more);
});
G__2116.cljs$core$IFn$_invoke$arity$variadic = G__2116__delegate;
return G__2116;
})()
;
cljs$core$unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_add_int__0.call(this);
case 1:
return cljs$core$unchecked_add_int__1.call(this,x);
case 2:
return cljs$core$unchecked_add_int__2.call(this,x,y);
default:
var G__2119 = null;
if (arguments.length > 2) {
var G__2120__i = 0, G__2120__a = new Array(arguments.length -  2);
while (G__2120__i < G__2120__a.length) {G__2120__a[G__2120__i] = arguments[G__2120__i + 2]; ++G__2120__i;}
G__2119 = new cljs.core.IndexedSeq(G__2120__a,0);
}
return cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2119);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_add_int.cljs$lang$applyTo = cljs$core$unchecked_add_int__3.cljs$lang$applyTo;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add_int__0;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add_int__1;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add_int__2;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_add_int;
})()
;
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec = (function cljs$core$unchecked_dec(x){
return (x - (1));
});
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec_int = (function cljs$core$unchecked_dec_int(x){
return (x - (1));
});
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core.unchecked_divide_int = (function() {
var cljs$core$unchecked_divide_int = null;
var cljs$core$unchecked_divide_int__1 = (function (x){
return cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var cljs$core$unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var cljs$core$unchecked_divide_int__3 = (function() { 
var G__2125__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_divide_int,cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__2125 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__2126__i = 0, G__2126__a = new Array(arguments.length -  2);
while (G__2126__i < G__2126__a.length) {G__2126__a[G__2126__i] = arguments[G__2126__i + 2]; ++G__2126__i;}
  more = new cljs.core.IndexedSeq(G__2126__a,0);
} 
return G__2125__delegate.call(this,x,y,more);};
G__2125.cljs$lang$maxFixedArity = 2;
G__2125.cljs$lang$applyTo = (function (arglist__2127){
var x = cljs.core.first(arglist__2127);
arglist__2127 = cljs.core.next(arglist__2127);
var y = cljs.core.first(arglist__2127);
var more = cljs.core.rest(arglist__2127);
return G__2125__delegate(x,y,more);
});
G__2125.cljs$core$IFn$_invoke$arity$variadic = G__2125__delegate;
return G__2125;
})()
;
cljs$core$unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_divide_int__1.call(this,x);
case 2:
return cljs$core$unchecked_divide_int__2.call(this,x,y);
default:
var G__2128 = null;
if (arguments.length > 2) {
var G__2129__i = 0, G__2129__a = new Array(arguments.length -  2);
while (G__2129__i < G__2129__a.length) {G__2129__a[G__2129__i] = arguments[G__2129__i + 2]; ++G__2129__i;}
G__2128 = new cljs.core.IndexedSeq(G__2129__a,0);
}
return cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2128);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_divide_int.cljs$lang$applyTo = cljs$core$unchecked_divide_int__3.cljs$lang$applyTo;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_divide_int__1;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_divide_int__2;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function cljs$core$unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function cljs$core$unchecked_inc_int(x){
return (x + (1));
});
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply = (function() {
var cljs$core$unchecked_multiply = null;
var cljs$core$unchecked_multiply__0 = (function (){
return (1);
});
var cljs$core$unchecked_multiply__1 = (function (x){
return x;
});
var cljs$core$unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var cljs$core$unchecked_multiply__3 = (function() { 
var G__2130__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply,(x * y),more);
};
var G__2130 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__2131__i = 0, G__2131__a = new Array(arguments.length -  2);
while (G__2131__i < G__2131__a.length) {G__2131__a[G__2131__i] = arguments[G__2131__i + 2]; ++G__2131__i;}
  more = new cljs.core.IndexedSeq(G__2131__a,0);
} 
return G__2130__delegate.call(this,x,y,more);};
G__2130.cljs$lang$maxFixedArity = 2;
G__2130.cljs$lang$applyTo = (function (arglist__2132){
var x = cljs.core.first(arglist__2132);
arglist__2132 = cljs.core.next(arglist__2132);
var y = cljs.core.first(arglist__2132);
var more = cljs.core.rest(arglist__2132);
return G__2130__delegate(x,y,more);
});
G__2130.cljs$core$IFn$_invoke$arity$variadic = G__2130__delegate;
return G__2130;
})()
;
cljs$core$unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_multiply__0.call(this);
case 1:
return cljs$core$unchecked_multiply__1.call(this,x);
case 2:
return cljs$core$unchecked_multiply__2.call(this,x,y);
default:
var G__2133 = null;
if (arguments.length > 2) {
var G__2134__i = 0, G__2134__a = new Array(arguments.length -  2);
while (G__2134__i < G__2134__a.length) {G__2134__a[G__2134__i] = arguments[G__2134__i + 2]; ++G__2134__i;}
G__2133 = new cljs.core.IndexedSeq(G__2134__a,0);
}
return cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2133);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_multiply.cljs$lang$applyTo = cljs$core$unchecked_multiply__3.cljs$lang$applyTo;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply__0;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply__1;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply__2;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_multiply;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply_int = (function() {
var cljs$core$unchecked_multiply_int = null;
var cljs$core$unchecked_multiply_int__0 = (function (){
return (1);
});
var cljs$core$unchecked_multiply_int__1 = (function (x){
return x;
});
var cljs$core$unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var cljs$core$unchecked_multiply_int__3 = (function() { 
var G__2135__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply_int,(x * y),more);
};
var G__2135 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__2136__i = 0, G__2136__a = new Array(arguments.length -  2);
while (G__2136__i < G__2136__a.length) {G__2136__a[G__2136__i] = arguments[G__2136__i + 2]; ++G__2136__i;}
  more = new cljs.core.IndexedSeq(G__2136__a,0);
} 
return G__2135__delegate.call(this,x,y,more);};
G__2135.cljs$lang$maxFixedArity = 2;
G__2135.cljs$lang$applyTo = (function (arglist__2137){
var x = cljs.core.first(arglist__2137);
arglist__2137 = cljs.core.next(arglist__2137);
var y = cljs.core.first(arglist__2137);
var more = cljs.core.rest(arglist__2137);
return G__2135__delegate(x,y,more);
});
G__2135.cljs$core$IFn$_invoke$arity$variadic = G__2135__delegate;
return G__2135;
})()
;
cljs$core$unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_multiply_int__0.call(this);
case 1:
return cljs$core$unchecked_multiply_int__1.call(this,x);
case 2:
return cljs$core$unchecked_multiply_int__2.call(this,x,y);
default:
var G__2138 = null;
if (arguments.length > 2) {
var G__2139__i = 0, G__2139__a = new Array(arguments.length -  2);
while (G__2139__i < G__2139__a.length) {G__2139__a[G__2139__i] = arguments[G__2139__i + 2]; ++G__2139__i;}
G__2138 = new cljs.core.IndexedSeq(G__2139__a,0);
}
return cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2138);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_multiply_int.cljs$lang$applyTo = cljs$core$unchecked_multiply_int__3.cljs$lang$applyTo;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply_int__0;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply_int__1;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply_int__2;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function cljs$core$unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function cljs$core$unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function cljs$core$unchecked_remainder_int(x,n){
var G__2142 = x;
var G__2143 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__2142,G__2143) : cljs.core.mod.call(null,G__2142,G__2143));
});
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract = (function() {
var cljs$core$unchecked_subtract = null;
var cljs$core$unchecked_subtract__1 = (function (x){
return (- x);
});
var cljs$core$unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var cljs$core$unchecked_subtract__3 = (function() { 
var G__2144__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract,(x - y),more);
};
var G__2144 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__2145__i = 0, G__2145__a = new Array(arguments.length -  2);
while (G__2145__i < G__2145__a.length) {G__2145__a[G__2145__i] = arguments[G__2145__i + 2]; ++G__2145__i;}
  more = new cljs.core.IndexedSeq(G__2145__a,0);
} 
return G__2144__delegate.call(this,x,y,more);};
G__2144.cljs$lang$maxFixedArity = 2;
G__2144.cljs$lang$applyTo = (function (arglist__2146){
var x = cljs.core.first(arglist__2146);
arglist__2146 = cljs.core.next(arglist__2146);
var y = cljs.core.first(arglist__2146);
var more = cljs.core.rest(arglist__2146);
return G__2144__delegate(x,y,more);
});
G__2144.cljs$core$IFn$_invoke$arity$variadic = G__2144__delegate;
return G__2144;
})()
;
cljs$core$unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_subtract__1.call(this,x);
case 2:
return cljs$core$unchecked_subtract__2.call(this,x,y);
default:
var G__2147 = null;
if (arguments.length > 2) {
var G__2148__i = 0, G__2148__a = new Array(arguments.length -  2);
while (G__2148__i < G__2148__a.length) {G__2148__a[G__2148__i] = arguments[G__2148__i + 2]; ++G__2148__i;}
G__2147 = new cljs.core.IndexedSeq(G__2148__a,0);
}
return cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2147);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_subtract.cljs$lang$applyTo = cljs$core$unchecked_subtract__3.cljs$lang$applyTo;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract__1;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract__2;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_subtract;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract_int = (function() {
var cljs$core$unchecked_subtract_int = null;
var cljs$core$unchecked_subtract_int__1 = (function (x){
return (- x);
});
var cljs$core$unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var cljs$core$unchecked_subtract_int__3 = (function() { 
var G__2149__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract_int,(x - y),more);
};
var G__2149 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__2150__i = 0, G__2150__a = new Array(arguments.length -  2);
while (G__2150__i < G__2150__a.length) {G__2150__a[G__2150__i] = arguments[G__2150__i + 2]; ++G__2150__i;}
  more = new cljs.core.IndexedSeq(G__2150__a,0);
} 
return G__2149__delegate.call(this,x,y,more);};
G__2149.cljs$lang$maxFixedArity = 2;
G__2149.cljs$lang$applyTo = (function (arglist__2151){
var x = cljs.core.first(arglist__2151);
arglist__2151 = cljs.core.next(arglist__2151);
var y = cljs.core.first(arglist__2151);
var more = cljs.core.rest(arglist__2151);
return G__2149__delegate(x,y,more);
});
G__2149.cljs$core$IFn$_invoke$arity$variadic = G__2149__delegate;
return G__2149;
})()
;
cljs$core$unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_subtract_int__1.call(this,x);
case 2:
return cljs$core$unchecked_subtract_int__2.call(this,x,y);
default:
var G__2152 = null;
if (arguments.length > 2) {
var G__2153__i = 0, G__2153__a = new Array(arguments.length -  2);
while (G__2153__i < G__2153__a.length) {G__2153__a[G__2153__i] = arguments[G__2153__i + 2]; ++G__2153__i;}
G__2152 = new cljs.core.IndexedSeq(G__2153__a,0);
}
return cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2152);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_subtract_int.cljs$lang$applyTo = cljs$core$unchecked_subtract_int__3.cljs$lang$applyTo;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract_int__1;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract_int__2;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_subtract_int;
})()
;
cljs.core.fix = (function cljs$core$fix(q){
if((q >= (0))){
var G__2156 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__2156) : Math.floor.call(null,G__2156));
} else {
var G__2157 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__2157) : Math.ceil.call(null,G__2157));
}
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.int$ = (function cljs$core$int(x){
return (x | (0));
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.unchecked_int = (function cljs$core$unchecked_int(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.long$ = (function cljs$core$long(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.unchecked_long = (function cljs$core$unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function cljs$core$booleans(x){
return x;
});
cljs.core.bytes = (function cljs$core$bytes(x){
return x;
});
cljs.core.chars = (function cljs$core$chars(x){
return x;
});
cljs.core.shorts = (function cljs$core$shorts(x){
return x;
});
cljs.core.ints = (function cljs$core$ints(x){
return x;
});
cljs.core.floats = (function cljs$core$floats(x){
return x;
});
cljs.core.doubles = (function cljs$core$doubles(x){
return x;
});
cljs.core.longs = (function cljs$core$longs(x){
return x;
});
/**
 * Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
 */
cljs.core.js_mod = (function cljs$core$js_mod(n,d){
return (n % d);
});
/**
 * Modulus of num and div. Truncates toward negative infinity.
 */
cljs.core.mod = (function cljs$core$mod(n,d){
return (((n % d) + d) % d);
});
/**
 * quot[ient] of dividing numerator by denominator.
 */
cljs.core.quot = (function cljs$core$quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
 * remainder of dividing numerator by denominator.
 */
cljs.core.rem = (function cljs$core$rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
 * Bitwise exclusive or
 * @param {...*} var_args
 */
cljs.core.bit_xor = (function() {
var cljs$core$bit_xor = null;
var cljs$core$bit_xor__2 = (function (x,y){
return (x ^ y);
});
var cljs$core$bit_xor__3 = (function() { 
var G__2158__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_xor,(x ^ y),more);
};
var G__2158 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__2159__i = 0, G__2159__a = new Array(arguments.length -  2);
while (G__2159__i < G__2159__a.length) {G__2159__a[G__2159__i] = arguments[G__2159__i + 2]; ++G__2159__i;}
  more = new cljs.core.IndexedSeq(G__2159__a,0);
} 
return G__2158__delegate.call(this,x,y,more);};
G__2158.cljs$lang$maxFixedArity = 2;
G__2158.cljs$lang$applyTo = (function (arglist__2160){
var x = cljs.core.first(arglist__2160);
arglist__2160 = cljs.core.next(arglist__2160);
var y = cljs.core.first(arglist__2160);
var more = cljs.core.rest(arglist__2160);
return G__2158__delegate(x,y,more);
});
G__2158.cljs$core$IFn$_invoke$arity$variadic = G__2158__delegate;
return G__2158;
})()
;
cljs$core$bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_xor__2.call(this,x,y);
default:
var G__2161 = null;
if (arguments.length > 2) {
var G__2162__i = 0, G__2162__a = new Array(arguments.length -  2);
while (G__2162__i < G__2162__a.length) {G__2162__a[G__2162__i] = arguments[G__2162__i + 2]; ++G__2162__i;}
G__2161 = new cljs.core.IndexedSeq(G__2162__a,0);
}
return cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2161);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_xor.cljs$lang$maxFixedArity = 2;
cljs$core$bit_xor.cljs$lang$applyTo = cljs$core$bit_xor__3.cljs$lang$applyTo;
cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_xor__2;
cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_xor;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and = (function() {
var cljs$core$bit_and = null;
var cljs$core$bit_and__2 = (function (x,y){
return (x & y);
});
var cljs$core$bit_and__3 = (function() { 
var G__2163__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and,(x & y),more);
};
var G__2163 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__2164__i = 0, G__2164__a = new Array(arguments.length -  2);
while (G__2164__i < G__2164__a.length) {G__2164__a[G__2164__i] = arguments[G__2164__i + 2]; ++G__2164__i;}
  more = new cljs.core.IndexedSeq(G__2164__a,0);
} 
return G__2163__delegate.call(this,x,y,more);};
G__2163.cljs$lang$maxFixedArity = 2;
G__2163.cljs$lang$applyTo = (function (arglist__2165){
var x = cljs.core.first(arglist__2165);
arglist__2165 = cljs.core.next(arglist__2165);
var y = cljs.core.first(arglist__2165);
var more = cljs.core.rest(arglist__2165);
return G__2163__delegate(x,y,more);
});
G__2163.cljs$core$IFn$_invoke$arity$variadic = G__2163__delegate;
return G__2163;
})()
;
cljs$core$bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_and__2.call(this,x,y);
default:
var G__2166 = null;
if (arguments.length > 2) {
var G__2167__i = 0, G__2167__a = new Array(arguments.length -  2);
while (G__2167__i < G__2167__a.length) {G__2167__a[G__2167__i] = arguments[G__2167__i + 2]; ++G__2167__i;}
G__2166 = new cljs.core.IndexedSeq(G__2167__a,0);
}
return cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2166);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_and.cljs$lang$maxFixedArity = 2;
cljs$core$bit_and.cljs$lang$applyTo = cljs$core$bit_and__3.cljs$lang$applyTo;
cljs$core$bit_and.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and__2;
cljs$core$bit_and.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_and;
})()
;
/**
 * Bitwise or
 * @param {...*} var_args
 */
cljs.core.bit_or = (function() {
var cljs$core$bit_or = null;
var cljs$core$bit_or__2 = (function (x,y){
return (x | y);
});
var cljs$core$bit_or__3 = (function() { 
var G__2168__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_or,(x | y),more);
};
var G__2168 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__2169__i = 0, G__2169__a = new Array(arguments.length -  2);
while (G__2169__i < G__2169__a.length) {G__2169__a[G__2169__i] = arguments[G__2169__i + 2]; ++G__2169__i;}
  more = new cljs.core.IndexedSeq(G__2169__a,0);
} 
return G__2168__delegate.call(this,x,y,more);};
G__2168.cljs$lang$maxFixedArity = 2;
G__2168.cljs$lang$applyTo = (function (arglist__2170){
var x = cljs.core.first(arglist__2170);
arglist__2170 = cljs.core.next(arglist__2170);
var y = cljs.core.first(arglist__2170);
var more = cljs.core.rest(arglist__2170);
return G__2168__delegate(x,y,more);
});
G__2168.cljs$core$IFn$_invoke$arity$variadic = G__2168__delegate;
return G__2168;
})()
;
cljs$core$bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_or__2.call(this,x,y);
default:
var G__2171 = null;
if (arguments.length > 2) {
var G__2172__i = 0, G__2172__a = new Array(arguments.length -  2);
while (G__2172__i < G__2172__a.length) {G__2172__a[G__2172__i] = arguments[G__2172__i + 2]; ++G__2172__i;}
G__2171 = new cljs.core.IndexedSeq(G__2172__a,0);
}
return cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2171);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_or.cljs$lang$maxFixedArity = 2;
cljs$core$bit_or.cljs$lang$applyTo = cljs$core$bit_or__3.cljs$lang$applyTo;
cljs$core$bit_or.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_or__2;
cljs$core$bit_or.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_or;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and_not = (function() {
var cljs$core$bit_and_not = null;
var cljs$core$bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var cljs$core$bit_and_not__3 = (function() { 
var G__2173__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and_not,(x & ~y),more);
};
var G__2173 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__2174__i = 0, G__2174__a = new Array(arguments.length -  2);
while (G__2174__i < G__2174__a.length) {G__2174__a[G__2174__i] = arguments[G__2174__i + 2]; ++G__2174__i;}
  more = new cljs.core.IndexedSeq(G__2174__a,0);
} 
return G__2173__delegate.call(this,x,y,more);};
G__2173.cljs$lang$maxFixedArity = 2;
G__2173.cljs$lang$applyTo = (function (arglist__2175){
var x = cljs.core.first(arglist__2175);
arglist__2175 = cljs.core.next(arglist__2175);
var y = cljs.core.first(arglist__2175);
var more = cljs.core.rest(arglist__2175);
return G__2173__delegate(x,y,more);
});
G__2173.cljs$core$IFn$_invoke$arity$variadic = G__2173__delegate;
return G__2173;
})()
;
cljs$core$bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_and_not__2.call(this,x,y);
default:
var G__2176 = null;
if (arguments.length > 2) {
var G__2177__i = 0, G__2177__a = new Array(arguments.length -  2);
while (G__2177__i < G__2177__a.length) {G__2177__a[G__2177__i] = arguments[G__2177__i + 2]; ++G__2177__i;}
G__2176 = new cljs.core.IndexedSeq(G__2177__a,0);
}
return cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2176);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_and_not.cljs$lang$maxFixedArity = 2;
cljs$core$bit_and_not.cljs$lang$applyTo = cljs$core$bit_and_not__3.cljs$lang$applyTo;
cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and_not__2;
cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_and_not;
})()
;
/**
 * Clear bit at index n
 */
cljs.core.bit_clear = (function cljs$core$bit_clear(x,n){
return (x & ~(1 << n));
});
/**
 * Flip bit at index n
 */
cljs.core.bit_flip = (function cljs$core$bit_flip(x,n){
return (x ^ (1 << n));
});
/**
 * Bitwise complement
 */
cljs.core.bit_not = (function cljs$core$bit_not(x){
return (~ x);
});
/**
 * Set bit at index n
 */
cljs.core.bit_set = (function cljs$core$bit_set(x,n){
return (x | (1 << n));
});
/**
 * Test bit at index n
 */
cljs.core.bit_test = (function cljs$core$bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
 * Bitwise shift left
 */
cljs.core.bit_shift_left = (function cljs$core$bit_shift_left(x,n){
return (x << n);
});
/**
 * Bitwise shift right
 */
cljs.core.bit_shift_right = (function cljs$core$bit_shift_right(x,n){
return (x >> n);
});
/**
 * DEPRECATED: Bitwise shift right with zero fill
 */
cljs.core.bit_shift_right_zero_fill = (function cljs$core$bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
 * Bitwise shift right with zero fill
 */
cljs.core.unsigned_bit_shift_right = (function cljs$core$unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
 * Counts the number of bits set in n
 */
cljs.core.bit_count = (function cljs$core$bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
 * Returns non-nil if nums all have the equivalent
 * value, otherwise false. Behavior on non nums is
 * undefined.
 * @param {...*} var_args
 */
cljs.core._EQ__EQ_ = (function() {
var cljs$core$_EQ__EQ_ = null;
var cljs$core$_EQ__EQ___1 = (function (x){
return true;
});
var cljs$core$_EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var cljs$core$_EQ__EQ___3 = (function() { 
var G__2182__delegate = function (x,y,more){
while(true){
if(cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__2183 = y;
var G__2184 = cljs.core.first(more);
var G__2185 = cljs.core.next(more);
x = G__2183;
y = G__2184;
more = G__2185;
continue;
} else {
return cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__2182 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__2186__i = 0, G__2186__a = new Array(arguments.length -  2);
while (G__2186__i < G__2186__a.length) {G__2186__a[G__2186__i] = arguments[G__2186__i + 2]; ++G__2186__i;}
  more = new cljs.core.IndexedSeq(G__2186__a,0);
} 
return G__2182__delegate.call(this,x,y,more);};
G__2182.cljs$lang$maxFixedArity = 2;
G__2182.cljs$lang$applyTo = (function (arglist__2187){
var x = cljs.core.first(arglist__2187);
arglist__2187 = cljs.core.next(arglist__2187);
var y = cljs.core.first(arglist__2187);
var more = cljs.core.rest(arglist__2187);
return G__2182__delegate(x,y,more);
});
G__2182.cljs$core$IFn$_invoke$arity$variadic = G__2182__delegate;
return G__2182;
})()
;
cljs$core$_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_EQ__EQ___1.call(this,x);
case 2:
return cljs$core$_EQ__EQ___2.call(this,x,y);
default:
var G__2188 = null;
if (arguments.length > 2) {
var G__2189__i = 0, G__2189__a = new Array(arguments.length -  2);
while (G__2189__i < G__2189__a.length) {G__2189__a[G__2189__i] = arguments[G__2189__i + 2]; ++G__2189__i;}
G__2188 = new cljs.core.IndexedSeq(G__2189__a,0);
}
return cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2188);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_EQ__EQ_.cljs$lang$applyTo = cljs$core$_EQ__EQ___3.cljs$lang$applyTo;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ__EQ___1;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ__EQ___2;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_EQ__EQ_;
})()
;
/**
 * Returns true if num is greater than zero, else false
 */
cljs.core.pos_QMARK_ = (function cljs$core$pos_QMARK_(n){
return (n > (0));
});
/**
 * Returns true if num is zero, else false
 */
cljs.core.zero_QMARK_ = (function cljs$core$zero_QMARK_(n){
return (n === (0));
});
/**
 * Returns true if num is less than zero, else false
 */
cljs.core.neg_QMARK_ = (function cljs$core$neg_QMARK_(x){
return (x < (0));
});
/**
 * Returns the nth next of coll, (seq coll) when n is 0.
 */
cljs.core.nthnext = (function cljs$core$nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__2190 = (n__$1 - (1));
var G__2191 = cljs.core.next(xs);
n__$1 = G__2190;
xs = G__2191;
continue;
} else {
return xs;
}
break;
}
});
/**
 * With no args, returns the empty string. With one arg x, returns
 * x.toString().  (str nil) returns the empty string. With more than
 * one arg, returns the concatenation of the str values of the args.
 * @param {...*} var_args
 */
cljs.core.str = (function() {
var cljs$core$str = null;
var cljs$core$str__0 = (function (){
return "";
});
var cljs$core$str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__2195 = x;
return goog.string.buildString(G__2195);
}
});
var cljs$core$str__2 = (function() { 
var G__2196__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(cljs$core$str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__2197 = sb.append(cljs$core$str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__2198 = cljs.core.next(more);
sb = G__2197;
more = G__2198;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__2196 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__2199__i = 0, G__2199__a = new Array(arguments.length -  1);
while (G__2199__i < G__2199__a.length) {G__2199__a[G__2199__i] = arguments[G__2199__i + 1]; ++G__2199__i;}
  ys = new cljs.core.IndexedSeq(G__2199__a,0);
} 
return G__2196__delegate.call(this,x,ys);};
G__2196.cljs$lang$maxFixedArity = 1;
G__2196.cljs$lang$applyTo = (function (arglist__2200){
var x = cljs.core.first(arglist__2200);
var ys = cljs.core.rest(arglist__2200);
return G__2196__delegate(x,ys);
});
G__2196.cljs$core$IFn$_invoke$arity$variadic = G__2196__delegate;
return G__2196;
})()
;
cljs$core$str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return cljs$core$str__0.call(this);
case 1:
return cljs$core$str__1.call(this,x);
default:
var G__2201 = null;
if (arguments.length > 1) {
var G__2202__i = 0, G__2202__a = new Array(arguments.length -  1);
while (G__2202__i < G__2202__a.length) {G__2202__a[G__2202__i] = arguments[G__2202__i + 1]; ++G__2202__i;}
G__2201 = new cljs.core.IndexedSeq(G__2202__a,0);
}
return cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__2201);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$str.cljs$lang$maxFixedArity = 1;
cljs$core$str.cljs$lang$applyTo = cljs$core$str__2.cljs$lang$applyTo;
cljs$core$str.cljs$core$IFn$_invoke$arity$0 = cljs$core$str__0;
cljs$core$str.cljs$core$IFn$_invoke$arity$1 = cljs$core$str__1;
cljs$core$str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$str;
})()
;
/**
 * Returns the substring of s beginning at start inclusive, and ending
 * at end (defaults to length of string), exclusive.
 */
cljs.core.subs = (function() {
var cljs$core$subs = null;
var cljs$core$subs__2 = (function (s,start){
return s.substring(start);
});
var cljs$core$subs__3 = (function (s,start,end){
return s.substring(start,end);
});
cljs$core$subs = function(s,start,end){
switch(arguments.length){
case 2:
return cljs$core$subs__2.call(this,s,start);
case 3:
return cljs$core$subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subs.cljs$core$IFn$_invoke$arity$2 = cljs$core$subs__2;
cljs$core$subs.cljs$core$IFn$_invoke$arity$3 = cljs$core$subs__3;
return cljs$core$subs;
})()
;

/**
 * Assumes x is sequential. Returns true if x equals y, otherwise
 * returns false.
 */
cljs.core.equiv_sequential = (function cljs$core$equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__2203 = cljs.core.next(xs);
var G__2204 = cljs.core.next(ys);
xs = G__2203;
ys = G__2204;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function cljs$core$hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__2205 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__2206 = cljs.core.next(s);
res = G__2205;
s = G__2206;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function cljs$core$hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__2211 = ((h + (cljs.core.hash((function (){var G__2209 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__2209) : cljs.core.key.call(null,G__2209));
})()) ^ cljs.core.hash((function (){var G__2210 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__2210) : cljs.core.val.call(null,G__2210));
})()))) % (4503599627370496));
var G__2212 = cljs.core.next(s);
h = G__2211;
s = G__2212;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function cljs$core$hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__2213 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__2214 = cljs.core.next(s__$1);
h = G__2213;
s__$1 = G__2214;
continue;
} else {
return h;
}
break;
}
});


/**
 * Takes a JavaScript object and a map of names to functions and
 * attaches said functions as methods on the object.  Any references to
 * JavaScript's implicit this (via the this-as macro) will resolve to the
 * object that the function is attached.
 */
cljs.core.extend_object_BANG_ = (function cljs$core$extend_object_BANG_(obj,fn_map){
var seq__2225_2235 = cljs.core.seq(fn_map);
var chunk__2226_2236 = null;
var count__2227_2237 = (0);
var i__2228_2238 = (0);
while(true){
if((i__2228_2238 < count__2227_2237)){
var vec__2229_2239 = chunk__2226_2236.cljs$core$IIndexed$_nth$arity$2(null,i__2228_2238);
var key_name_2240 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2229_2239,(0),null);
var f_2241 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2229_2239,(1),null);
var str_name_2242 = (function (){var G__2230 = key_name_2240;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__2230) : cljs.core.name.call(null,G__2230));
})();
(obj[str_name_2242] = f_2241);

var G__2243 = seq__2225_2235;
var G__2244 = chunk__2226_2236;
var G__2245 = count__2227_2237;
var G__2246 = (i__2228_2238 + (1));
seq__2225_2235 = G__2243;
chunk__2226_2236 = G__2244;
count__2227_2237 = G__2245;
i__2228_2238 = G__2246;
continue;
} else {
var temp__4126__auto___2247 = cljs.core.seq(seq__2225_2235);
if(temp__4126__auto___2247){
var seq__2225_2248__$1 = temp__4126__auto___2247;
if(cljs.core.chunked_seq_QMARK_(seq__2225_2248__$1)){
var c__11190__auto___2249 = (function (){var G__2231 = seq__2225_2248__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__2231) : cljs.core.chunk_first.call(null,G__2231));
})();
var G__2250 = (function (){var G__2232 = seq__2225_2248__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__2232) : cljs.core.chunk_rest.call(null,G__2232));
})();
var G__2251 = c__11190__auto___2249;
var G__2252 = cljs.core.count(c__11190__auto___2249);
var G__2253 = (0);
seq__2225_2235 = G__2250;
chunk__2226_2236 = G__2251;
count__2227_2237 = G__2252;
i__2228_2238 = G__2253;
continue;
} else {
var vec__2233_2254 = cljs.core.first(seq__2225_2248__$1);
var key_name_2255 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2233_2254,(0),null);
var f_2256 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2233_2254,(1),null);
var str_name_2257 = (function (){var G__2234 = key_name_2255;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__2234) : cljs.core.name.call(null,G__2234));
})();
(obj[str_name_2257] = f_2256);

var G__2258 = cljs.core.next(seq__2225_2248__$1);
var G__2259 = null;
var G__2260 = (0);
var G__2261 = (0);
seq__2225_2235 = G__2258;
chunk__2226_2236 = G__2259;
count__2227_2237 = G__2260;
i__2228_2238 = G__2261;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__10916__auto__ = self__.__hash;
if(!((h__10916__auto__ == null))){
return h__10916__auto__;
} else {
var h__10916__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__10916__auto____$1;

return h__10916__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function cljs$core$__GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function cljs$core$__GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));
/**
 * Returns true if coll satisfies? IReversible.
 */
cljs.core.reversible_QMARK_ = (function cljs$core$reversible_QMARK_(coll){
var G__2263 = coll;
if(G__2263){
var bit__11120__auto__ = (G__2263.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__11120__auto__) || (G__2263.cljs$core$IReversible$)){
return true;
} else {
if((!G__2263.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__2263);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__2263);
}
});
/**
 * Returns, in constant time, a seq of the items in rev (which
 * can be a vector or sorted-map), in reverse order. If rev is empty returns nil
 */
cljs.core.rseq = (function cljs$core$rseq(coll){
return cljs.core._rseq(coll);
});
/**
 * Returns a seq of the items in coll in reverse order. Not lazy.
 */
cljs.core.reverse = (function cljs$core$reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
 * Creates a new list containing the items.
 * @param {...*} var_args
 */
cljs.core.list = (function() { 
var cljs$core$list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__2264 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__2264;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__2265 = (i - (1));
var G__2266 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__2265;
r = G__2266;
continue;
} else {
return r;
}
break;
}
};
var cljs$core$list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__2267__i = 0, G__2267__a = new Array(arguments.length -  0);
while (G__2267__i < G__2267__a.length) {G__2267__a[G__2267__i] = arguments[G__2267__i + 0]; ++G__2267__i;}
  xs = new cljs.core.IndexedSeq(G__2267__a,0);
} 
return cljs$core$list__delegate.call(this,xs);};
cljs$core$list.cljs$lang$maxFixedArity = 0;
cljs$core$list.cljs$lang$applyTo = (function (arglist__2268){
var xs = cljs.core.seq(arglist__2268);
return cljs$core$list__delegate(xs);
});
cljs$core$list.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list__delegate;
return cljs$core$list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__10916__auto__ = self__.__hash;
if(!((h__10916__auto__ == null))){
return h__10916__auto__;
} else {
var h__10916__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__10916__auto____$1;

return h__10916__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function cljs$core$__GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));
/**
 * Returns a new seq where x is the first element and seq is the rest.
 */
cljs.core.cons = (function cljs$core$cons(x,coll){
if((function (){var or__10823__auto__ = (coll == null);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var G__2272 = coll;
if(G__2272){
var bit__11117__auto__ = (G__2272.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__11117__auto__) || (G__2272.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
/**
 * Returns true if x implements IList
 */
cljs.core.list_QMARK_ = (function cljs$core$list_QMARK_(x){
var G__2274 = x;
if(G__2274){
var bit__11120__auto__ = (G__2274.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__11120__auto__) || (G__2274.cljs$core$IList$)){
return true;
} else {
if((!G__2274.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__2274);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__2274);
}
});
cljs.core.hash_keyword = (function cljs$core$hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function cljs$core$compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__10815__auto__ = cljs.core.not(a.ns);
if(and__10815__auto__){
return b.ns;
} else {
return and__10815__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__2281 = a.ns;
var G__2282 = b.ns;
return goog.array.defaultCompare(G__2281,G__2282);
})();
if(((0) === nsc)){
var G__2283 = a.name;
var G__2284 = b.name;
return goog.array.defaultCompare(G__2283,G__2284);
} else {
return nsc;
}
}
} else {
var G__2285 = a.name;
var G__2286 = b.name;
return goog.array.defaultCompare(G__2285,G__2286);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__10916__auto__ = self__._hash;
if(!((h__10916__auto__ == null))){
return h__10916__auto__;
} else {
var h__10916__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__10916__auto____$1;

return h__10916__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__2288 = null;
var G__2288__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__2288__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__2288 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__2288__2.call(this,self__,coll);
case 3:
return G__2288__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2288.cljs$core$IFn$_invoke$arity$2 = G__2288__2;
G__2288.cljs$core$IFn$_invoke$arity$3 = G__2288__3;
return G__2288;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args2287){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args2287)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function cljs$core$__GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

/**
 * Return true if x is a Keyword
 */
cljs.core.keyword_QMARK_ = (function cljs$core$keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
/**
 * Efficient test to determine that two keywords are identical.
 */
cljs.core.keyword_identical_QMARK_ = (function cljs$core$keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
 * Returns the namespace String of a symbol or keyword, or nil if not present.
 */
cljs.core.namespace = (function cljs$core$namespace(x){
if((function (){var G__2290 = x;
if(G__2290){
var bit__11117__auto__ = (G__2290.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__11117__auto__) || (G__2290.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
 * Returns a Keyword with the given namespace and name.  Do not use :
 * in the keyword strings, it will be added automatically.
 */
cljs.core.keyword = (function() {
var cljs$core$keyword = null;
var cljs$core$keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__2292 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__2292) : cljs.core.name.call(null,G__2292));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var cljs$core$keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
cljs$core$keyword = function(ns,name){
switch(arguments.length){
case 1:
return cljs$core$keyword__1.call(this,ns);
case 2:
return cljs$core$keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keyword.cljs$core$IFn$_invoke$arity$1 = cljs$core$keyword__1;
cljs$core$keyword.cljs$core$IFn$_invoke$arity$2 = cljs$core$keyword__2;
return cljs$core$keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__10916__auto__ = self__.__hash;
if(!((h__10916__auto__ == null))){
return h__10916__auto__;
} else {
var h__10916__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__10916__auto____$1;

return h__10916__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__2293 = ls.sval();
ls = G__2293;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function cljs$core$__GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function cljs$core$__GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function cljs$core$chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function cljs$core$__GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var cljs$core$array_chunk = null;
var cljs$core$array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var cljs$core$array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var cljs$core$array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
cljs$core$array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return cljs$core$array_chunk__1.call(this,arr);
case 2:
return cljs$core$array_chunk__2.call(this,arr,off);
case 3:
return cljs$core$array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_chunk__1;
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_chunk__2;
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_chunk__3;
return cljs$core$array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__10916__auto__ = self__.__hash;
if(!((h__10916__auto__ == null))){
return h__10916__auto__;
} else {
var h__10916__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__10916__auto____$1;

return h__10916__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function cljs$core$__GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));
cljs.core.chunk_cons = (function cljs$core$chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function cljs$core$chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function cljs$core$chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function cljs$core$chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function cljs$core$chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function cljs$core$chunk_next(s){
if((function (){var G__2295 = s;
if(G__2295){
var bit__11117__auto__ = (G__2295.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__11117__auto__) || (G__2295.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
 * Naive impl of to-array as a start.
 */
cljs.core.to_array = (function cljs$core$to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__2296 = cljs.core.next(s__$1);
s__$1 = G__2296;
continue;
} else {
return ary;
}
break;
}
});
/**
 * Returns a (potentially-ragged) 2-dimensional array
 * containing the contents of coll.
 */
cljs.core.to_array_2d = (function cljs$core$to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_2297 = (0);
var xs_2298 = cljs.core.seq(coll);
while(true){
if(xs_2298){
(ret[i_2297] = cljs.core.to_array(cljs.core.first(xs_2298)));

var G__2299 = (i_2297 + (1));
var G__2300 = cljs.core.next(xs_2298);
i_2297 = G__2299;
xs_2298 = G__2300;
continue;
} else {
}
break;
}

return ret;
});
/**
 * Creates an array of ints. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.int_array = (function() {
var cljs$core$int_array = null;
var cljs$core$int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__2303 = (i + (1));
var G__2304 = cljs.core.next(s__$1);
i = G__2303;
s__$1 = G__2304;
continue;
} else {
return a;
}
break;
}
} else {
var n__11242__auto___2305 = size;
var i_2306 = (0);
while(true){
if((i_2306 < n__11242__auto___2305)){
(a[i_2306] = init_val_or_seq);

var G__2307 = (i_2306 + (1));
i_2306 = G__2307;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$int_array__1.call(this,size);
case 2:
return cljs$core$int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$int_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$int_array__1;
cljs$core$int_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$int_array__2;
return cljs$core$int_array;
})()
;
/**
 * Creates an array of longs. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.long_array = (function() {
var cljs$core$long_array = null;
var cljs$core$long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__2310 = (i + (1));
var G__2311 = cljs.core.next(s__$1);
i = G__2310;
s__$1 = G__2311;
continue;
} else {
return a;
}
break;
}
} else {
var n__11242__auto___2312 = size;
var i_2313 = (0);
while(true){
if((i_2313 < n__11242__auto___2312)){
(a[i_2313] = init_val_or_seq);

var G__2314 = (i_2313 + (1));
i_2313 = G__2314;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$long_array__1.call(this,size);
case 2:
return cljs$core$long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$long_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$long_array__1;
cljs$core$long_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$long_array__2;
return cljs$core$long_array;
})()
;
/**
 * Creates an array of doubles. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.double_array = (function() {
var cljs$core$double_array = null;
var cljs$core$double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__2317 = (i + (1));
var G__2318 = cljs.core.next(s__$1);
i = G__2317;
s__$1 = G__2318;
continue;
} else {
return a;
}
break;
}
} else {
var n__11242__auto___2319 = size;
var i_2320 = (0);
while(true){
if((i_2320 < n__11242__auto___2319)){
(a[i_2320] = init_val_or_seq);

var G__2321 = (i_2320 + (1));
i_2320 = G__2321;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$double_array__1.call(this,size);
case 2:
return cljs$core$double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$double_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$double_array__1;
cljs$core$double_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$double_array__2;
return cljs$core$double_array;
})()
;
/**
 * Creates an array of objects. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.object_array = (function() {
var cljs$core$object_array = null;
var cljs$core$object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__2324 = (i + (1));
var G__2325 = cljs.core.next(s__$1);
i = G__2324;
s__$1 = G__2325;
continue;
} else {
return a;
}
break;
}
} else {
var n__11242__auto___2326 = size;
var i_2327 = (0);
while(true){
if((i_2327 < n__11242__auto___2326)){
(a[i_2327] = init_val_or_seq);

var G__2328 = (i_2327 + (1));
i_2327 = G__2328;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$object_array__1.call(this,size);
case 2:
return cljs$core$object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$object_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$object_array__1;
cljs$core$object_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$object_array__2;
return cljs$core$object_array;
})()
;
cljs.core.bounded_count = (function cljs$core$bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__2329 = cljs.core.next(s__$1);
var G__2330 = (i - (1));
var G__2331 = (sum + (1));
s__$1 = G__2329;
i = G__2330;
sum = G__2331;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function cljs$core$spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),cljs$core$spread(cljs.core.next(arglist)));

}
}
});
/**
 * Returns a lazy seq representing the concatenation of the elements in the supplied colls.
 * @param {...*} var_args
 */
cljs.core.concat = (function() {
var cljs$core$concat = null;
var cljs$core$concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var cljs$core$concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var cljs$core$concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var cljs$core$concat__3 = (function() { 
var G__2351__delegate = function (x,y,zs){
var cat = (function cljs$core$concat_$_cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cljs$core$concat_$_cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cljs$core$concat_$_cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cljs$core$concat_$_cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(cljs$core$concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__2351 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__2352__i = 0, G__2352__a = new Array(arguments.length -  2);
while (G__2352__i < G__2352__a.length) {G__2352__a[G__2352__i] = arguments[G__2352__i + 2]; ++G__2352__i;}
  zs = new cljs.core.IndexedSeq(G__2352__a,0);
} 
return G__2351__delegate.call(this,x,y,zs);};
G__2351.cljs$lang$maxFixedArity = 2;
G__2351.cljs$lang$applyTo = (function (arglist__2353){
var x = cljs.core.first(arglist__2353);
arglist__2353 = cljs.core.next(arglist__2353);
var y = cljs.core.first(arglist__2353);
var zs = cljs.core.rest(arglist__2353);
return G__2351__delegate(x,y,zs);
});
G__2351.cljs$core$IFn$_invoke$arity$variadic = G__2351__delegate;
return G__2351;
})()
;
cljs$core$concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return cljs$core$concat__0.call(this);
case 1:
return cljs$core$concat__1.call(this,x);
case 2:
return cljs$core$concat__2.call(this,x,y);
default:
var G__2354 = null;
if (arguments.length > 2) {
var G__2355__i = 0, G__2355__a = new Array(arguments.length -  2);
while (G__2355__i < G__2355__a.length) {G__2355__a[G__2355__i] = arguments[G__2355__i + 2]; ++G__2355__i;}
G__2354 = new cljs.core.IndexedSeq(G__2355__a,0);
}
return cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2354);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$concat.cljs$lang$maxFixedArity = 2;
cljs$core$concat.cljs$lang$applyTo = cljs$core$concat__3.cljs$lang$applyTo;
cljs$core$concat.cljs$core$IFn$_invoke$arity$0 = cljs$core$concat__0;
cljs$core$concat.cljs$core$IFn$_invoke$arity$1 = cljs$core$concat__1;
cljs$core$concat.cljs$core$IFn$_invoke$arity$2 = cljs$core$concat__2;
cljs$core$concat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$concat;
})()
;
/**
 * Creates a new list containing the items prepended to the rest, the
 * last of which will be treated as a sequence.
 * @param {...*} var_args
 */
cljs.core.list_STAR_ = (function() {
var cljs$core$list_STAR_ = null;
var cljs$core$list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var cljs$core$list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var cljs$core$list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var cljs$core$list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var cljs$core$list_STAR___5 = (function() { 
var G__2356__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__2356 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__2357__i = 0, G__2357__a = new Array(arguments.length -  4);
while (G__2357__i < G__2357__a.length) {G__2357__a[G__2357__i] = arguments[G__2357__i + 4]; ++G__2357__i;}
  more = new cljs.core.IndexedSeq(G__2357__a,0);
} 
return G__2356__delegate.call(this,a,b,c,d,more);};
G__2356.cljs$lang$maxFixedArity = 4;
G__2356.cljs$lang$applyTo = (function (arglist__2358){
var a = cljs.core.first(arglist__2358);
arglist__2358 = cljs.core.next(arglist__2358);
var b = cljs.core.first(arglist__2358);
arglist__2358 = cljs.core.next(arglist__2358);
var c = cljs.core.first(arglist__2358);
arglist__2358 = cljs.core.next(arglist__2358);
var d = cljs.core.first(arglist__2358);
var more = cljs.core.rest(arglist__2358);
return G__2356__delegate(a,b,c,d,more);
});
G__2356.cljs$core$IFn$_invoke$arity$variadic = G__2356__delegate;
return G__2356;
})()
;
cljs$core$list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$list_STAR___1.call(this,a);
case 2:
return cljs$core$list_STAR___2.call(this,a,b);
case 3:
return cljs$core$list_STAR___3.call(this,a,b,c);
case 4:
return cljs$core$list_STAR___4.call(this,a,b,c,d);
default:
var G__2359 = null;
if (arguments.length > 4) {
var G__2360__i = 0, G__2360__a = new Array(arguments.length -  4);
while (G__2360__i < G__2360__a.length) {G__2360__a[G__2360__i] = arguments[G__2360__i + 4]; ++G__2360__i;}
G__2359 = new cljs.core.IndexedSeq(G__2360__a,0);
}
return cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__2359);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$list_STAR_.cljs$lang$maxFixedArity = 4;
cljs$core$list_STAR_.cljs$lang$applyTo = cljs$core$list_STAR___5.cljs$lang$applyTo;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$list_STAR___1;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$list_STAR___2;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$3 = cljs$core$list_STAR___3;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$4 = cljs$core$list_STAR___4;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$list_STAR_;
})()
;
/**
 * Returns a new, transient version of the collection, in constant time.
 */
cljs.core.transient$ = (function cljs$core$transient(coll){
return cljs.core._as_transient(coll);
});
/**
 * Returns a new, persistent version of the transient collection, in
 * constant time. The transient collection cannot be used after this
 * call, any such use will throw an exception.
 */
cljs.core.persistent_BANG_ = (function cljs$core$persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
 * Adds x to the transient collection, and return coll. The 'addition'
 * may happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj_BANG_ = (function() {
var cljs$core$conj_BANG_ = null;
var cljs$core$conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var cljs$core$conj_BANG___1 = (function (coll){
return coll;
});
var cljs$core$conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var cljs$core$conj_BANG___3 = (function() { 
var G__2361__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__2362 = ntcoll;
var G__2363 = cljs.core.first(vals);
var G__2364 = cljs.core.next(vals);
tcoll = G__2362;
val = G__2363;
vals = G__2364;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__2361 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__2365__i = 0, G__2365__a = new Array(arguments.length -  2);
while (G__2365__i < G__2365__a.length) {G__2365__a[G__2365__i] = arguments[G__2365__i + 2]; ++G__2365__i;}
  vals = new cljs.core.IndexedSeq(G__2365__a,0);
} 
return G__2361__delegate.call(this,tcoll,val,vals);};
G__2361.cljs$lang$maxFixedArity = 2;
G__2361.cljs$lang$applyTo = (function (arglist__2366){
var tcoll = cljs.core.first(arglist__2366);
arglist__2366 = cljs.core.next(arglist__2366);
var val = cljs.core.first(arglist__2366);
var vals = cljs.core.rest(arglist__2366);
return G__2361__delegate(tcoll,val,vals);
});
G__2361.cljs$core$IFn$_invoke$arity$variadic = G__2361__delegate;
return G__2361;
})()
;
cljs$core$conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return cljs$core$conj_BANG___0.call(this);
case 1:
return cljs$core$conj_BANG___1.call(this,tcoll);
case 2:
return cljs$core$conj_BANG___2.call(this,tcoll,val);
default:
var G__2367 = null;
if (arguments.length > 2) {
var G__2368__i = 0, G__2368__a = new Array(arguments.length -  2);
while (G__2368__i < G__2368__a.length) {G__2368__a[G__2368__i] = arguments[G__2368__i + 2]; ++G__2368__i;}
G__2367 = new cljs.core.IndexedSeq(G__2368__a,0);
}
return cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__2367);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$conj_BANG_.cljs$lang$applyTo = cljs$core$conj_BANG___3.cljs$lang$applyTo;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj_BANG___0;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj_BANG___1;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj_BANG___2;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$conj_BANG_;
})()
;
/**
 * When applied to a transient map, adds mapping of key(s) to
 * val(s). When applied to a transient vector, sets the val at index.
 * Note - index must be <= (count vector). Returns coll.
 * @param {...*} var_args
 */
cljs.core.assoc_BANG_ = (function() {
var cljs$core$assoc_BANG_ = null;
var cljs$core$assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var cljs$core$assoc_BANG___4 = (function() { 
var G__2369__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__2370 = ntcoll;
var G__2371 = cljs.core.first(kvs);
var G__2372 = cljs.core.second(kvs);
var G__2373 = cljs.core.nnext(kvs);
tcoll = G__2370;
key = G__2371;
val = G__2372;
kvs = G__2373;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__2369 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__2374__i = 0, G__2374__a = new Array(arguments.length -  3);
while (G__2374__i < G__2374__a.length) {G__2374__a[G__2374__i] = arguments[G__2374__i + 3]; ++G__2374__i;}
  kvs = new cljs.core.IndexedSeq(G__2374__a,0);
} 
return G__2369__delegate.call(this,tcoll,key,val,kvs);};
G__2369.cljs$lang$maxFixedArity = 3;
G__2369.cljs$lang$applyTo = (function (arglist__2375){
var tcoll = cljs.core.first(arglist__2375);
arglist__2375 = cljs.core.next(arglist__2375);
var key = cljs.core.first(arglist__2375);
arglist__2375 = cljs.core.next(arglist__2375);
var val = cljs.core.first(arglist__2375);
var kvs = cljs.core.rest(arglist__2375);
return G__2369__delegate(tcoll,key,val,kvs);
});
G__2369.cljs$core$IFn$_invoke$arity$variadic = G__2369__delegate;
return G__2369;
})()
;
cljs$core$assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return cljs$core$assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__2376 = null;
if (arguments.length > 3) {
var G__2377__i = 0, G__2377__a = new Array(arguments.length -  3);
while (G__2377__i < G__2377__a.length) {G__2377__a[G__2377__i] = arguments[G__2377__i + 3]; ++G__2377__i;}
G__2376 = new cljs.core.IndexedSeq(G__2377__a,0);
}
return cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__2376);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs$core$assoc_BANG_.cljs$lang$applyTo = cljs$core$assoc_BANG___4.cljs$lang$applyTo;
cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc_BANG___3;
cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$assoc_BANG_;
})()
;
/**
 * Returns a transient map that doesn't contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc_BANG_ = (function() {
var cljs$core$dissoc_BANG_ = null;
var cljs$core$dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var cljs$core$dissoc_BANG___3 = (function() { 
var G__2378__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__2379 = ntcoll;
var G__2380 = cljs.core.first(ks);
var G__2381 = cljs.core.next(ks);
tcoll = G__2379;
key = G__2380;
ks = G__2381;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__2378 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__2382__i = 0, G__2382__a = new Array(arguments.length -  2);
while (G__2382__i < G__2382__a.length) {G__2382__a[G__2382__i] = arguments[G__2382__i + 2]; ++G__2382__i;}
  ks = new cljs.core.IndexedSeq(G__2382__a,0);
} 
return G__2378__delegate.call(this,tcoll,key,ks);};
G__2378.cljs$lang$maxFixedArity = 2;
G__2378.cljs$lang$applyTo = (function (arglist__2383){
var tcoll = cljs.core.first(arglist__2383);
arglist__2383 = cljs.core.next(arglist__2383);
var key = cljs.core.first(arglist__2383);
var ks = cljs.core.rest(arglist__2383);
return G__2378__delegate(tcoll,key,ks);
});
G__2378.cljs$core$IFn$_invoke$arity$variadic = G__2378__delegate;
return G__2378;
})()
;
cljs$core$dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return cljs$core$dissoc_BANG___2.call(this,tcoll,key);
default:
var G__2384 = null;
if (arguments.length > 2) {
var G__2385__i = 0, G__2385__a = new Array(arguments.length -  2);
while (G__2385__i < G__2385__a.length) {G__2385__a[G__2385__i] = arguments[G__2385__i + 2]; ++G__2385__i;}
G__2384 = new cljs.core.IndexedSeq(G__2385__a,0);
}
return cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__2384);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$dissoc_BANG_.cljs$lang$applyTo = cljs$core$dissoc_BANG___3.cljs$lang$applyTo;
cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc_BANG___2;
cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$dissoc_BANG_;
})()
;
/**
 * Removes the last item from a transient vector. If
 * the collection is empty, throws an exception. Returns coll
 */
cljs.core.pop_BANG_ = (function cljs$core$pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
 * disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj_BANG_ = (function() {
var cljs$core$disj_BANG_ = null;
var cljs$core$disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var cljs$core$disj_BANG___3 = (function() { 
var G__2386__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__2387 = ntcoll;
var G__2388 = cljs.core.first(vals);
var G__2389 = cljs.core.next(vals);
tcoll = G__2387;
val = G__2388;
vals = G__2389;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__2386 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__2390__i = 0, G__2390__a = new Array(arguments.length -  2);
while (G__2390__i < G__2390__a.length) {G__2390__a[G__2390__i] = arguments[G__2390__i + 2]; ++G__2390__i;}
  vals = new cljs.core.IndexedSeq(G__2390__a,0);
} 
return G__2386__delegate.call(this,tcoll,val,vals);};
G__2386.cljs$lang$maxFixedArity = 2;
G__2386.cljs$lang$applyTo = (function (arglist__2391){
var tcoll = cljs.core.first(arglist__2391);
arglist__2391 = cljs.core.next(arglist__2391);
var val = cljs.core.first(arglist__2391);
var vals = cljs.core.rest(arglist__2391);
return G__2386__delegate(tcoll,val,vals);
});
G__2386.cljs$core$IFn$_invoke$arity$variadic = G__2386__delegate;
return G__2386;
})()
;
cljs$core$disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return cljs$core$disj_BANG___2.call(this,tcoll,val);
default:
var G__2392 = null;
if (arguments.length > 2) {
var G__2393__i = 0, G__2393__a = new Array(arguments.length -  2);
while (G__2393__i < G__2393__a.length) {G__2393__a[G__2393__i] = arguments[G__2393__i + 2]; ++G__2393__i;}
G__2392 = new cljs.core.IndexedSeq(G__2393__a,0);
}
return cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__2392);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$disj_BANG_.cljs$lang$applyTo = cljs$core$disj_BANG___3.cljs$lang$applyTo;
cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj_BANG___2;
cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$disj_BANG_;
})()
;

cljs.core.apply_to = (function cljs$core$apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a329 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a329);
} else {
var G__2604 = a329;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2604) : f.call(null,G__2604));
}
} else {
var b330 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a329,b330);
} else {
var G__2605 = a329;
var G__2606 = b330;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2605,G__2606) : f.call(null,G__2605,G__2606));
}
} else {
var c331 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a329,b330,c331);
} else {
var G__2607 = a329;
var G__2608 = b330;
var G__2609 = c331;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2607,G__2608,G__2609) : f.call(null,G__2607,G__2608,G__2609));
}
} else {
var d332 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a329,b330,c331,d332);
} else {
var G__2610 = a329;
var G__2611 = b330;
var G__2612 = c331;
var G__2613 = d332;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__2610,G__2611,G__2612,G__2613) : f.call(null,G__2610,G__2611,G__2612,G__2613));
}
} else {
var e333 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a329,b330,c331,d332,e333);
} else {
var G__2614 = a329;
var G__2615 = b330;
var G__2616 = c331;
var G__2617 = d332;
var G__2618 = e333;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__2614,G__2615,G__2616,G__2617,G__2618) : f.call(null,G__2614,G__2615,G__2616,G__2617,G__2618));
}
} else {
var f334 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a329,b330,c331,d332,e333,f334);
} else {
var G__2619 = a329;
var G__2620 = b330;
var G__2621 = c331;
var G__2622 = d332;
var G__2623 = e333;
var G__2624 = f334;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__2619,G__2620,G__2621,G__2622,G__2623,G__2624) : f.call(null,G__2619,G__2620,G__2621,G__2622,G__2623,G__2624));
}
} else {
var g335 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a329,b330,c331,d332,e333,f334,g335);
} else {
var G__2625 = a329;
var G__2626 = b330;
var G__2627 = c331;
var G__2628 = d332;
var G__2629 = e333;
var G__2630 = f334;
var G__2631 = g335;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__2625,G__2626,G__2627,G__2628,G__2629,G__2630,G__2631) : f.call(null,G__2625,G__2626,G__2627,G__2628,G__2629,G__2630,G__2631));
}
} else {
var h336 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a329,b330,c331,d332,e333,f334,g335,h336);
} else {
var G__2632 = a329;
var G__2633 = b330;
var G__2634 = c331;
var G__2635 = d332;
var G__2636 = e333;
var G__2637 = f334;
var G__2638 = g335;
var G__2639 = h336;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__2632,G__2633,G__2634,G__2635,G__2636,G__2637,G__2638,G__2639) : f.call(null,G__2632,G__2633,G__2634,G__2635,G__2636,G__2637,G__2638,G__2639));
}
} else {
var i337 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a329,b330,c331,d332,e333,f334,g335,h336,i337);
} else {
var G__2640 = a329;
var G__2641 = b330;
var G__2642 = c331;
var G__2643 = d332;
var G__2644 = e333;
var G__2645 = f334;
var G__2646 = g335;
var G__2647 = h336;
var G__2648 = i337;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__2640,G__2641,G__2642,G__2643,G__2644,G__2645,G__2646,G__2647,G__2648) : f.call(null,G__2640,G__2641,G__2642,G__2643,G__2644,G__2645,G__2646,G__2647,G__2648));
}
} else {
var j338 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a329,b330,c331,d332,e333,f334,g335,h336,i337,j338);
} else {
var G__2649 = a329;
var G__2650 = b330;
var G__2651 = c331;
var G__2652 = d332;
var G__2653 = e333;
var G__2654 = f334;
var G__2655 = g335;
var G__2656 = h336;
var G__2657 = i337;
var G__2658 = j338;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__2649,G__2650,G__2651,G__2652,G__2653,G__2654,G__2655,G__2656,G__2657,G__2658) : f.call(null,G__2649,G__2650,G__2651,G__2652,G__2653,G__2654,G__2655,G__2656,G__2657,G__2658));
}
} else {
var k339 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a329,b330,c331,d332,e333,f334,g335,h336,i337,j338,k339);
} else {
var G__2659 = a329;
var G__2660 = b330;
var G__2661 = c331;
var G__2662 = d332;
var G__2663 = e333;
var G__2664 = f334;
var G__2665 = g335;
var G__2666 = h336;
var G__2667 = i337;
var G__2668 = j338;
var G__2669 = k339;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__2659,G__2660,G__2661,G__2662,G__2663,G__2664,G__2665,G__2666,G__2667,G__2668,G__2669) : f.call(null,G__2659,G__2660,G__2661,G__2662,G__2663,G__2664,G__2665,G__2666,G__2667,G__2668,G__2669));
}
} else {
var l340 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a329,b330,c331,d332,e333,f334,g335,h336,i337,j338,k339,l340);
} else {
var G__2670 = a329;
var G__2671 = b330;
var G__2672 = c331;
var G__2673 = d332;
var G__2674 = e333;
var G__2675 = f334;
var G__2676 = g335;
var G__2677 = h336;
var G__2678 = i337;
var G__2679 = j338;
var G__2680 = k339;
var G__2681 = l340;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__2670,G__2671,G__2672,G__2673,G__2674,G__2675,G__2676,G__2677,G__2678,G__2679,G__2680,G__2681) : f.call(null,G__2670,G__2671,G__2672,G__2673,G__2674,G__2675,G__2676,G__2677,G__2678,G__2679,G__2680,G__2681));
}
} else {
var m341 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a329,b330,c331,d332,e333,f334,g335,h336,i337,j338,k339,l340,m341);
} else {
var G__2682 = a329;
var G__2683 = b330;
var G__2684 = c331;
var G__2685 = d332;
var G__2686 = e333;
var G__2687 = f334;
var G__2688 = g335;
var G__2689 = h336;
var G__2690 = i337;
var G__2691 = j338;
var G__2692 = k339;
var G__2693 = l340;
var G__2694 = m341;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__2682,G__2683,G__2684,G__2685,G__2686,G__2687,G__2688,G__2689,G__2690,G__2691,G__2692,G__2693,G__2694) : f.call(null,G__2682,G__2683,G__2684,G__2685,G__2686,G__2687,G__2688,G__2689,G__2690,G__2691,G__2692,G__2693,G__2694));
}
} else {
var n342 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a329,b330,c331,d332,e333,f334,g335,h336,i337,j338,k339,l340,m341,n342);
} else {
var G__2695 = a329;
var G__2696 = b330;
var G__2697 = c331;
var G__2698 = d332;
var G__2699 = e333;
var G__2700 = f334;
var G__2701 = g335;
var G__2702 = h336;
var G__2703 = i337;
var G__2704 = j338;
var G__2705 = k339;
var G__2706 = l340;
var G__2707 = m341;
var G__2708 = n342;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__2695,G__2696,G__2697,G__2698,G__2699,G__2700,G__2701,G__2702,G__2703,G__2704,G__2705,G__2706,G__2707,G__2708) : f.call(null,G__2695,G__2696,G__2697,G__2698,G__2699,G__2700,G__2701,G__2702,G__2703,G__2704,G__2705,G__2706,G__2707,G__2708));
}
} else {
var o343 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a329,b330,c331,d332,e333,f334,g335,h336,i337,j338,k339,l340,m341,n342,o343);
} else {
var G__2709 = a329;
var G__2710 = b330;
var G__2711 = c331;
var G__2712 = d332;
var G__2713 = e333;
var G__2714 = f334;
var G__2715 = g335;
var G__2716 = h336;
var G__2717 = i337;
var G__2718 = j338;
var G__2719 = k339;
var G__2720 = l340;
var G__2721 = m341;
var G__2722 = n342;
var G__2723 = o343;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__2709,G__2710,G__2711,G__2712,G__2713,G__2714,G__2715,G__2716,G__2717,G__2718,G__2719,G__2720,G__2721,G__2722,G__2723) : f.call(null,G__2709,G__2710,G__2711,G__2712,G__2713,G__2714,G__2715,G__2716,G__2717,G__2718,G__2719,G__2720,G__2721,G__2722,G__2723));
}
} else {
var p344 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a329,b330,c331,d332,e333,f334,g335,h336,i337,j338,k339,l340,m341,n342,o343,p344);
} else {
var G__2724 = a329;
var G__2725 = b330;
var G__2726 = c331;
var G__2727 = d332;
var G__2728 = e333;
var G__2729 = f334;
var G__2730 = g335;
var G__2731 = h336;
var G__2732 = i337;
var G__2733 = j338;
var G__2734 = k339;
var G__2735 = l340;
var G__2736 = m341;
var G__2737 = n342;
var G__2738 = o343;
var G__2739 = p344;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__2724,G__2725,G__2726,G__2727,G__2728,G__2729,G__2730,G__2731,G__2732,G__2733,G__2734,G__2735,G__2736,G__2737,G__2738,G__2739) : f.call(null,G__2724,G__2725,G__2726,G__2727,G__2728,G__2729,G__2730,G__2731,G__2732,G__2733,G__2734,G__2735,G__2736,G__2737,G__2738,G__2739));
}
} else {
var q345 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a329,b330,c331,d332,e333,f334,g335,h336,i337,j338,k339,l340,m341,n342,o343,p344,q345);
} else {
var G__2740 = a329;
var G__2741 = b330;
var G__2742 = c331;
var G__2743 = d332;
var G__2744 = e333;
var G__2745 = f334;
var G__2746 = g335;
var G__2747 = h336;
var G__2748 = i337;
var G__2749 = j338;
var G__2750 = k339;
var G__2751 = l340;
var G__2752 = m341;
var G__2753 = n342;
var G__2754 = o343;
var G__2755 = p344;
var G__2756 = q345;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__2740,G__2741,G__2742,G__2743,G__2744,G__2745,G__2746,G__2747,G__2748,G__2749,G__2750,G__2751,G__2752,G__2753,G__2754,G__2755,G__2756) : f.call(null,G__2740,G__2741,G__2742,G__2743,G__2744,G__2745,G__2746,G__2747,G__2748,G__2749,G__2750,G__2751,G__2752,G__2753,G__2754,G__2755,G__2756));
}
} else {
var r346 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a329,b330,c331,d332,e333,f334,g335,h336,i337,j338,k339,l340,m341,n342,o343,p344,q345,r346);
} else {
var G__2757 = a329;
var G__2758 = b330;
var G__2759 = c331;
var G__2760 = d332;
var G__2761 = e333;
var G__2762 = f334;
var G__2763 = g335;
var G__2764 = h336;
var G__2765 = i337;
var G__2766 = j338;
var G__2767 = k339;
var G__2768 = l340;
var G__2769 = m341;
var G__2770 = n342;
var G__2771 = o343;
var G__2772 = p344;
var G__2773 = q345;
var G__2774 = r346;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__2757,G__2758,G__2759,G__2760,G__2761,G__2762,G__2763,G__2764,G__2765,G__2766,G__2767,G__2768,G__2769,G__2770,G__2771,G__2772,G__2773,G__2774) : f.call(null,G__2757,G__2758,G__2759,G__2760,G__2761,G__2762,G__2763,G__2764,G__2765,G__2766,G__2767,G__2768,G__2769,G__2770,G__2771,G__2772,G__2773,G__2774));
}
} else {
var s347 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a329,b330,c331,d332,e333,f334,g335,h336,i337,j338,k339,l340,m341,n342,o343,p344,q345,r346,s347);
} else {
var G__2775 = a329;
var G__2776 = b330;
var G__2777 = c331;
var G__2778 = d332;
var G__2779 = e333;
var G__2780 = f334;
var G__2781 = g335;
var G__2782 = h336;
var G__2783 = i337;
var G__2784 = j338;
var G__2785 = k339;
var G__2786 = l340;
var G__2787 = m341;
var G__2788 = n342;
var G__2789 = o343;
var G__2790 = p344;
var G__2791 = q345;
var G__2792 = r346;
var G__2793 = s347;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__2775,G__2776,G__2777,G__2778,G__2779,G__2780,G__2781,G__2782,G__2783,G__2784,G__2785,G__2786,G__2787,G__2788,G__2789,G__2790,G__2791,G__2792,G__2793) : f.call(null,G__2775,G__2776,G__2777,G__2778,G__2779,G__2780,G__2781,G__2782,G__2783,G__2784,G__2785,G__2786,G__2787,G__2788,G__2789,G__2790,G__2791,G__2792,G__2793));
}
} else {
var t348 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a329,b330,c331,d332,e333,f334,g335,h336,i337,j338,k339,l340,m341,n342,o343,p344,q345,r346,s347,t348);
} else {
var G__2794 = a329;
var G__2795 = b330;
var G__2796 = c331;
var G__2797 = d332;
var G__2798 = e333;
var G__2799 = f334;
var G__2800 = g335;
var G__2801 = h336;
var G__2802 = i337;
var G__2803 = j338;
var G__2804 = k339;
var G__2805 = l340;
var G__2806 = m341;
var G__2807 = n342;
var G__2808 = o343;
var G__2809 = p344;
var G__2810 = q345;
var G__2811 = r346;
var G__2812 = s347;
var G__2813 = t348;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__2794,G__2795,G__2796,G__2797,G__2798,G__2799,G__2800,G__2801,G__2802,G__2803,G__2804,G__2805,G__2806,G__2807,G__2808,G__2809,G__2810,G__2811,G__2812,G__2813) : f.call(null,G__2794,G__2795,G__2796,G__2797,G__2798,G__2799,G__2800,G__2801,G__2802,G__2803,G__2804,G__2805,G__2806,G__2807,G__2808,G__2809,G__2810,G__2811,G__2812,G__2813));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
 * Applies fn f to the argument list formed by prepending intervening arguments to args.
 * @param {...*} var_args
 */
cljs.core.apply = (function() {
var cljs$core$apply = null;
var cljs$core$apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var cljs$core$apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__6 = (function() { 
var G__2814__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__2814 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__2815__i = 0, G__2815__a = new Array(arguments.length -  5);
while (G__2815__i < G__2815__a.length) {G__2815__a[G__2815__i] = arguments[G__2815__i + 5]; ++G__2815__i;}
  args = new cljs.core.IndexedSeq(G__2815__a,0);
} 
return G__2814__delegate.call(this,f,a,b,c,d,args);};
G__2814.cljs$lang$maxFixedArity = 5;
G__2814.cljs$lang$applyTo = (function (arglist__2816){
var f = cljs.core.first(arglist__2816);
arglist__2816 = cljs.core.next(arglist__2816);
var a = cljs.core.first(arglist__2816);
arglist__2816 = cljs.core.next(arglist__2816);
var b = cljs.core.first(arglist__2816);
arglist__2816 = cljs.core.next(arglist__2816);
var c = cljs.core.first(arglist__2816);
arglist__2816 = cljs.core.next(arglist__2816);
var d = cljs.core.first(arglist__2816);
var args = cljs.core.rest(arglist__2816);
return G__2814__delegate(f,a,b,c,d,args);
});
G__2814.cljs$core$IFn$_invoke$arity$variadic = G__2814__delegate;
return G__2814;
})()
;
cljs$core$apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return cljs$core$apply__2.call(this,f,a);
case 3:
return cljs$core$apply__3.call(this,f,a,b);
case 4:
return cljs$core$apply__4.call(this,f,a,b,c);
case 5:
return cljs$core$apply__5.call(this,f,a,b,c,d);
default:
var G__2817 = null;
if (arguments.length > 5) {
var G__2818__i = 0, G__2818__a = new Array(arguments.length -  5);
while (G__2818__i < G__2818__a.length) {G__2818__a[G__2818__i] = arguments[G__2818__i + 5]; ++G__2818__i;}
G__2817 = new cljs.core.IndexedSeq(G__2818__a,0);
}
return cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__2817);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$apply.cljs$lang$maxFixedArity = 5;
cljs$core$apply.cljs$lang$applyTo = cljs$core$apply__6.cljs$lang$applyTo;
cljs$core$apply.cljs$core$IFn$_invoke$arity$2 = cljs$core$apply__2;
cljs$core$apply.cljs$core$IFn$_invoke$arity$3 = cljs$core$apply__3;
cljs$core$apply.cljs$core$IFn$_invoke$arity$4 = cljs$core$apply__4;
cljs$core$apply.cljs$core$IFn$_invoke$arity$5 = cljs$core$apply__5;
cljs$core$apply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$apply;
})()
;
/**
 * Returns an object of the same type and value as obj, with
 * (apply f (meta obj) args) as its metadata.
 * @param {...*} var_args
 */
cljs.core.vary_meta = (function() {
var cljs$core$vary_meta = null;
var cljs$core$vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__2834 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2834) : f.call(null,G__2834));
})());
});
var cljs$core$vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__2835 = cljs.core.meta(obj);
var G__2836 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2835,G__2836) : f.call(null,G__2835,G__2836));
})());
});
var cljs$core$vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__2837 = cljs.core.meta(obj);
var G__2838 = a;
var G__2839 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2837,G__2838,G__2839) : f.call(null,G__2837,G__2838,G__2839));
})());
});
var cljs$core$vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__2840 = cljs.core.meta(obj);
var G__2841 = a;
var G__2842 = b;
var G__2843 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__2840,G__2841,G__2842,G__2843) : f.call(null,G__2840,G__2841,G__2842,G__2843));
})());
});
var cljs$core$vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__2844 = cljs.core.meta(obj);
var G__2845 = a;
var G__2846 = b;
var G__2847 = c;
var G__2848 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__2844,G__2845,G__2846,G__2847,G__2848) : f.call(null,G__2844,G__2845,G__2846,G__2847,G__2848));
})());
});
var cljs$core$vary_meta__7 = (function() { 
var G__2849__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__2849 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__2850__i = 0, G__2850__a = new Array(arguments.length -  6);
while (G__2850__i < G__2850__a.length) {G__2850__a[G__2850__i] = arguments[G__2850__i + 6]; ++G__2850__i;}
  args = new cljs.core.IndexedSeq(G__2850__a,0);
} 
return G__2849__delegate.call(this,obj,f,a,b,c,d,args);};
G__2849.cljs$lang$maxFixedArity = 6;
G__2849.cljs$lang$applyTo = (function (arglist__2851){
var obj = cljs.core.first(arglist__2851);
arglist__2851 = cljs.core.next(arglist__2851);
var f = cljs.core.first(arglist__2851);
arglist__2851 = cljs.core.next(arglist__2851);
var a = cljs.core.first(arglist__2851);
arglist__2851 = cljs.core.next(arglist__2851);
var b = cljs.core.first(arglist__2851);
arglist__2851 = cljs.core.next(arglist__2851);
var c = cljs.core.first(arglist__2851);
arglist__2851 = cljs.core.next(arglist__2851);
var d = cljs.core.first(arglist__2851);
var args = cljs.core.rest(arglist__2851);
return G__2849__delegate(obj,f,a,b,c,d,args);
});
G__2849.cljs$core$IFn$_invoke$arity$variadic = G__2849__delegate;
return G__2849;
})()
;
cljs$core$vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return cljs$core$vary_meta__2.call(this,obj,f);
case 3:
return cljs$core$vary_meta__3.call(this,obj,f,a);
case 4:
return cljs$core$vary_meta__4.call(this,obj,f,a,b);
case 5:
return cljs$core$vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return cljs$core$vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__2852 = null;
if (arguments.length > 6) {
var G__2853__i = 0, G__2853__a = new Array(arguments.length -  6);
while (G__2853__i < G__2853__a.length) {G__2853__a[G__2853__i] = arguments[G__2853__i + 6]; ++G__2853__i;}
G__2852 = new cljs.core.IndexedSeq(G__2853__a,0);
}
return cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__2852);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$vary_meta.cljs$lang$maxFixedArity = 6;
cljs$core$vary_meta.cljs$lang$applyTo = cljs$core$vary_meta__7.cljs$lang$applyTo;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$2 = cljs$core$vary_meta__2;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$3 = cljs$core$vary_meta__3;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$4 = cljs$core$vary_meta__4;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$5 = cljs$core$vary_meta__5;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$6 = cljs$core$vary_meta__6;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$vary_meta;
})()
;
/**
 * Same as (not (= obj1 obj2))
 * @param {...*} var_args
 */
cljs.core.not_EQ_ = (function() {
var cljs$core$not_EQ_ = null;
var cljs$core$not_EQ___1 = (function (x){
return false;
});
var cljs$core$not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var cljs$core$not_EQ___3 = (function() { 
var G__2854__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__2854 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__2855__i = 0, G__2855__a = new Array(arguments.length -  2);
while (G__2855__i < G__2855__a.length) {G__2855__a[G__2855__i] = arguments[G__2855__i + 2]; ++G__2855__i;}
  more = new cljs.core.IndexedSeq(G__2855__a,0);
} 
return G__2854__delegate.call(this,x,y,more);};
G__2854.cljs$lang$maxFixedArity = 2;
G__2854.cljs$lang$applyTo = (function (arglist__2856){
var x = cljs.core.first(arglist__2856);
arglist__2856 = cljs.core.next(arglist__2856);
var y = cljs.core.first(arglist__2856);
var more = cljs.core.rest(arglist__2856);
return G__2854__delegate(x,y,more);
});
G__2854.cljs$core$IFn$_invoke$arity$variadic = G__2854__delegate;
return G__2854;
})()
;
cljs$core$not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$not_EQ___1.call(this,x);
case 2:
return cljs$core$not_EQ___2.call(this,x,y);
default:
var G__2857 = null;
if (arguments.length > 2) {
var G__2858__i = 0, G__2858__a = new Array(arguments.length -  2);
while (G__2858__i < G__2858__a.length) {G__2858__a[G__2858__i] = arguments[G__2858__i + 2]; ++G__2858__i;}
G__2857 = new cljs.core.IndexedSeq(G__2858__a,0);
}
return cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2857);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$not_EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$not_EQ_.cljs$lang$applyTo = cljs$core$not_EQ___3.cljs$lang$applyTo;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$not_EQ___1;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$not_EQ___2;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$not_EQ_;
})()
;
/**
 * If coll is empty, returns nil, else coll
 */
cljs.core.not_empty = (function cljs$core$not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function cljs$core$nil_iter(){
if(typeof cljs.core.t2862 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t2862 = (function (nil_iter,meta2863){
this.nil_iter = nil_iter;
this.meta2863 = meta2863;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t2862.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t2862.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t2862.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t2862.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_2864){
var self__ = this;
var _2864__$1 = this;
return self__.meta2863;
});

cljs.core.t2862.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_2864,meta2863__$1){
var self__ = this;
var _2864__$1 = this;
return (new cljs.core.t2862(self__.nil_iter,meta2863__$1));
});

cljs.core.t2862.cljs$lang$type = true;

cljs.core.t2862.cljs$lang$ctorStr = "cljs.core/t2862";

cljs.core.t2862.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/t2862");
});

cljs.core.__GT_t2862 = (function cljs$core$nil_iter_$___GT_t2862(nil_iter__$1,meta2863){
return (new cljs.core.t2862(nil_iter__$1,meta2863));
});

}

return (new cljs.core.t2862(cljs$core$nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function cljs$core$__GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function cljs$core$string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function cljs$core$__GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function cljs$core$array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function cljs$core$__GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function cljs$core$seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function cljs$core$iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function cljs$core$lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__10815__auto__ = !((lt.stepper == null));
if(and__10815__auto__){
return self__.iter.hasNext();
} else {
return and__10815__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__2865 = lt;
var G__2866 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__2865,G__2866) : self__.xform.call(null,G__2865,G__2866));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__2867 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__2867) : self__.xform.call(null,G__2867));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function cljs$core$__GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function cljs$core$stepper(xform,iter){
var stepfn = (function() {
var cljs$core$stepper_$_stepfn = null;
var cljs$core$stepper_$_stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var cljs$core$stepper_$_stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$stepper_$_stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$stepper_$_stepfn__1.call(this,result);
case 2:
return cljs$core$stepper_$_stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
return cljs$core$stepper_$_stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__2869 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__2869) : xform.call(null,G__2869));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__2871 = cljs.core.next(iters__$1);
iters__$1 = G__2871;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__11242__auto___2872 = self__.iters.length;
var i_2873 = (0);
while(true){
if((i_2873 < n__11242__auto___2872)){
(self__.nexts[i_2873] = (self__.iters[i_2873]).next());

var G__2874 = (i_2873 + (1));
i_2873 = G__2874;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__10815__auto__ = !((lt.stepper == null));
if(and__10815__auto__){
return this$.hasNext();
} else {
return and__10815__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__2870 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__2870) : self__.xform.call(null,G__2870));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function cljs$core$__GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var cljs$core$multi_stepper = null;
var cljs$core$multi_stepper__2 = (function (xform,iters){
return cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var cljs$core$multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var cljs$core$multi_stepper_$_stepfn = null;
var cljs$core$multi_stepper_$_stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var cljs$core$multi_stepper_$_stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$multi_stepper_$_stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$multi_stepper_$_stepfn__1.call(this,result);
case 2:
return cljs$core$multi_stepper_$_stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$multi_stepper_$_stepfn__1;
cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper_$_stepfn__2;
return cljs$core$multi_stepper_$_stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__2879 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__2879) : xform.call(null,G__2879));
})(),iters,nexts));
});
cljs$core$multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return cljs$core$multi_stepper__2.call(this,xform,iters);
case 3:
return cljs$core$multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper__2;
cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3 = cljs$core$multi_stepper__3;
return cljs$core$multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function cljs$core$__GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__2880_2884 = cljs.core.seq(colls);
var chunk__2881_2885 = null;
var count__2882_2886 = (0);
var i__2883_2887 = (0);
while(true){
if((i__2883_2887 < count__2882_2886)){
var coll_2888 = chunk__2881_2885.cljs$core$IIndexed$_nth$arity$2(null,i__2883_2887);
iters.push(cljs.core.iter(coll_2888));

var G__2889 = seq__2880_2884;
var G__2890 = chunk__2881_2885;
var G__2891 = count__2882_2886;
var G__2892 = (i__2883_2887 + (1));
seq__2880_2884 = G__2889;
chunk__2881_2885 = G__2890;
count__2882_2886 = G__2891;
i__2883_2887 = G__2892;
continue;
} else {
var temp__4126__auto___2893 = cljs.core.seq(seq__2880_2884);
if(temp__4126__auto___2893){
var seq__2880_2894__$1 = temp__4126__auto___2893;
if(cljs.core.chunked_seq_QMARK_(seq__2880_2894__$1)){
var c__11190__auto___2895 = cljs.core.chunk_first(seq__2880_2894__$1);
var G__2896 = cljs.core.chunk_rest(seq__2880_2894__$1);
var G__2897 = c__11190__auto___2895;
var G__2898 = cljs.core.count(c__11190__auto___2895);
var G__2899 = (0);
seq__2880_2884 = G__2896;
chunk__2881_2885 = G__2897;
count__2882_2886 = G__2898;
i__2883_2887 = G__2899;
continue;
} else {
var coll_2900 = cljs.core.first(seq__2880_2894__$1);
iters.push(cljs.core.iter(coll_2900));

var G__2901 = cljs.core.next(seq__2880_2894__$1);
var G__2902 = null;
var G__2903 = (0);
var G__2904 = (0);
seq__2880_2884 = G__2901;
chunk__2881_2885 = G__2902;
count__2882_2886 = G__2903;
i__2883_2887 = G__2904;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
 * Coerces coll to a (possibly empty) sequence, if it is not already
 * one. Will not force a lazy seq. (sequence nil) yields (), When a
 * transducer is supplied, returns a lazy sequence of applications of
 * the transform to the items in coll(s), i.e. to the set of first
 * items of each coll, followed by the set of second
 * items in each coll, until any one of the colls is exhausted.  Any
 * remaining items in other colls are ignored. The transform should accept
 * number-of-colls arguments
 * @param {...*} var_args
 */
cljs.core.sequence = (function() {
var cljs$core$sequence = null;
var cljs$core$sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__10823__auto__ = cljs.core.seq(coll);
if(or__10823__auto__){
return or__10823__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var cljs$core$sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var cljs$core$sequence__3 = (function() { 
var G__2905__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__2905 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__2906__i = 0, G__2906__a = new Array(arguments.length -  2);
while (G__2906__i < G__2906__a.length) {G__2906__a[G__2906__i] = arguments[G__2906__i + 2]; ++G__2906__i;}
  colls = new cljs.core.IndexedSeq(G__2906__a,0);
} 
return G__2905__delegate.call(this,xform,coll,colls);};
G__2905.cljs$lang$maxFixedArity = 2;
G__2905.cljs$lang$applyTo = (function (arglist__2907){
var xform = cljs.core.first(arglist__2907);
arglist__2907 = cljs.core.next(arglist__2907);
var coll = cljs.core.first(arglist__2907);
var colls = cljs.core.rest(arglist__2907);
return G__2905__delegate(xform,coll,colls);
});
G__2905.cljs$core$IFn$_invoke$arity$variadic = G__2905__delegate;
return G__2905;
})()
;
cljs$core$sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$sequence__1.call(this,xform);
case 2:
return cljs$core$sequence__2.call(this,xform,coll);
default:
var G__2908 = null;
if (arguments.length > 2) {
var G__2909__i = 0, G__2909__a = new Array(arguments.length -  2);
while (G__2909__i < G__2909__a.length) {G__2909__a[G__2909__i] = arguments[G__2909__i + 2]; ++G__2909__i;}
G__2908 = new cljs.core.IndexedSeq(G__2909__a,0);
}
return cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__2908);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sequence.cljs$lang$maxFixedArity = 2;
cljs$core$sequence.cljs$lang$applyTo = cljs$core$sequence__3.cljs$lang$applyTo;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$1 = cljs$core$sequence__1;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$2 = cljs$core$sequence__2;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$sequence;
})()
;
/**
 * Returns true if (pred x) is logical true for every x in coll, else
 * false.
 */
cljs.core.every_QMARK_ = (function cljs$core$every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__2911 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__2911) : pred.call(null,G__2911));
})())){
var G__2912 = pred;
var G__2913 = cljs.core.next(coll);
pred = G__2912;
coll = G__2913;
continue;
} else {
return false;

}
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for every x in
 * coll, else true.
 */
cljs.core.not_every_QMARK_ = (function cljs$core$not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
 * Returns the first logical true value of (pred x) for any x in coll,
 * else nil.  One common idiom is to use a set as pred, for example
 * this will return :fred if :fred is in the sequence, otherwise nil:
 * (some #{:fred} coll)
 */
cljs.core.some = (function cljs$core$some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__10823__auto__ = (function (){var G__2917 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__2917) : pred.call(null,G__2917));
})();
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
var G__2918 = pred;
var G__2919 = cljs.core.next(coll);
pred = G__2918;
coll = G__2919;
continue;
}
} else {
return null;
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for any x in coll,
 * else true.
 */
cljs.core.not_any_QMARK_ = (function cljs$core$not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
 * Returns true if n is even, throws an exception if n is not an integer
 */
cljs.core.even_QMARK_ = (function cljs$core$even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
 * Returns true if n is odd, throws an exception if n is not an integer
 */
cljs.core.odd_QMARK_ = (function cljs$core$odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
 * Takes a fn f and returns a fn that takes the same arguments as f,
 * has the same effects, if any, and returns the opposite truth value.
 */
cljs.core.complement = (function cljs$core$complement(f){
return (function() {
var G__2926 = null;
var G__2926__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__2926__1 = (function (x){
return cljs.core.not((function (){var G__2923 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2923) : f.call(null,G__2923));
})());
});
var G__2926__2 = (function (x,y){
return cljs.core.not((function (){var G__2924 = x;
var G__2925 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2924,G__2925) : f.call(null,G__2924,G__2925));
})());
});
var G__2926__3 = (function() { 
var G__2927__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__2927 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__2928__i = 0, G__2928__a = new Array(arguments.length -  2);
while (G__2928__i < G__2928__a.length) {G__2928__a[G__2928__i] = arguments[G__2928__i + 2]; ++G__2928__i;}
  zs = new cljs.core.IndexedSeq(G__2928__a,0);
} 
return G__2927__delegate.call(this,x,y,zs);};
G__2927.cljs$lang$maxFixedArity = 2;
G__2927.cljs$lang$applyTo = (function (arglist__2929){
var x = cljs.core.first(arglist__2929);
arglist__2929 = cljs.core.next(arglist__2929);
var y = cljs.core.first(arglist__2929);
var zs = cljs.core.rest(arglist__2929);
return G__2927__delegate(x,y,zs);
});
G__2927.cljs$core$IFn$_invoke$arity$variadic = G__2927__delegate;
return G__2927;
})()
;
G__2926 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__2926__0.call(this);
case 1:
return G__2926__1.call(this,x);
case 2:
return G__2926__2.call(this,x,y);
default:
var G__2930 = null;
if (arguments.length > 2) {
var G__2931__i = 0, G__2931__a = new Array(arguments.length -  2);
while (G__2931__i < G__2931__a.length) {G__2931__a[G__2931__i] = arguments[G__2931__i + 2]; ++G__2931__i;}
G__2930 = new cljs.core.IndexedSeq(G__2931__a,0);
}
return G__2926__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2930);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2926.cljs$lang$maxFixedArity = 2;
G__2926.cljs$lang$applyTo = G__2926__3.cljs$lang$applyTo;
G__2926.cljs$core$IFn$_invoke$arity$0 = G__2926__0;
G__2926.cljs$core$IFn$_invoke$arity$1 = G__2926__1;
G__2926.cljs$core$IFn$_invoke$arity$2 = G__2926__2;
G__2926.cljs$core$IFn$_invoke$arity$variadic = G__2926__3.cljs$core$IFn$_invoke$arity$variadic;
return G__2926;
})()
});
/**
 * Returns a function that takes any number of arguments and returns x.
 */
cljs.core.constantly = (function cljs$core$constantly(x){
return (function() { 
var G__2932__delegate = function (args){
return x;
};
var G__2932 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__2933__i = 0, G__2933__a = new Array(arguments.length -  0);
while (G__2933__i < G__2933__a.length) {G__2933__a[G__2933__i] = arguments[G__2933__i + 0]; ++G__2933__i;}
  args = new cljs.core.IndexedSeq(G__2933__a,0);
} 
return G__2932__delegate.call(this,args);};
G__2932.cljs$lang$maxFixedArity = 0;
G__2932.cljs$lang$applyTo = (function (arglist__2934){
var args = cljs.core.seq(arglist__2934);
return G__2932__delegate(args);
});
G__2932.cljs$core$IFn$_invoke$arity$variadic = G__2932__delegate;
return G__2932;
})()
;
});
/**
 * Takes a set of functions and returns a fn that is the composition
 * of those fns.  The returned fn takes a variable number of args,
 * applies the rightmost of fns to the args, the next
 * fn (right-to-left) to the result, etc.
 * @param {...*} var_args
 */
cljs.core.comp = (function() {
var cljs$core$comp = null;
var cljs$core$comp__0 = (function (){
return cljs.core.identity;
});
var cljs$core$comp__1 = (function (f){
return f;
});
var cljs$core$comp__2 = (function (f,g){
return (function() {
var G__2989 = null;
var G__2989__0 = (function (){
var G__2962 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2962) : f.call(null,G__2962));
});
var G__2989__1 = (function (x){
var G__2963 = (function (){var G__2964 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2964) : g.call(null,G__2964));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2963) : f.call(null,G__2963));
});
var G__2989__2 = (function (x,y){
var G__2965 = (function (){var G__2966 = x;
var G__2967 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__2966,G__2967) : g.call(null,G__2966,G__2967));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2965) : f.call(null,G__2965));
});
var G__2989__3 = (function (x,y,z){
var G__2968 = (function (){var G__2969 = x;
var G__2970 = y;
var G__2971 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__2969,G__2970,G__2971) : g.call(null,G__2969,G__2970,G__2971));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2968) : f.call(null,G__2968));
});
var G__2989__4 = (function() { 
var G__2990__delegate = function (x,y,z,args){
var G__2972 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2972) : f.call(null,G__2972));
};
var G__2990 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__2991__i = 0, G__2991__a = new Array(arguments.length -  3);
while (G__2991__i < G__2991__a.length) {G__2991__a[G__2991__i] = arguments[G__2991__i + 3]; ++G__2991__i;}
  args = new cljs.core.IndexedSeq(G__2991__a,0);
} 
return G__2990__delegate.call(this,x,y,z,args);};
G__2990.cljs$lang$maxFixedArity = 3;
G__2990.cljs$lang$applyTo = (function (arglist__2992){
var x = cljs.core.first(arglist__2992);
arglist__2992 = cljs.core.next(arglist__2992);
var y = cljs.core.first(arglist__2992);
arglist__2992 = cljs.core.next(arglist__2992);
var z = cljs.core.first(arglist__2992);
var args = cljs.core.rest(arglist__2992);
return G__2990__delegate(x,y,z,args);
});
G__2990.cljs$core$IFn$_invoke$arity$variadic = G__2990__delegate;
return G__2990;
})()
;
G__2989 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__2989__0.call(this);
case 1:
return G__2989__1.call(this,x);
case 2:
return G__2989__2.call(this,x,y);
case 3:
return G__2989__3.call(this,x,y,z);
default:
var G__2993 = null;
if (arguments.length > 3) {
var G__2994__i = 0, G__2994__a = new Array(arguments.length -  3);
while (G__2994__i < G__2994__a.length) {G__2994__a[G__2994__i] = arguments[G__2994__i + 3]; ++G__2994__i;}
G__2993 = new cljs.core.IndexedSeq(G__2994__a,0);
}
return G__2989__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__2993);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2989.cljs$lang$maxFixedArity = 3;
G__2989.cljs$lang$applyTo = G__2989__4.cljs$lang$applyTo;
G__2989.cljs$core$IFn$_invoke$arity$0 = G__2989__0;
G__2989.cljs$core$IFn$_invoke$arity$1 = G__2989__1;
G__2989.cljs$core$IFn$_invoke$arity$2 = G__2989__2;
G__2989.cljs$core$IFn$_invoke$arity$3 = G__2989__3;
G__2989.cljs$core$IFn$_invoke$arity$variadic = G__2989__4.cljs$core$IFn$_invoke$arity$variadic;
return G__2989;
})()
});
var cljs$core$comp__3 = (function (f,g,h){
return (function() {
var G__2995 = null;
var G__2995__0 = (function (){
var G__2973 = (function (){var G__2974 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2974) : g.call(null,G__2974));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2973) : f.call(null,G__2973));
});
var G__2995__1 = (function (x){
var G__2975 = (function (){var G__2976 = (function (){var G__2977 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__2977) : h.call(null,G__2977));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2976) : g.call(null,G__2976));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2975) : f.call(null,G__2975));
});
var G__2995__2 = (function (x,y){
var G__2978 = (function (){var G__2979 = (function (){var G__2980 = x;
var G__2981 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__2980,G__2981) : h.call(null,G__2980,G__2981));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2979) : g.call(null,G__2979));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2978) : f.call(null,G__2978));
});
var G__2995__3 = (function (x,y,z){
var G__2982 = (function (){var G__2983 = (function (){var G__2984 = x;
var G__2985 = y;
var G__2986 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__2984,G__2985,G__2986) : h.call(null,G__2984,G__2985,G__2986));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2983) : g.call(null,G__2983));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2982) : f.call(null,G__2982));
});
var G__2995__4 = (function() { 
var G__2996__delegate = function (x,y,z,args){
var G__2987 = (function (){var G__2988 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2988) : g.call(null,G__2988));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2987) : f.call(null,G__2987));
};
var G__2996 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__2997__i = 0, G__2997__a = new Array(arguments.length -  3);
while (G__2997__i < G__2997__a.length) {G__2997__a[G__2997__i] = arguments[G__2997__i + 3]; ++G__2997__i;}
  args = new cljs.core.IndexedSeq(G__2997__a,0);
} 
return G__2996__delegate.call(this,x,y,z,args);};
G__2996.cljs$lang$maxFixedArity = 3;
G__2996.cljs$lang$applyTo = (function (arglist__2998){
var x = cljs.core.first(arglist__2998);
arglist__2998 = cljs.core.next(arglist__2998);
var y = cljs.core.first(arglist__2998);
arglist__2998 = cljs.core.next(arglist__2998);
var z = cljs.core.first(arglist__2998);
var args = cljs.core.rest(arglist__2998);
return G__2996__delegate(x,y,z,args);
});
G__2996.cljs$core$IFn$_invoke$arity$variadic = G__2996__delegate;
return G__2996;
})()
;
G__2995 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__2995__0.call(this);
case 1:
return G__2995__1.call(this,x);
case 2:
return G__2995__2.call(this,x,y);
case 3:
return G__2995__3.call(this,x,y,z);
default:
var G__2999 = null;
if (arguments.length > 3) {
var G__3000__i = 0, G__3000__a = new Array(arguments.length -  3);
while (G__3000__i < G__3000__a.length) {G__3000__a[G__3000__i] = arguments[G__3000__i + 3]; ++G__3000__i;}
G__2999 = new cljs.core.IndexedSeq(G__3000__a,0);
}
return G__2995__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__2999);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2995.cljs$lang$maxFixedArity = 3;
G__2995.cljs$lang$applyTo = G__2995__4.cljs$lang$applyTo;
G__2995.cljs$core$IFn$_invoke$arity$0 = G__2995__0;
G__2995.cljs$core$IFn$_invoke$arity$1 = G__2995__1;
G__2995.cljs$core$IFn$_invoke$arity$2 = G__2995__2;
G__2995.cljs$core$IFn$_invoke$arity$3 = G__2995__3;
G__2995.cljs$core$IFn$_invoke$arity$variadic = G__2995__4.cljs$core$IFn$_invoke$arity$variadic;
return G__2995;
})()
});
var cljs$core$comp__4 = (function() { 
var G__3001__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__3002__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__3003 = cljs.core.first(fs__$2).call(null,ret);
var G__3004 = cljs.core.next(fs__$2);
ret = G__3003;
fs__$2 = G__3004;
continue;
} else {
return ret;
}
break;
}
};
var G__3002 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__3005__i = 0, G__3005__a = new Array(arguments.length -  0);
while (G__3005__i < G__3005__a.length) {G__3005__a[G__3005__i] = arguments[G__3005__i + 0]; ++G__3005__i;}
  args = new cljs.core.IndexedSeq(G__3005__a,0);
} 
return G__3002__delegate.call(this,args);};
G__3002.cljs$lang$maxFixedArity = 0;
G__3002.cljs$lang$applyTo = (function (arglist__3006){
var args = cljs.core.seq(arglist__3006);
return G__3002__delegate(args);
});
G__3002.cljs$core$IFn$_invoke$arity$variadic = G__3002__delegate;
return G__3002;
})()
;
;})(fs__$1))
};
var G__3001 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__3007__i = 0, G__3007__a = new Array(arguments.length -  3);
while (G__3007__i < G__3007__a.length) {G__3007__a[G__3007__i] = arguments[G__3007__i + 3]; ++G__3007__i;}
  fs = new cljs.core.IndexedSeq(G__3007__a,0);
} 
return G__3001__delegate.call(this,f1,f2,f3,fs);};
G__3001.cljs$lang$maxFixedArity = 3;
G__3001.cljs$lang$applyTo = (function (arglist__3008){
var f1 = cljs.core.first(arglist__3008);
arglist__3008 = cljs.core.next(arglist__3008);
var f2 = cljs.core.first(arglist__3008);
arglist__3008 = cljs.core.next(arglist__3008);
var f3 = cljs.core.first(arglist__3008);
var fs = cljs.core.rest(arglist__3008);
return G__3001__delegate(f1,f2,f3,fs);
});
G__3001.cljs$core$IFn$_invoke$arity$variadic = G__3001__delegate;
return G__3001;
})()
;
cljs$core$comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return cljs$core$comp__0.call(this);
case 1:
return cljs$core$comp__1.call(this,f1);
case 2:
return cljs$core$comp__2.call(this,f1,f2);
case 3:
return cljs$core$comp__3.call(this,f1,f2,f3);
default:
var G__3009 = null;
if (arguments.length > 3) {
var G__3010__i = 0, G__3010__a = new Array(arguments.length -  3);
while (G__3010__i < G__3010__a.length) {G__3010__a[G__3010__i] = arguments[G__3010__i + 3]; ++G__3010__i;}
G__3009 = new cljs.core.IndexedSeq(G__3010__a,0);
}
return cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__3009);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$comp.cljs$lang$maxFixedArity = 3;
cljs$core$comp.cljs$lang$applyTo = cljs$core$comp__4.cljs$lang$applyTo;
cljs$core$comp.cljs$core$IFn$_invoke$arity$0 = cljs$core$comp__0;
cljs$core$comp.cljs$core$IFn$_invoke$arity$1 = cljs$core$comp__1;
cljs$core$comp.cljs$core$IFn$_invoke$arity$2 = cljs$core$comp__2;
cljs$core$comp.cljs$core$IFn$_invoke$arity$3 = cljs$core$comp__3;
cljs$core$comp.cljs$core$IFn$_invoke$arity$variadic = cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$comp;
})()
;
/**
 * Takes a function f and fewer than the normal arguments to f, and
 * returns a fn that takes a variable number of additional args. When
 * called, the returned function calls f with args + additional args.
 * @param {...*} var_args
 */
cljs.core.partial = (function() {
var cljs$core$partial = null;
var cljs$core$partial__1 = (function (f){
return f;
});
var cljs$core$partial__2 = (function (f,arg1){
return (function() {
var G__3095 = null;
var G__3095__0 = (function (){
var G__3053 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3053) : f.call(null,G__3053));
});
var G__3095__1 = (function (x){
var G__3054 = arg1;
var G__3055 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3054,G__3055) : f.call(null,G__3054,G__3055));
});
var G__3095__2 = (function (x,y){
var G__3056 = arg1;
var G__3057 = x;
var G__3058 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3056,G__3057,G__3058) : f.call(null,G__3056,G__3057,G__3058));
});
var G__3095__3 = (function (x,y,z){
var G__3059 = arg1;
var G__3060 = x;
var G__3061 = y;
var G__3062 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__3059,G__3060,G__3061,G__3062) : f.call(null,G__3059,G__3060,G__3061,G__3062));
});
var G__3095__4 = (function() { 
var G__3096__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__3096 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__3097__i = 0, G__3097__a = new Array(arguments.length -  3);
while (G__3097__i < G__3097__a.length) {G__3097__a[G__3097__i] = arguments[G__3097__i + 3]; ++G__3097__i;}
  args = new cljs.core.IndexedSeq(G__3097__a,0);
} 
return G__3096__delegate.call(this,x,y,z,args);};
G__3096.cljs$lang$maxFixedArity = 3;
G__3096.cljs$lang$applyTo = (function (arglist__3098){
var x = cljs.core.first(arglist__3098);
arglist__3098 = cljs.core.next(arglist__3098);
var y = cljs.core.first(arglist__3098);
arglist__3098 = cljs.core.next(arglist__3098);
var z = cljs.core.first(arglist__3098);
var args = cljs.core.rest(arglist__3098);
return G__3096__delegate(x,y,z,args);
});
G__3096.cljs$core$IFn$_invoke$arity$variadic = G__3096__delegate;
return G__3096;
})()
;
G__3095 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__3095__0.call(this);
case 1:
return G__3095__1.call(this,x);
case 2:
return G__3095__2.call(this,x,y);
case 3:
return G__3095__3.call(this,x,y,z);
default:
var G__3099 = null;
if (arguments.length > 3) {
var G__3100__i = 0, G__3100__a = new Array(arguments.length -  3);
while (G__3100__i < G__3100__a.length) {G__3100__a[G__3100__i] = arguments[G__3100__i + 3]; ++G__3100__i;}
G__3099 = new cljs.core.IndexedSeq(G__3100__a,0);
}
return G__3095__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__3099);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3095.cljs$lang$maxFixedArity = 3;
G__3095.cljs$lang$applyTo = G__3095__4.cljs$lang$applyTo;
G__3095.cljs$core$IFn$_invoke$arity$0 = G__3095__0;
G__3095.cljs$core$IFn$_invoke$arity$1 = G__3095__1;
G__3095.cljs$core$IFn$_invoke$arity$2 = G__3095__2;
G__3095.cljs$core$IFn$_invoke$arity$3 = G__3095__3;
G__3095.cljs$core$IFn$_invoke$arity$variadic = G__3095__4.cljs$core$IFn$_invoke$arity$variadic;
return G__3095;
})()
});
var cljs$core$partial__3 = (function (f,arg1,arg2){
return (function() {
var G__3101 = null;
var G__3101__0 = (function (){
var G__3063 = arg1;
var G__3064 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3063,G__3064) : f.call(null,G__3063,G__3064));
});
var G__3101__1 = (function (x){
var G__3065 = arg1;
var G__3066 = arg2;
var G__3067 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3065,G__3066,G__3067) : f.call(null,G__3065,G__3066,G__3067));
});
var G__3101__2 = (function (x,y){
var G__3068 = arg1;
var G__3069 = arg2;
var G__3070 = x;
var G__3071 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__3068,G__3069,G__3070,G__3071) : f.call(null,G__3068,G__3069,G__3070,G__3071));
});
var G__3101__3 = (function (x,y,z){
var G__3072 = arg1;
var G__3073 = arg2;
var G__3074 = x;
var G__3075 = y;
var G__3076 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__3072,G__3073,G__3074,G__3075,G__3076) : f.call(null,G__3072,G__3073,G__3074,G__3075,G__3076));
});
var G__3101__4 = (function() { 
var G__3102__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__3102 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__3103__i = 0, G__3103__a = new Array(arguments.length -  3);
while (G__3103__i < G__3103__a.length) {G__3103__a[G__3103__i] = arguments[G__3103__i + 3]; ++G__3103__i;}
  args = new cljs.core.IndexedSeq(G__3103__a,0);
} 
return G__3102__delegate.call(this,x,y,z,args);};
G__3102.cljs$lang$maxFixedArity = 3;
G__3102.cljs$lang$applyTo = (function (arglist__3104){
var x = cljs.core.first(arglist__3104);
arglist__3104 = cljs.core.next(arglist__3104);
var y = cljs.core.first(arglist__3104);
arglist__3104 = cljs.core.next(arglist__3104);
var z = cljs.core.first(arglist__3104);
var args = cljs.core.rest(arglist__3104);
return G__3102__delegate(x,y,z,args);
});
G__3102.cljs$core$IFn$_invoke$arity$variadic = G__3102__delegate;
return G__3102;
})()
;
G__3101 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__3101__0.call(this);
case 1:
return G__3101__1.call(this,x);
case 2:
return G__3101__2.call(this,x,y);
case 3:
return G__3101__3.call(this,x,y,z);
default:
var G__3105 = null;
if (arguments.length > 3) {
var G__3106__i = 0, G__3106__a = new Array(arguments.length -  3);
while (G__3106__i < G__3106__a.length) {G__3106__a[G__3106__i] = arguments[G__3106__i + 3]; ++G__3106__i;}
G__3105 = new cljs.core.IndexedSeq(G__3106__a,0);
}
return G__3101__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__3105);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3101.cljs$lang$maxFixedArity = 3;
G__3101.cljs$lang$applyTo = G__3101__4.cljs$lang$applyTo;
G__3101.cljs$core$IFn$_invoke$arity$0 = G__3101__0;
G__3101.cljs$core$IFn$_invoke$arity$1 = G__3101__1;
G__3101.cljs$core$IFn$_invoke$arity$2 = G__3101__2;
G__3101.cljs$core$IFn$_invoke$arity$3 = G__3101__3;
G__3101.cljs$core$IFn$_invoke$arity$variadic = G__3101__4.cljs$core$IFn$_invoke$arity$variadic;
return G__3101;
})()
});
var cljs$core$partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__3107 = null;
var G__3107__0 = (function (){
var G__3077 = arg1;
var G__3078 = arg2;
var G__3079 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3077,G__3078,G__3079) : f.call(null,G__3077,G__3078,G__3079));
});
var G__3107__1 = (function (x){
var G__3080 = arg1;
var G__3081 = arg2;
var G__3082 = arg3;
var G__3083 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__3080,G__3081,G__3082,G__3083) : f.call(null,G__3080,G__3081,G__3082,G__3083));
});
var G__3107__2 = (function (x,y){
var G__3084 = arg1;
var G__3085 = arg2;
var G__3086 = arg3;
var G__3087 = x;
var G__3088 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__3084,G__3085,G__3086,G__3087,G__3088) : f.call(null,G__3084,G__3085,G__3086,G__3087,G__3088));
});
var G__3107__3 = (function (x,y,z){
var G__3089 = arg1;
var G__3090 = arg2;
var G__3091 = arg3;
var G__3092 = x;
var G__3093 = y;
var G__3094 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__3089,G__3090,G__3091,G__3092,G__3093,G__3094) : f.call(null,G__3089,G__3090,G__3091,G__3092,G__3093,G__3094));
});
var G__3107__4 = (function() { 
var G__3108__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__3108 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__3109__i = 0, G__3109__a = new Array(arguments.length -  3);
while (G__3109__i < G__3109__a.length) {G__3109__a[G__3109__i] = arguments[G__3109__i + 3]; ++G__3109__i;}
  args = new cljs.core.IndexedSeq(G__3109__a,0);
} 
return G__3108__delegate.call(this,x,y,z,args);};
G__3108.cljs$lang$maxFixedArity = 3;
G__3108.cljs$lang$applyTo = (function (arglist__3110){
var x = cljs.core.first(arglist__3110);
arglist__3110 = cljs.core.next(arglist__3110);
var y = cljs.core.first(arglist__3110);
arglist__3110 = cljs.core.next(arglist__3110);
var z = cljs.core.first(arglist__3110);
var args = cljs.core.rest(arglist__3110);
return G__3108__delegate(x,y,z,args);
});
G__3108.cljs$core$IFn$_invoke$arity$variadic = G__3108__delegate;
return G__3108;
})()
;
G__3107 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__3107__0.call(this);
case 1:
return G__3107__1.call(this,x);
case 2:
return G__3107__2.call(this,x,y);
case 3:
return G__3107__3.call(this,x,y,z);
default:
var G__3111 = null;
if (arguments.length > 3) {
var G__3112__i = 0, G__3112__a = new Array(arguments.length -  3);
while (G__3112__i < G__3112__a.length) {G__3112__a[G__3112__i] = arguments[G__3112__i + 3]; ++G__3112__i;}
G__3111 = new cljs.core.IndexedSeq(G__3112__a,0);
}
return G__3107__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__3111);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3107.cljs$lang$maxFixedArity = 3;
G__3107.cljs$lang$applyTo = G__3107__4.cljs$lang$applyTo;
G__3107.cljs$core$IFn$_invoke$arity$0 = G__3107__0;
G__3107.cljs$core$IFn$_invoke$arity$1 = G__3107__1;
G__3107.cljs$core$IFn$_invoke$arity$2 = G__3107__2;
G__3107.cljs$core$IFn$_invoke$arity$3 = G__3107__3;
G__3107.cljs$core$IFn$_invoke$arity$variadic = G__3107__4.cljs$core$IFn$_invoke$arity$variadic;
return G__3107;
})()
});
var cljs$core$partial__5 = (function() { 
var G__3113__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__3114__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__3114 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__3115__i = 0, G__3115__a = new Array(arguments.length -  0);
while (G__3115__i < G__3115__a.length) {G__3115__a[G__3115__i] = arguments[G__3115__i + 0]; ++G__3115__i;}
  args = new cljs.core.IndexedSeq(G__3115__a,0);
} 
return G__3114__delegate.call(this,args);};
G__3114.cljs$lang$maxFixedArity = 0;
G__3114.cljs$lang$applyTo = (function (arglist__3116){
var args = cljs.core.seq(arglist__3116);
return G__3114__delegate(args);
});
G__3114.cljs$core$IFn$_invoke$arity$variadic = G__3114__delegate;
return G__3114;
})()
;
};
var G__3113 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__3117__i = 0, G__3117__a = new Array(arguments.length -  4);
while (G__3117__i < G__3117__a.length) {G__3117__a[G__3117__i] = arguments[G__3117__i + 4]; ++G__3117__i;}
  more = new cljs.core.IndexedSeq(G__3117__a,0);
} 
return G__3113__delegate.call(this,f,arg1,arg2,arg3,more);};
G__3113.cljs$lang$maxFixedArity = 4;
G__3113.cljs$lang$applyTo = (function (arglist__3118){
var f = cljs.core.first(arglist__3118);
arglist__3118 = cljs.core.next(arglist__3118);
var arg1 = cljs.core.first(arglist__3118);
arglist__3118 = cljs.core.next(arglist__3118);
var arg2 = cljs.core.first(arglist__3118);
arglist__3118 = cljs.core.next(arglist__3118);
var arg3 = cljs.core.first(arglist__3118);
var more = cljs.core.rest(arglist__3118);
return G__3113__delegate(f,arg1,arg2,arg3,more);
});
G__3113.cljs$core$IFn$_invoke$arity$variadic = G__3113__delegate;
return G__3113;
})()
;
cljs$core$partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$partial__1.call(this,f);
case 2:
return cljs$core$partial__2.call(this,f,arg1);
case 3:
return cljs$core$partial__3.call(this,f,arg1,arg2);
case 4:
return cljs$core$partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__3119 = null;
if (arguments.length > 4) {
var G__3120__i = 0, G__3120__a = new Array(arguments.length -  4);
while (G__3120__i < G__3120__a.length) {G__3120__a[G__3120__i] = arguments[G__3120__i + 4]; ++G__3120__i;}
G__3119 = new cljs.core.IndexedSeq(G__3120__a,0);
}
return cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__3119);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partial.cljs$lang$maxFixedArity = 4;
cljs$core$partial.cljs$lang$applyTo = cljs$core$partial__5.cljs$lang$applyTo;
cljs$core$partial.cljs$core$IFn$_invoke$arity$1 = cljs$core$partial__1;
cljs$core$partial.cljs$core$IFn$_invoke$arity$2 = cljs$core$partial__2;
cljs$core$partial.cljs$core$IFn$_invoke$arity$3 = cljs$core$partial__3;
cljs$core$partial.cljs$core$IFn$_invoke$arity$4 = cljs$core$partial__4;
cljs$core$partial.cljs$core$IFn$_invoke$arity$variadic = cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$partial;
})()
;
/**
 * Takes a function f, and returns a function that calls f, replacing
 * a nil first argument to f with the supplied value x. Higher arity
 * versions can replace arguments in the second and third
 * positions (y, z). Note that the function f can take any number of
 * arguments, not just the one(s) being nil-patched.
 */
cljs.core.fnil = (function() {
var cljs$core$fnil = null;
var cljs$core$fnil__2 = (function (f,x){
return (function() {
var G__3153 = null;
var G__3153__1 = (function (a){
var G__3137 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3137) : f.call(null,G__3137));
});
var G__3153__2 = (function (a,b){
var G__3138 = (((a == null))?x:a);
var G__3139 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3138,G__3139) : f.call(null,G__3138,G__3139));
});
var G__3153__3 = (function (a,b,c){
var G__3140 = (((a == null))?x:a);
var G__3141 = b;
var G__3142 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3140,G__3141,G__3142) : f.call(null,G__3140,G__3141,G__3142));
});
var G__3153__4 = (function() { 
var G__3154__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__3154 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__3155__i = 0, G__3155__a = new Array(arguments.length -  3);
while (G__3155__i < G__3155__a.length) {G__3155__a[G__3155__i] = arguments[G__3155__i + 3]; ++G__3155__i;}
  ds = new cljs.core.IndexedSeq(G__3155__a,0);
} 
return G__3154__delegate.call(this,a,b,c,ds);};
G__3154.cljs$lang$maxFixedArity = 3;
G__3154.cljs$lang$applyTo = (function (arglist__3156){
var a = cljs.core.first(arglist__3156);
arglist__3156 = cljs.core.next(arglist__3156);
var b = cljs.core.first(arglist__3156);
arglist__3156 = cljs.core.next(arglist__3156);
var c = cljs.core.first(arglist__3156);
var ds = cljs.core.rest(arglist__3156);
return G__3154__delegate(a,b,c,ds);
});
G__3154.cljs$core$IFn$_invoke$arity$variadic = G__3154__delegate;
return G__3154;
})()
;
G__3153 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__3153__1.call(this,a);
case 2:
return G__3153__2.call(this,a,b);
case 3:
return G__3153__3.call(this,a,b,c);
default:
var G__3157 = null;
if (arguments.length > 3) {
var G__3158__i = 0, G__3158__a = new Array(arguments.length -  3);
while (G__3158__i < G__3158__a.length) {G__3158__a[G__3158__i] = arguments[G__3158__i + 3]; ++G__3158__i;}
G__3157 = new cljs.core.IndexedSeq(G__3158__a,0);
}
return G__3153__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__3157);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3153.cljs$lang$maxFixedArity = 3;
G__3153.cljs$lang$applyTo = G__3153__4.cljs$lang$applyTo;
G__3153.cljs$core$IFn$_invoke$arity$1 = G__3153__1;
G__3153.cljs$core$IFn$_invoke$arity$2 = G__3153__2;
G__3153.cljs$core$IFn$_invoke$arity$3 = G__3153__3;
G__3153.cljs$core$IFn$_invoke$arity$variadic = G__3153__4.cljs$core$IFn$_invoke$arity$variadic;
return G__3153;
})()
});
var cljs$core$fnil__3 = (function (f,x,y){
return (function() {
var G__3159 = null;
var G__3159__2 = (function (a,b){
var G__3143 = (((a == null))?x:a);
var G__3144 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3143,G__3144) : f.call(null,G__3143,G__3144));
});
var G__3159__3 = (function (a,b,c){
var G__3145 = (((a == null))?x:a);
var G__3146 = (((b == null))?y:b);
var G__3147 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3145,G__3146,G__3147) : f.call(null,G__3145,G__3146,G__3147));
});
var G__3159__4 = (function() { 
var G__3160__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__3160 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__3161__i = 0, G__3161__a = new Array(arguments.length -  3);
while (G__3161__i < G__3161__a.length) {G__3161__a[G__3161__i] = arguments[G__3161__i + 3]; ++G__3161__i;}
  ds = new cljs.core.IndexedSeq(G__3161__a,0);
} 
return G__3160__delegate.call(this,a,b,c,ds);};
G__3160.cljs$lang$maxFixedArity = 3;
G__3160.cljs$lang$applyTo = (function (arglist__3162){
var a = cljs.core.first(arglist__3162);
arglist__3162 = cljs.core.next(arglist__3162);
var b = cljs.core.first(arglist__3162);
arglist__3162 = cljs.core.next(arglist__3162);
var c = cljs.core.first(arglist__3162);
var ds = cljs.core.rest(arglist__3162);
return G__3160__delegate(a,b,c,ds);
});
G__3160.cljs$core$IFn$_invoke$arity$variadic = G__3160__delegate;
return G__3160;
})()
;
G__3159 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__3159__2.call(this,a,b);
case 3:
return G__3159__3.call(this,a,b,c);
default:
var G__3163 = null;
if (arguments.length > 3) {
var G__3164__i = 0, G__3164__a = new Array(arguments.length -  3);
while (G__3164__i < G__3164__a.length) {G__3164__a[G__3164__i] = arguments[G__3164__i + 3]; ++G__3164__i;}
G__3163 = new cljs.core.IndexedSeq(G__3164__a,0);
}
return G__3159__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__3163);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3159.cljs$lang$maxFixedArity = 3;
G__3159.cljs$lang$applyTo = G__3159__4.cljs$lang$applyTo;
G__3159.cljs$core$IFn$_invoke$arity$2 = G__3159__2;
G__3159.cljs$core$IFn$_invoke$arity$3 = G__3159__3;
G__3159.cljs$core$IFn$_invoke$arity$variadic = G__3159__4.cljs$core$IFn$_invoke$arity$variadic;
return G__3159;
})()
});
var cljs$core$fnil__4 = (function (f,x,y,z){
return (function() {
var G__3165 = null;
var G__3165__2 = (function (a,b){
var G__3148 = (((a == null))?x:a);
var G__3149 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3148,G__3149) : f.call(null,G__3148,G__3149));
});
var G__3165__3 = (function (a,b,c){
var G__3150 = (((a == null))?x:a);
var G__3151 = (((b == null))?y:b);
var G__3152 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3150,G__3151,G__3152) : f.call(null,G__3150,G__3151,G__3152));
});
var G__3165__4 = (function() { 
var G__3166__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__3166 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__3167__i = 0, G__3167__a = new Array(arguments.length -  3);
while (G__3167__i < G__3167__a.length) {G__3167__a[G__3167__i] = arguments[G__3167__i + 3]; ++G__3167__i;}
  ds = new cljs.core.IndexedSeq(G__3167__a,0);
} 
return G__3166__delegate.call(this,a,b,c,ds);};
G__3166.cljs$lang$maxFixedArity = 3;
G__3166.cljs$lang$applyTo = (function (arglist__3168){
var a = cljs.core.first(arglist__3168);
arglist__3168 = cljs.core.next(arglist__3168);
var b = cljs.core.first(arglist__3168);
arglist__3168 = cljs.core.next(arglist__3168);
var c = cljs.core.first(arglist__3168);
var ds = cljs.core.rest(arglist__3168);
return G__3166__delegate(a,b,c,ds);
});
G__3166.cljs$core$IFn$_invoke$arity$variadic = G__3166__delegate;
return G__3166;
})()
;
G__3165 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__3165__2.call(this,a,b);
case 3:
return G__3165__3.call(this,a,b,c);
default:
var G__3169 = null;
if (arguments.length > 3) {
var G__3170__i = 0, G__3170__a = new Array(arguments.length -  3);
while (G__3170__i < G__3170__a.length) {G__3170__a[G__3170__i] = arguments[G__3170__i + 3]; ++G__3170__i;}
G__3169 = new cljs.core.IndexedSeq(G__3170__a,0);
}
return G__3165__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__3169);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3165.cljs$lang$maxFixedArity = 3;
G__3165.cljs$lang$applyTo = G__3165__4.cljs$lang$applyTo;
G__3165.cljs$core$IFn$_invoke$arity$2 = G__3165__2;
G__3165.cljs$core$IFn$_invoke$arity$3 = G__3165__3;
G__3165.cljs$core$IFn$_invoke$arity$variadic = G__3165__4.cljs$core$IFn$_invoke$arity$variadic;
return G__3165;
})()
});
cljs$core$fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return cljs$core$fnil__2.call(this,f,x);
case 3:
return cljs$core$fnil__3.call(this,f,x,y);
case 4:
return cljs$core$fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$fnil.cljs$core$IFn$_invoke$arity$2 = cljs$core$fnil__2;
cljs$core$fnil.cljs$core$IFn$_invoke$arity$3 = cljs$core$fnil__3;
cljs$core$fnil.cljs$core$IFn$_invoke$arity$4 = cljs$core$fnil__4;
return cljs$core$fnil;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to 0
 * and the first item of coll, followed by applying f to 1 and the second
 * item in coll, etc, until coll is exhausted. Thus function f should
 * accept 2 arguments, index and item.
 */
cljs.core.map_indexed = (function() {
var cljs$core$map_indexed = null;
var cljs$core$map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__3201 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__3201) : cljs.core.volatile_BANG_.call(null,G__3201));
})();
return ((function (i){
return (function() {
var G__3231 = null;
var G__3231__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__3231__1 = (function (result){
var G__3202 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__3202) : rf.call(null,G__3202));
});
var G__3231__2 = (function (result,input){
var G__3203 = result;
var G__3204 = (function (){var G__3205 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__3206 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3205,G__3206) : f.call(null,G__3205,G__3206));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3203,G__3204) : rf.call(null,G__3203,G__3204));
});
G__3231 = function(result,input){
switch(arguments.length){
case 0:
return G__3231__0.call(this);
case 1:
return G__3231__1.call(this,result);
case 2:
return G__3231__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3231.cljs$core$IFn$_invoke$arity$0 = G__3231__0;
G__3231.cljs$core$IFn$_invoke$arity$1 = G__3231__1;
G__3231.cljs$core$IFn$_invoke$arity$2 = G__3231__2;
return G__3231;
})()
;})(i))
});
});
var cljs$core$map_indexed__2 = (function (f,coll){
var mapi = (function cljs$core$map_indexed_$_mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__11242__auto___3232 = size;
var i_3233 = (0);
while(true){
if((i_3233 < n__11242__auto___3232)){
cljs.core.chunk_append(b,(function (){var G__3227 = (idx + i_3233);
var G__3228 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_3233);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3227,G__3228) : f.call(null,G__3227,G__3228));
})());

var G__3234 = (i_3233 + (1));
i_3233 = G__3234;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$map_indexed_$_mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__3229 = idx;
var G__3230 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3229,G__3230) : f.call(null,G__3229,G__3230));
})(),cljs$core$map_indexed_$_mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
cljs$core$map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$map_indexed__1.call(this,f);
case 2:
return cljs$core$map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$map_indexed__1;
cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$map_indexed__2;
return cljs$core$map_indexed;
})()
;
/**
 * Returns a lazy sequence of the non-nil results of (f item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a transducer when no collection is provided.
 */
cljs.core.keep = (function() {
var cljs$core$keep = null;
var cljs$core$keep__1 = (function (f){
return (function (rf){
return (function() {
var G__3253 = null;
var G__3253__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__3253__1 = (function (result){
var G__3247 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__3247) : rf.call(null,G__3247));
});
var G__3253__2 = (function (result,input){
var v = (function (){var G__3248 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3248) : f.call(null,G__3248));
})();
if((v == null)){
return result;
} else {
var G__3249 = result;
var G__3250 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3249,G__3250) : rf.call(null,G__3249,G__3250));
}
});
G__3253 = function(result,input){
switch(arguments.length){
case 0:
return G__3253__0.call(this);
case 1:
return G__3253__1.call(this,result);
case 2:
return G__3253__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3253.cljs$core$IFn$_invoke$arity$0 = G__3253__0;
G__3253.cljs$core$IFn$_invoke$arity$1 = G__3253__1;
G__3253.cljs$core$IFn$_invoke$arity$2 = G__3253__2;
return G__3253;
})()
});
});
var cljs$core$keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__11242__auto___3254 = size;
var i_3255 = (0);
while(true){
if((i_3255 < n__11242__auto___3254)){
var x_3256 = (function (){var G__3251 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_3255);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3251) : f.call(null,G__3251));
})();
if((x_3256 == null)){
} else {
cljs.core.chunk_append(b,x_3256);
}

var G__3257 = (i_3255 + (1));
i_3255 = G__3257;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__3252 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3252) : f.call(null,G__3252));
})();
if((x == null)){
return cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
cljs$core$keep = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$keep__1.call(this,f);
case 2:
return cljs$core$keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keep.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep__1;
cljs$core$keep.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep__2;
return cljs$core$keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__3258 = this$__$1;
return goog.getUid(G__3258);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__3259 = cljs.core.seq(self__.watches);
var chunk__3260 = null;
var count__3261 = (0);
var i__3262 = (0);
while(true){
if((i__3262 < count__3261)){
var vec__3263 = chunk__3260.cljs$core$IIndexed$_nth$arity$2(null,i__3262);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3263,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3263,(1),null);
var G__3264_3273 = key;
var G__3265_3274 = this$__$1;
var G__3266_3275 = oldval;
var G__3267_3276 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__3264_3273,G__3265_3274,G__3266_3275,G__3267_3276) : f.call(null,G__3264_3273,G__3265_3274,G__3266_3275,G__3267_3276));

var G__3277 = seq__3259;
var G__3278 = chunk__3260;
var G__3279 = count__3261;
var G__3280 = (i__3262 + (1));
seq__3259 = G__3277;
chunk__3260 = G__3278;
count__3261 = G__3279;
i__3262 = G__3280;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__3259);
if(temp__4126__auto__){
var seq__3259__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__3259__$1)){
var c__11190__auto__ = cljs.core.chunk_first(seq__3259__$1);
var G__3281 = cljs.core.chunk_rest(seq__3259__$1);
var G__3282 = c__11190__auto__;
var G__3283 = cljs.core.count(c__11190__auto__);
var G__3284 = (0);
seq__3259 = G__3281;
chunk__3260 = G__3282;
count__3261 = G__3283;
i__3262 = G__3284;
continue;
} else {
var vec__3268 = cljs.core.first(seq__3259__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3268,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3268,(1),null);
var G__3269_3285 = key;
var G__3270_3286 = this$__$1;
var G__3271_3287 = oldval;
var G__3272_3288 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__3269_3285,G__3270_3286,G__3271_3287,G__3272_3288) : f.call(null,G__3269_3285,G__3270_3286,G__3271_3287,G__3272_3288));

var G__3289 = cljs.core.next(seq__3259__$1);
var G__3290 = null;
var G__3291 = (0);
var G__3292 = (0);
seq__3259 = G__3289;
chunk__3260 = G__3290;
count__3261 = G__3291;
i__3262 = G__3292;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function cljs$core$__GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
 * Creates and returns an Atom with an initial value of x and zero or
 * more options (in any order):
 * 
 * :meta metadata-map
 * 
 * :validator validate-fn
 * 
 * If metadata-map is supplied, it will be come the metadata on the
 * atom. validate-fn must be nil or a side-effect-free fn of one
 * argument, which will be passed the intended new state on any state
 * change. If the new state is unacceptable, the validate-fn should
 * return false or throw an Error.  If either of these error conditions
 * occur, then the value of the atom will not change.
 * @param {...*} var_args
 */
cljs.core.atom = (function() {
var cljs$core$atom = null;
var cljs$core$atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var cljs$core$atom__2 = (function() { 
var G__3296__delegate = function (x,p__3293){
var map__3295 = p__3293;
var map__3295__$1 = ((cljs.core.seq_QMARK_(map__3295))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__3295):map__3295);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__3295__$1,cljs.core.constant$keyword$_COLON_validator);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__3295__$1,cljs.core.constant$keyword$_COLON_meta);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__3296 = function (x,var_args){
var p__3293 = null;
if (arguments.length > 1) {
var G__3297__i = 0, G__3297__a = new Array(arguments.length -  1);
while (G__3297__i < G__3297__a.length) {G__3297__a[G__3297__i] = arguments[G__3297__i + 1]; ++G__3297__i;}
  p__3293 = new cljs.core.IndexedSeq(G__3297__a,0);
} 
return G__3296__delegate.call(this,x,p__3293);};
G__3296.cljs$lang$maxFixedArity = 1;
G__3296.cljs$lang$applyTo = (function (arglist__3298){
var x = cljs.core.first(arglist__3298);
var p__3293 = cljs.core.rest(arglist__3298);
return G__3296__delegate(x,p__3293);
});
G__3296.cljs$core$IFn$_invoke$arity$variadic = G__3296__delegate;
return G__3296;
})()
;
cljs$core$atom = function(x,var_args){
var p__3293 = var_args;
switch(arguments.length){
case 1:
return cljs$core$atom__1.call(this,x);
default:
var G__3299 = null;
if (arguments.length > 1) {
var G__3300__i = 0, G__3300__a = new Array(arguments.length -  1);
while (G__3300__i < G__3300__a.length) {G__3300__a[G__3300__i] = arguments[G__3300__i + 1]; ++G__3300__i;}
G__3299 = new cljs.core.IndexedSeq(G__3300__a,0);
}
return cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__3299);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$atom.cljs$lang$maxFixedArity = 1;
cljs$core$atom.cljs$lang$applyTo = cljs$core$atom__2.cljs$lang$applyTo;
cljs$core$atom.cljs$core$IFn$_invoke$arity$1 = cljs$core$atom__1;
cljs$core$atom.cljs$core$IFn$_invoke$arity$variadic = cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$atom;
})()
;
/**
 * Sets the value of atom to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.reset_BANG_ = (function cljs$core$reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__3303 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__3303) : validate.call(null,G__3303));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__3304 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__3304) : cljs.core.pr_str.call(null,G__3304));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
 * Atomically swaps the value of atom to be:
 * (apply f current-value-of-atom args). Note that f may be called
 * multiple times, and thus should be free of side effects.  Returns
 * the value that was swapped in.
 * @param {...*} var_args
 */
cljs.core.swap_BANG_ = (function() {
var cljs$core$swap_BANG_ = null;
var cljs$core$swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__3311 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3311) : f.call(null,G__3311));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var cljs$core$swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__3312 = a.state;
var G__3313 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3312,G__3313) : f.call(null,G__3312,G__3313));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var cljs$core$swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__3314 = a.state;
var G__3315 = x;
var G__3316 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3314,G__3315,G__3316) : f.call(null,G__3314,G__3315,G__3316));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var cljs$core$swap_BANG___5 = (function() { 
var G__3317__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__3317 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__3318__i = 0, G__3318__a = new Array(arguments.length -  4);
while (G__3318__i < G__3318__a.length) {G__3318__a[G__3318__i] = arguments[G__3318__i + 4]; ++G__3318__i;}
  more = new cljs.core.IndexedSeq(G__3318__a,0);
} 
return G__3317__delegate.call(this,a,f,x,y,more);};
G__3317.cljs$lang$maxFixedArity = 4;
G__3317.cljs$lang$applyTo = (function (arglist__3319){
var a = cljs.core.first(arglist__3319);
arglist__3319 = cljs.core.next(arglist__3319);
var f = cljs.core.first(arglist__3319);
arglist__3319 = cljs.core.next(arglist__3319);
var x = cljs.core.first(arglist__3319);
arglist__3319 = cljs.core.next(arglist__3319);
var y = cljs.core.first(arglist__3319);
var more = cljs.core.rest(arglist__3319);
return G__3317__delegate(a,f,x,y,more);
});
G__3317.cljs$core$IFn$_invoke$arity$variadic = G__3317__delegate;
return G__3317;
})()
;
cljs$core$swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$swap_BANG___2.call(this,a,f);
case 3:
return cljs$core$swap_BANG___3.call(this,a,f,x);
case 4:
return cljs$core$swap_BANG___4.call(this,a,f,x,y);
default:
var G__3320 = null;
if (arguments.length > 4) {
var G__3321__i = 0, G__3321__a = new Array(arguments.length -  4);
while (G__3321__i < G__3321__a.length) {G__3321__a[G__3321__i] = arguments[G__3321__i + 4]; ++G__3321__i;}
G__3320 = new cljs.core.IndexedSeq(G__3321__a,0);
}
return cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__3320);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs$core$swap_BANG_.cljs$lang$applyTo = cljs$core$swap_BANG___5.cljs$lang$applyTo;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$swap_BANG___2;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$swap_BANG___3;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$swap_BANG___4;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$swap_BANG_;
})()
;
/**
 * Atomically sets the value of atom to newval if and only if the
 * current value of the atom is equal to oldval. Returns true if
 * set happened, else false.
 */
cljs.core.compare_and_set_BANG_ = (function cljs$core$compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
 * Sets the validator-fn for an atom. validator-fn must be nil or a
 * side-effect-free fn of one argument, which will be passed the intended
 * new state on any state change. If the new state is unacceptable, the
 * validator-fn should return false or throw an Error. If the current state
 * is not acceptable to the new validator, an Error will be thrown and the
 * validator will not be changed.
 */
cljs.core.set_validator_BANG_ = (function cljs$core$set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
 * Gets the validator-fn for a var/ref/agent/atom.
 */
cljs.core.get_validator = (function cljs$core$get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function cljs$core$__GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
 * Creates and returns a Volatile with an initial value of val.
 */
cljs.core.volatile_BANG_ = (function cljs$core$volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
 * Returns true if x is a volatile.
 */
cljs.core.volatile_QMARK_ = (function cljs$core$volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
 * Sets the value of volatile to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.vreset_BANG_ = (function cljs$core$vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
 * Returns a lazy sequence of the non-nil results of (f index item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a stateful transducer when no collection is
 * provided.
 */
cljs.core.keep_indexed = (function() {
var cljs$core$keep_indexed = null;
var cljs$core$keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__3388 = null;
var G__3388__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__3388__1 = (function (result){
var G__3355 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__3355) : rf.call(null,G__3355));
});
var G__3388__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__3356 = i;
var G__3357 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3356,G__3357) : f.call(null,G__3356,G__3357));
})();
if((v == null)){
return result;
} else {
var G__3358 = result;
var G__3359 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3358,G__3359) : rf.call(null,G__3358,G__3359));
}
});
G__3388 = function(result,input){
switch(arguments.length){
case 0:
return G__3388__0.call(this);
case 1:
return G__3388__1.call(this,result);
case 2:
return G__3388__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3388.cljs$core$IFn$_invoke$arity$0 = G__3388__0;
G__3388.cljs$core$IFn$_invoke$arity$1 = G__3388__1;
G__3388.cljs$core$IFn$_invoke$arity$2 = G__3388__2;
return G__3388;
})()
;})(ia))
});
});
var cljs$core$keep_indexed__2 = (function (f,coll){
var keepi = (function cljs$core$keep_indexed_$_keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__11242__auto___3389 = size;
var i_3390 = (0);
while(true){
if((i_3390 < n__11242__auto___3389)){
var x_3391 = (function (){var G__3384 = (idx + i_3390);
var G__3385 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_3390);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3384,G__3385) : f.call(null,G__3384,G__3385));
})();
if((x_3391 == null)){
} else {
cljs.core.chunk_append(b,x_3391);
}

var G__3392 = (i_3390 + (1));
i_3390 = G__3392;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keep_indexed_$_keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__3386 = idx;
var G__3387 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3386,G__3387) : f.call(null,G__3386,G__3387));
})();
if((x == null)){
return cljs$core$keep_indexed_$_keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs$core$keep_indexed_$_keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
cljs$core$keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$keep_indexed__1.call(this,f);
case 2:
return cljs$core$keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep_indexed__1;
cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep_indexed__2;
return cljs$core$keep_indexed;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns true if all of its
 * composing predicates return a logical true value against all of its arguments, else it returns
 * false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical false result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.every_pred = (function() {
var cljs$core$every_pred = null;
var cljs$core$every_pred__1 = (function (p){
return (function() {
var cljs$core$every_pred_$_ep1 = null;
var cljs$core$every_pred_$_ep1__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__3606 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__3606) : p.call(null,G__3606));
})());
});
var cljs$core$every_pred_$_ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__10815__auto__ = (function (){var G__3608 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__3608) : p.call(null,G__3608));
})();
if(cljs.core.truth_(and__10815__auto__)){
var G__3609 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__3609) : p.call(null,G__3609));
} else {
return and__10815__auto__;
}
})());
});
var cljs$core$every_pred_$_ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__10815__auto__ = (function (){var G__3611 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__3611) : p.call(null,G__3611));
})();
if(cljs.core.truth_(and__10815__auto__)){
var and__10815__auto____$1 = (function (){var G__3613 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__3613) : p.call(null,G__3613));
})();
if(cljs.core.truth_(and__10815__auto____$1)){
var G__3614 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__3614) : p.call(null,G__3614));
} else {
return and__10815__auto____$1;
}
} else {
return and__10815__auto__;
}
})());
});
var cljs$core$every_pred_$_ep1__4 = (function() { 
var G__3783__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__3783 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__3784__i = 0, G__3784__a = new Array(arguments.length -  3);
while (G__3784__i < G__3784__a.length) {G__3784__a[G__3784__i] = arguments[G__3784__i + 3]; ++G__3784__i;}
  args = new cljs.core.IndexedSeq(G__3784__a,0);
} 
return G__3783__delegate.call(this,x,y,z,args);};
G__3783.cljs$lang$maxFixedArity = 3;
G__3783.cljs$lang$applyTo = (function (arglist__3785){
var x = cljs.core.first(arglist__3785);
arglist__3785 = cljs.core.next(arglist__3785);
var y = cljs.core.first(arglist__3785);
arglist__3785 = cljs.core.next(arglist__3785);
var z = cljs.core.first(arglist__3785);
var args = cljs.core.rest(arglist__3785);
return G__3783__delegate(x,y,z,args);
});
G__3783.cljs$core$IFn$_invoke$arity$variadic = G__3783__delegate;
return G__3783;
})()
;
cljs$core$every_pred_$_ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep1__0.call(this);
case 1:
return cljs$core$every_pred_$_ep1__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep1__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep1__3.call(this,x,y,z);
default:
var G__3786 = null;
if (arguments.length > 3) {
var G__3787__i = 0, G__3787__a = new Array(arguments.length -  3);
while (G__3787__i < G__3787__a.length) {G__3787__a[G__3787__i] = arguments[G__3787__i + 3]; ++G__3787__i;}
G__3786 = new cljs.core.IndexedSeq(G__3787__a,0);
}
return cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__3786);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep1.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep1.cljs$lang$applyTo = cljs$core$every_pred_$_ep1__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep1__0;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep1__1;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep1__2;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep1__3;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep1;
})()
});
var cljs$core$every_pred__2 = (function (p1,p2){
return (function() {
var cljs$core$every_pred_$_ep2 = null;
var cljs$core$every_pred_$_ep2__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__10815__auto__ = (function (){var G__3646 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3646) : p1.call(null,G__3646));
})();
if(cljs.core.truth_(and__10815__auto__)){
var G__3647 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3647) : p2.call(null,G__3647));
} else {
return and__10815__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__10815__auto__ = (function (){var G__3649 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3649) : p1.call(null,G__3649));
})();
if(cljs.core.truth_(and__10815__auto__)){
var and__10815__auto____$1 = (function (){var G__3651 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3651) : p1.call(null,G__3651));
})();
if(cljs.core.truth_(and__10815__auto____$1)){
var and__10815__auto____$2 = (function (){var G__3653 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3653) : p2.call(null,G__3653));
})();
if(cljs.core.truth_(and__10815__auto____$2)){
var G__3654 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3654) : p2.call(null,G__3654));
} else {
return and__10815__auto____$2;
}
} else {
return and__10815__auto____$1;
}
} else {
return and__10815__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__10815__auto__ = (function (){var G__3656 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3656) : p1.call(null,G__3656));
})();
if(cljs.core.truth_(and__10815__auto__)){
var and__10815__auto____$1 = (function (){var G__3658 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3658) : p1.call(null,G__3658));
})();
if(cljs.core.truth_(and__10815__auto____$1)){
var and__10815__auto____$2 = (function (){var G__3660 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3660) : p1.call(null,G__3660));
})();
if(cljs.core.truth_(and__10815__auto____$2)){
var and__10815__auto____$3 = (function (){var G__3662 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3662) : p2.call(null,G__3662));
})();
if(cljs.core.truth_(and__10815__auto____$3)){
var and__10815__auto____$4 = (function (){var G__3664 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3664) : p2.call(null,G__3664));
})();
if(cljs.core.truth_(and__10815__auto____$4)){
var G__3665 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3665) : p2.call(null,G__3665));
} else {
return and__10815__auto____$4;
}
} else {
return and__10815__auto____$3;
}
} else {
return and__10815__auto____$2;
}
} else {
return and__10815__auto____$1;
}
} else {
return and__10815__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__4 = (function() { 
var G__3788__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__3393_SHARP_){
var and__10815__auto__ = (function (){var G__3670 = p1__3393_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3670) : p1.call(null,G__3670));
})();
if(cljs.core.truth_(and__10815__auto__)){
var G__3671 = p1__3393_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3671) : p2.call(null,G__3671));
} else {
return and__10815__auto__;
}
}),args)));
};
var G__3788 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__3789__i = 0, G__3789__a = new Array(arguments.length -  3);
while (G__3789__i < G__3789__a.length) {G__3789__a[G__3789__i] = arguments[G__3789__i + 3]; ++G__3789__i;}
  args = new cljs.core.IndexedSeq(G__3789__a,0);
} 
return G__3788__delegate.call(this,x,y,z,args);};
G__3788.cljs$lang$maxFixedArity = 3;
G__3788.cljs$lang$applyTo = (function (arglist__3790){
var x = cljs.core.first(arglist__3790);
arglist__3790 = cljs.core.next(arglist__3790);
var y = cljs.core.first(arglist__3790);
arglist__3790 = cljs.core.next(arglist__3790);
var z = cljs.core.first(arglist__3790);
var args = cljs.core.rest(arglist__3790);
return G__3788__delegate(x,y,z,args);
});
G__3788.cljs$core$IFn$_invoke$arity$variadic = G__3788__delegate;
return G__3788;
})()
;
cljs$core$every_pred_$_ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep2__0.call(this);
case 1:
return cljs$core$every_pred_$_ep2__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep2__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep2__3.call(this,x,y,z);
default:
var G__3791 = null;
if (arguments.length > 3) {
var G__3792__i = 0, G__3792__a = new Array(arguments.length -  3);
while (G__3792__i < G__3792__a.length) {G__3792__a[G__3792__i] = arguments[G__3792__i + 3]; ++G__3792__i;}
G__3791 = new cljs.core.IndexedSeq(G__3792__a,0);
}
return cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__3791);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep2.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep2.cljs$lang$applyTo = cljs$core$every_pred_$_ep2__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep2__0;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep2__1;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep2__2;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep2__3;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep2;
})()
});
var cljs$core$every_pred__3 = (function (p1,p2,p3){
return (function() {
var cljs$core$every_pred_$_ep3 = null;
var cljs$core$every_pred_$_ep3__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__10815__auto__ = (function (){var G__3717 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3717) : p1.call(null,G__3717));
})();
if(cljs.core.truth_(and__10815__auto__)){
var and__10815__auto____$1 = (function (){var G__3719 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3719) : p2.call(null,G__3719));
})();
if(cljs.core.truth_(and__10815__auto____$1)){
var G__3720 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__3720) : p3.call(null,G__3720));
} else {
return and__10815__auto____$1;
}
} else {
return and__10815__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__10815__auto__ = (function (){var G__3722 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3722) : p1.call(null,G__3722));
})();
if(cljs.core.truth_(and__10815__auto__)){
var and__10815__auto____$1 = (function (){var G__3724 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3724) : p2.call(null,G__3724));
})();
if(cljs.core.truth_(and__10815__auto____$1)){
var and__10815__auto____$2 = (function (){var G__3726 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__3726) : p3.call(null,G__3726));
})();
if(cljs.core.truth_(and__10815__auto____$2)){
var and__10815__auto____$3 = (function (){var G__3728 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3728) : p1.call(null,G__3728));
})();
if(cljs.core.truth_(and__10815__auto____$3)){
var and__10815__auto____$4 = (function (){var G__3730 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3730) : p2.call(null,G__3730));
})();
if(cljs.core.truth_(and__10815__auto____$4)){
var G__3731 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__3731) : p3.call(null,G__3731));
} else {
return and__10815__auto____$4;
}
} else {
return and__10815__auto____$3;
}
} else {
return and__10815__auto____$2;
}
} else {
return and__10815__auto____$1;
}
} else {
return and__10815__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__10815__auto__ = (function (){var G__3733 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3733) : p1.call(null,G__3733));
})();
if(cljs.core.truth_(and__10815__auto__)){
var and__10815__auto____$1 = (function (){var G__3735 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3735) : p2.call(null,G__3735));
})();
if(cljs.core.truth_(and__10815__auto____$1)){
var and__10815__auto____$2 = (function (){var G__3737 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__3737) : p3.call(null,G__3737));
})();
if(cljs.core.truth_(and__10815__auto____$2)){
var and__10815__auto____$3 = (function (){var G__3739 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3739) : p1.call(null,G__3739));
})();
if(cljs.core.truth_(and__10815__auto____$3)){
var and__10815__auto____$4 = (function (){var G__3741 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3741) : p2.call(null,G__3741));
})();
if(cljs.core.truth_(and__10815__auto____$4)){
var and__10815__auto____$5 = (function (){var G__3743 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__3743) : p3.call(null,G__3743));
})();
if(cljs.core.truth_(and__10815__auto____$5)){
var and__10815__auto____$6 = (function (){var G__3745 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3745) : p1.call(null,G__3745));
})();
if(cljs.core.truth_(and__10815__auto____$6)){
var and__10815__auto____$7 = (function (){var G__3747 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3747) : p2.call(null,G__3747));
})();
if(cljs.core.truth_(and__10815__auto____$7)){
var G__3748 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__3748) : p3.call(null,G__3748));
} else {
return and__10815__auto____$7;
}
} else {
return and__10815__auto____$6;
}
} else {
return and__10815__auto____$5;
}
} else {
return and__10815__auto____$4;
}
} else {
return and__10815__auto____$3;
}
} else {
return and__10815__auto____$2;
}
} else {
return and__10815__auto____$1;
}
} else {
return and__10815__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__4 = (function() { 
var G__3793__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__3394_SHARP_){
var and__10815__auto__ = (function (){var G__3755 = p1__3394_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3755) : p1.call(null,G__3755));
})();
if(cljs.core.truth_(and__10815__auto__)){
var and__10815__auto____$1 = (function (){var G__3757 = p1__3394_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3757) : p2.call(null,G__3757));
})();
if(cljs.core.truth_(and__10815__auto____$1)){
var G__3758 = p1__3394_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__3758) : p3.call(null,G__3758));
} else {
return and__10815__auto____$1;
}
} else {
return and__10815__auto__;
}
}),args)));
};
var G__3793 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__3794__i = 0, G__3794__a = new Array(arguments.length -  3);
while (G__3794__i < G__3794__a.length) {G__3794__a[G__3794__i] = arguments[G__3794__i + 3]; ++G__3794__i;}
  args = new cljs.core.IndexedSeq(G__3794__a,0);
} 
return G__3793__delegate.call(this,x,y,z,args);};
G__3793.cljs$lang$maxFixedArity = 3;
G__3793.cljs$lang$applyTo = (function (arglist__3795){
var x = cljs.core.first(arglist__3795);
arglist__3795 = cljs.core.next(arglist__3795);
var y = cljs.core.first(arglist__3795);
arglist__3795 = cljs.core.next(arglist__3795);
var z = cljs.core.first(arglist__3795);
var args = cljs.core.rest(arglist__3795);
return G__3793__delegate(x,y,z,args);
});
G__3793.cljs$core$IFn$_invoke$arity$variadic = G__3793__delegate;
return G__3793;
})()
;
cljs$core$every_pred_$_ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep3__0.call(this);
case 1:
return cljs$core$every_pred_$_ep3__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep3__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep3__3.call(this,x,y,z);
default:
var G__3796 = null;
if (arguments.length > 3) {
var G__3797__i = 0, G__3797__a = new Array(arguments.length -  3);
while (G__3797__i < G__3797__a.length) {G__3797__a[G__3797__i] = arguments[G__3797__i + 3]; ++G__3797__i;}
G__3796 = new cljs.core.IndexedSeq(G__3797__a,0);
}
return cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__3796);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep3.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep3.cljs$lang$applyTo = cljs$core$every_pred_$_ep3__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep3__0;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep3__1;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep3__2;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep3__3;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep3;
})()
});
var cljs$core$every_pred__4 = (function() { 
var G__3798__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$every_pred_$_epn = null;
var cljs$core$every_pred_$_epn__0 = (function (){
return true;
});
var cljs$core$every_pred_$_epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__3395_SHARP_){
var G__3774 = x;
return (p1__3395_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3395_SHARP_.cljs$core$IFn$_invoke$arity$1(G__3774) : p1__3395_SHARP_.call(null,G__3774));
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__3396_SHARP_){
var and__10815__auto__ = (function (){var G__3776 = x;
return (p1__3396_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3396_SHARP_.cljs$core$IFn$_invoke$arity$1(G__3776) : p1__3396_SHARP_.call(null,G__3776));
})();
if(cljs.core.truth_(and__10815__auto__)){
var G__3777 = y;
return (p1__3396_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3396_SHARP_.cljs$core$IFn$_invoke$arity$1(G__3777) : p1__3396_SHARP_.call(null,G__3777));
} else {
return and__10815__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__3397_SHARP_){
var and__10815__auto__ = (function (){var G__3779 = x;
return (p1__3397_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3397_SHARP_.cljs$core$IFn$_invoke$arity$1(G__3779) : p1__3397_SHARP_.call(null,G__3779));
})();
if(cljs.core.truth_(and__10815__auto__)){
var and__10815__auto____$1 = (function (){var G__3781 = y;
return (p1__3397_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3397_SHARP_.cljs$core$IFn$_invoke$arity$1(G__3781) : p1__3397_SHARP_.call(null,G__3781));
})();
if(cljs.core.truth_(and__10815__auto____$1)){
var G__3782 = z;
return (p1__3397_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3397_SHARP_.cljs$core$IFn$_invoke$arity$1(G__3782) : p1__3397_SHARP_.call(null,G__3782));
} else {
return and__10815__auto____$1;
}
} else {
return and__10815__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__4 = (function() { 
var G__3799__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__3398_SHARP_){
return cljs.core.every_QMARK_(p1__3398_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__3799 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__3800__i = 0, G__3800__a = new Array(arguments.length -  3);
while (G__3800__i < G__3800__a.length) {G__3800__a[G__3800__i] = arguments[G__3800__i + 3]; ++G__3800__i;}
  args = new cljs.core.IndexedSeq(G__3800__a,0);
} 
return G__3799__delegate.call(this,x,y,z,args);};
G__3799.cljs$lang$maxFixedArity = 3;
G__3799.cljs$lang$applyTo = (function (arglist__3801){
var x = cljs.core.first(arglist__3801);
arglist__3801 = cljs.core.next(arglist__3801);
var y = cljs.core.first(arglist__3801);
arglist__3801 = cljs.core.next(arglist__3801);
var z = cljs.core.first(arglist__3801);
var args = cljs.core.rest(arglist__3801);
return G__3799__delegate(x,y,z,args);
});
G__3799.cljs$core$IFn$_invoke$arity$variadic = G__3799__delegate;
return G__3799;
})()
;
cljs$core$every_pred_$_epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_epn__0.call(this);
case 1:
return cljs$core$every_pred_$_epn__1.call(this,x);
case 2:
return cljs$core$every_pred_$_epn__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_epn__3.call(this,x,y,z);
default:
var G__3802 = null;
if (arguments.length > 3) {
var G__3803__i = 0, G__3803__a = new Array(arguments.length -  3);
while (G__3803__i < G__3803__a.length) {G__3803__a[G__3803__i] = arguments[G__3803__i + 3]; ++G__3803__i;}
G__3802 = new cljs.core.IndexedSeq(G__3803__a,0);
}
return cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__3802);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_epn.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_epn.cljs$lang$applyTo = cljs$core$every_pred_$_epn__4.cljs$lang$applyTo;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_epn__0;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_epn__1;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_epn__2;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_epn__3;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_epn;
})()
;})(ps__$1))
};
var G__3798 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__3804__i = 0, G__3804__a = new Array(arguments.length -  3);
while (G__3804__i < G__3804__a.length) {G__3804__a[G__3804__i] = arguments[G__3804__i + 3]; ++G__3804__i;}
  ps = new cljs.core.IndexedSeq(G__3804__a,0);
} 
return G__3798__delegate.call(this,p1,p2,p3,ps);};
G__3798.cljs$lang$maxFixedArity = 3;
G__3798.cljs$lang$applyTo = (function (arglist__3805){
var p1 = cljs.core.first(arglist__3805);
arglist__3805 = cljs.core.next(arglist__3805);
var p2 = cljs.core.first(arglist__3805);
arglist__3805 = cljs.core.next(arglist__3805);
var p3 = cljs.core.first(arglist__3805);
var ps = cljs.core.rest(arglist__3805);
return G__3798__delegate(p1,p2,p3,ps);
});
G__3798.cljs$core$IFn$_invoke$arity$variadic = G__3798__delegate;
return G__3798;
})()
;
cljs$core$every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return cljs$core$every_pred__1.call(this,p1);
case 2:
return cljs$core$every_pred__2.call(this,p1,p2);
case 3:
return cljs$core$every_pred__3.call(this,p1,p2,p3);
default:
var G__3806 = null;
if (arguments.length > 3) {
var G__3807__i = 0, G__3807__a = new Array(arguments.length -  3);
while (G__3807__i < G__3807__a.length) {G__3807__a[G__3807__i] = arguments[G__3807__i + 3]; ++G__3807__i;}
G__3806 = new cljs.core.IndexedSeq(G__3807__a,0);
}
return cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__3806);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred.cljs$lang$applyTo = cljs$core$every_pred__4.cljs$lang$applyTo;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred__1;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred__2;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred__3;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns the first logical true value
 * returned by one of its composing predicates against any of its arguments, else it returns
 * logical false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical true result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.some_fn = (function() {
var cljs$core$some_fn = null;
var cljs$core$some_fn__1 = (function (p){
return (function() {
var cljs$core$some_fn_$_sp1 = null;
var cljs$core$some_fn_$_sp1__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp1__1 = (function (x){
var G__4013 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__4013) : p.call(null,G__4013));
});
var cljs$core$some_fn_$_sp1__2 = (function (x,y){
var or__10823__auto__ = (function (){var G__4015 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__4015) : p.call(null,G__4015));
})();
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
var G__4016 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__4016) : p.call(null,G__4016));
}
});
var cljs$core$some_fn_$_sp1__3 = (function (x,y,z){
var or__10823__auto__ = (function (){var G__4018 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__4018) : p.call(null,G__4018));
})();
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (function (){var G__4020 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__4020) : p.call(null,G__4020));
})();
if(cljs.core.truth_(or__10823__auto____$1)){
return or__10823__auto____$1;
} else {
var G__4021 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__4021) : p.call(null,G__4021));
}
}
});
var cljs$core$some_fn_$_sp1__4 = (function() { 
var G__4182__delegate = function (x,y,z,args){
var or__10823__auto__ = cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__4182 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__4183__i = 0, G__4183__a = new Array(arguments.length -  3);
while (G__4183__i < G__4183__a.length) {G__4183__a[G__4183__i] = arguments[G__4183__i + 3]; ++G__4183__i;}
  args = new cljs.core.IndexedSeq(G__4183__a,0);
} 
return G__4182__delegate.call(this,x,y,z,args);};
G__4182.cljs$lang$maxFixedArity = 3;
G__4182.cljs$lang$applyTo = (function (arglist__4184){
var x = cljs.core.first(arglist__4184);
arglist__4184 = cljs.core.next(arglist__4184);
var y = cljs.core.first(arglist__4184);
arglist__4184 = cljs.core.next(arglist__4184);
var z = cljs.core.first(arglist__4184);
var args = cljs.core.rest(arglist__4184);
return G__4182__delegate(x,y,z,args);
});
G__4182.cljs$core$IFn$_invoke$arity$variadic = G__4182__delegate;
return G__4182;
})()
;
cljs$core$some_fn_$_sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp1__0.call(this);
case 1:
return cljs$core$some_fn_$_sp1__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp1__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp1__3.call(this,x,y,z);
default:
var G__4185 = null;
if (arguments.length > 3) {
var G__4186__i = 0, G__4186__a = new Array(arguments.length -  3);
while (G__4186__i < G__4186__a.length) {G__4186__a[G__4186__i] = arguments[G__4186__i + 3]; ++G__4186__i;}
G__4185 = new cljs.core.IndexedSeq(G__4186__a,0);
}
return cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__4185);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp1.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp1.cljs$lang$applyTo = cljs$core$some_fn_$_sp1__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp1__0;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp1__1;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp1__2;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp1__3;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp1;
})()
});
var cljs$core$some_fn__2 = (function (p1,p2){
return (function() {
var cljs$core$some_fn_$_sp2 = null;
var cljs$core$some_fn_$_sp2__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp2__1 = (function (x){
var or__10823__auto__ = (function (){var G__4053 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__4053) : p1.call(null,G__4053));
})();
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
var G__4054 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__4054) : p2.call(null,G__4054));
}
});
var cljs$core$some_fn_$_sp2__2 = (function (x,y){
var or__10823__auto__ = (function (){var G__4056 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__4056) : p1.call(null,G__4056));
})();
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (function (){var G__4058 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__4058) : p1.call(null,G__4058));
})();
if(cljs.core.truth_(or__10823__auto____$1)){
return or__10823__auto____$1;
} else {
var or__10823__auto____$2 = (function (){var G__4060 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__4060) : p2.call(null,G__4060));
})();
if(cljs.core.truth_(or__10823__auto____$2)){
return or__10823__auto____$2;
} else {
var G__4061 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__4061) : p2.call(null,G__4061));
}
}
}
});
var cljs$core$some_fn_$_sp2__3 = (function (x,y,z){
var or__10823__auto__ = (function (){var G__4063 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__4063) : p1.call(null,G__4063));
})();
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (function (){var G__4065 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__4065) : p1.call(null,G__4065));
})();
if(cljs.core.truth_(or__10823__auto____$1)){
return or__10823__auto____$1;
} else {
var or__10823__auto____$2 = (function (){var G__4067 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__4067) : p1.call(null,G__4067));
})();
if(cljs.core.truth_(or__10823__auto____$2)){
return or__10823__auto____$2;
} else {
var or__10823__auto____$3 = (function (){var G__4069 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__4069) : p2.call(null,G__4069));
})();
if(cljs.core.truth_(or__10823__auto____$3)){
return or__10823__auto____$3;
} else {
var or__10823__auto____$4 = (function (){var G__4071 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__4071) : p2.call(null,G__4071));
})();
if(cljs.core.truth_(or__10823__auto____$4)){
return or__10823__auto____$4;
} else {
var G__4072 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__4072) : p2.call(null,G__4072));
}
}
}
}
}
});
var cljs$core$some_fn_$_sp2__4 = (function() { 
var G__4187__delegate = function (x,y,z,args){
var or__10823__auto__ = cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
return cljs.core.some(((function (or__10823__auto__){
return (function (p1__3808_SHARP_){
var or__10823__auto____$1 = (function (){var G__4074 = p1__3808_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__4074) : p1.call(null,G__4074));
})();
if(cljs.core.truth_(or__10823__auto____$1)){
return or__10823__auto____$1;
} else {
var G__4075 = p1__3808_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__4075) : p2.call(null,G__4075));
}
});})(or__10823__auto__))
,args);
}
};
var G__4187 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__4188__i = 0, G__4188__a = new Array(arguments.length -  3);
while (G__4188__i < G__4188__a.length) {G__4188__a[G__4188__i] = arguments[G__4188__i + 3]; ++G__4188__i;}
  args = new cljs.core.IndexedSeq(G__4188__a,0);
} 
return G__4187__delegate.call(this,x,y,z,args);};
G__4187.cljs$lang$maxFixedArity = 3;
G__4187.cljs$lang$applyTo = (function (arglist__4189){
var x = cljs.core.first(arglist__4189);
arglist__4189 = cljs.core.next(arglist__4189);
var y = cljs.core.first(arglist__4189);
arglist__4189 = cljs.core.next(arglist__4189);
var z = cljs.core.first(arglist__4189);
var args = cljs.core.rest(arglist__4189);
return G__4187__delegate(x,y,z,args);
});
G__4187.cljs$core$IFn$_invoke$arity$variadic = G__4187__delegate;
return G__4187;
})()
;
cljs$core$some_fn_$_sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp2__0.call(this);
case 1:
return cljs$core$some_fn_$_sp2__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp2__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp2__3.call(this,x,y,z);
default:
var G__4190 = null;
if (arguments.length > 3) {
var G__4191__i = 0, G__4191__a = new Array(arguments.length -  3);
while (G__4191__i < G__4191__a.length) {G__4191__a[G__4191__i] = arguments[G__4191__i + 3]; ++G__4191__i;}
G__4190 = new cljs.core.IndexedSeq(G__4191__a,0);
}
return cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__4190);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp2.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp2.cljs$lang$applyTo = cljs$core$some_fn_$_sp2__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp2__0;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp2__1;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp2__2;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp2__3;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp2;
})()
});
var cljs$core$some_fn__3 = (function (p1,p2,p3){
return (function() {
var cljs$core$some_fn_$_sp3 = null;
var cljs$core$some_fn_$_sp3__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp3__1 = (function (x){
var or__10823__auto__ = (function (){var G__4121 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__4121) : p1.call(null,G__4121));
})();
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (function (){var G__4123 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__4123) : p2.call(null,G__4123));
})();
if(cljs.core.truth_(or__10823__auto____$1)){
return or__10823__auto____$1;
} else {
var G__4124 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__4124) : p3.call(null,G__4124));
}
}
});
var cljs$core$some_fn_$_sp3__2 = (function (x,y){
var or__10823__auto__ = (function (){var G__4126 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__4126) : p1.call(null,G__4126));
})();
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (function (){var G__4128 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__4128) : p2.call(null,G__4128));
})();
if(cljs.core.truth_(or__10823__auto____$1)){
return or__10823__auto____$1;
} else {
var or__10823__auto____$2 = (function (){var G__4130 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__4130) : p3.call(null,G__4130));
})();
if(cljs.core.truth_(or__10823__auto____$2)){
return or__10823__auto____$2;
} else {
var or__10823__auto____$3 = (function (){var G__4132 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__4132) : p1.call(null,G__4132));
})();
if(cljs.core.truth_(or__10823__auto____$3)){
return or__10823__auto____$3;
} else {
var or__10823__auto____$4 = (function (){var G__4134 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__4134) : p2.call(null,G__4134));
})();
if(cljs.core.truth_(or__10823__auto____$4)){
return or__10823__auto____$4;
} else {
var G__4135 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__4135) : p3.call(null,G__4135));
}
}
}
}
}
});
var cljs$core$some_fn_$_sp3__3 = (function (x,y,z){
var or__10823__auto__ = (function (){var G__4137 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__4137) : p1.call(null,G__4137));
})();
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (function (){var G__4139 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__4139) : p2.call(null,G__4139));
})();
if(cljs.core.truth_(or__10823__auto____$1)){
return or__10823__auto____$1;
} else {
var or__10823__auto____$2 = (function (){var G__4141 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__4141) : p3.call(null,G__4141));
})();
if(cljs.core.truth_(or__10823__auto____$2)){
return or__10823__auto____$2;
} else {
var or__10823__auto____$3 = (function (){var G__4143 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__4143) : p1.call(null,G__4143));
})();
if(cljs.core.truth_(or__10823__auto____$3)){
return or__10823__auto____$3;
} else {
var or__10823__auto____$4 = (function (){var G__4145 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__4145) : p2.call(null,G__4145));
})();
if(cljs.core.truth_(or__10823__auto____$4)){
return or__10823__auto____$4;
} else {
var or__10823__auto____$5 = (function (){var G__4147 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__4147) : p3.call(null,G__4147));
})();
if(cljs.core.truth_(or__10823__auto____$5)){
return or__10823__auto____$5;
} else {
var or__10823__auto____$6 = (function (){var G__4149 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__4149) : p1.call(null,G__4149));
})();
if(cljs.core.truth_(or__10823__auto____$6)){
return or__10823__auto____$6;
} else {
var or__10823__auto____$7 = (function (){var G__4151 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__4151) : p2.call(null,G__4151));
})();
if(cljs.core.truth_(or__10823__auto____$7)){
return or__10823__auto____$7;
} else {
var G__4152 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__4152) : p3.call(null,G__4152));
}
}
}
}
}
}
}
}
});
var cljs$core$some_fn_$_sp3__4 = (function() { 
var G__4192__delegate = function (x,y,z,args){
var or__10823__auto__ = cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
return cljs.core.some(((function (or__10823__auto__){
return (function (p1__3809_SHARP_){
var or__10823__auto____$1 = (function (){var G__4154 = p1__3809_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__4154) : p1.call(null,G__4154));
})();
if(cljs.core.truth_(or__10823__auto____$1)){
return or__10823__auto____$1;
} else {
var or__10823__auto____$2 = (function (){var G__4156 = p1__3809_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__4156) : p2.call(null,G__4156));
})();
if(cljs.core.truth_(or__10823__auto____$2)){
return or__10823__auto____$2;
} else {
var G__4157 = p1__3809_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__4157) : p3.call(null,G__4157));
}
}
});})(or__10823__auto__))
,args);
}
};
var G__4192 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__4193__i = 0, G__4193__a = new Array(arguments.length -  3);
while (G__4193__i < G__4193__a.length) {G__4193__a[G__4193__i] = arguments[G__4193__i + 3]; ++G__4193__i;}
  args = new cljs.core.IndexedSeq(G__4193__a,0);
} 
return G__4192__delegate.call(this,x,y,z,args);};
G__4192.cljs$lang$maxFixedArity = 3;
G__4192.cljs$lang$applyTo = (function (arglist__4194){
var x = cljs.core.first(arglist__4194);
arglist__4194 = cljs.core.next(arglist__4194);
var y = cljs.core.first(arglist__4194);
arglist__4194 = cljs.core.next(arglist__4194);
var z = cljs.core.first(arglist__4194);
var args = cljs.core.rest(arglist__4194);
return G__4192__delegate(x,y,z,args);
});
G__4192.cljs$core$IFn$_invoke$arity$variadic = G__4192__delegate;
return G__4192;
})()
;
cljs$core$some_fn_$_sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp3__0.call(this);
case 1:
return cljs$core$some_fn_$_sp3__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp3__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp3__3.call(this,x,y,z);
default:
var G__4195 = null;
if (arguments.length > 3) {
var G__4196__i = 0, G__4196__a = new Array(arguments.length -  3);
while (G__4196__i < G__4196__a.length) {G__4196__a[G__4196__i] = arguments[G__4196__i + 3]; ++G__4196__i;}
G__4195 = new cljs.core.IndexedSeq(G__4196__a,0);
}
return cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__4195);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp3.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp3.cljs$lang$applyTo = cljs$core$some_fn_$_sp3__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp3__0;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp3__1;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp3__2;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp3__3;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp3;
})()
});
var cljs$core$some_fn__4 = (function() { 
var G__4197__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$some_fn_$_spn = null;
var cljs$core$some_fn_$_spn__0 = (function (){
return null;
});
var cljs$core$some_fn_$_spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__3810_SHARP_){
var G__4173 = x;
return (p1__3810_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3810_SHARP_.cljs$core$IFn$_invoke$arity$1(G__4173) : p1__3810_SHARP_.call(null,G__4173));
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__3811_SHARP_){
var or__10823__auto__ = (function (){var G__4175 = x;
return (p1__3811_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3811_SHARP_.cljs$core$IFn$_invoke$arity$1(G__4175) : p1__3811_SHARP_.call(null,G__4175));
})();
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
var G__4176 = y;
return (p1__3811_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3811_SHARP_.cljs$core$IFn$_invoke$arity$1(G__4176) : p1__3811_SHARP_.call(null,G__4176));
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__3812_SHARP_){
var or__10823__auto__ = (function (){var G__4178 = x;
return (p1__3812_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3812_SHARP_.cljs$core$IFn$_invoke$arity$1(G__4178) : p1__3812_SHARP_.call(null,G__4178));
})();
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (function (){var G__4180 = y;
return (p1__3812_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3812_SHARP_.cljs$core$IFn$_invoke$arity$1(G__4180) : p1__3812_SHARP_.call(null,G__4180));
})();
if(cljs.core.truth_(or__10823__auto____$1)){
return or__10823__auto____$1;
} else {
var G__4181 = z;
return (p1__3812_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3812_SHARP_.cljs$core$IFn$_invoke$arity$1(G__4181) : p1__3812_SHARP_.call(null,G__4181));
}
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__4 = (function() { 
var G__4198__delegate = function (x,y,z,args){
var or__10823__auto__ = cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
return cljs.core.some(((function (or__10823__auto__,ps__$1){
return (function (p1__3813_SHARP_){
return cljs.core.some(p1__3813_SHARP_,args);
});})(or__10823__auto__,ps__$1))
,ps__$1);
}
};
var G__4198 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__4199__i = 0, G__4199__a = new Array(arguments.length -  3);
while (G__4199__i < G__4199__a.length) {G__4199__a[G__4199__i] = arguments[G__4199__i + 3]; ++G__4199__i;}
  args = new cljs.core.IndexedSeq(G__4199__a,0);
} 
return G__4198__delegate.call(this,x,y,z,args);};
G__4198.cljs$lang$maxFixedArity = 3;
G__4198.cljs$lang$applyTo = (function (arglist__4200){
var x = cljs.core.first(arglist__4200);
arglist__4200 = cljs.core.next(arglist__4200);
var y = cljs.core.first(arglist__4200);
arglist__4200 = cljs.core.next(arglist__4200);
var z = cljs.core.first(arglist__4200);
var args = cljs.core.rest(arglist__4200);
return G__4198__delegate(x,y,z,args);
});
G__4198.cljs$core$IFn$_invoke$arity$variadic = G__4198__delegate;
return G__4198;
})()
;
cljs$core$some_fn_$_spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_spn__0.call(this);
case 1:
return cljs$core$some_fn_$_spn__1.call(this,x);
case 2:
return cljs$core$some_fn_$_spn__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_spn__3.call(this,x,y,z);
default:
var G__4201 = null;
if (arguments.length > 3) {
var G__4202__i = 0, G__4202__a = new Array(arguments.length -  3);
while (G__4202__i < G__4202__a.length) {G__4202__a[G__4202__i] = arguments[G__4202__i + 3]; ++G__4202__i;}
G__4201 = new cljs.core.IndexedSeq(G__4202__a,0);
}
return cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__4201);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_spn.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_spn.cljs$lang$applyTo = cljs$core$some_fn_$_spn__4.cljs$lang$applyTo;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_spn__0;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_spn__1;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_spn__2;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_spn__3;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_spn;
})()
;})(ps__$1))
};
var G__4197 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__4203__i = 0, G__4203__a = new Array(arguments.length -  3);
while (G__4203__i < G__4203__a.length) {G__4203__a[G__4203__i] = arguments[G__4203__i + 3]; ++G__4203__i;}
  ps = new cljs.core.IndexedSeq(G__4203__a,0);
} 
return G__4197__delegate.call(this,p1,p2,p3,ps);};
G__4197.cljs$lang$maxFixedArity = 3;
G__4197.cljs$lang$applyTo = (function (arglist__4204){
var p1 = cljs.core.first(arglist__4204);
arglist__4204 = cljs.core.next(arglist__4204);
var p2 = cljs.core.first(arglist__4204);
arglist__4204 = cljs.core.next(arglist__4204);
var p3 = cljs.core.first(arglist__4204);
var ps = cljs.core.rest(arglist__4204);
return G__4197__delegate(p1,p2,p3,ps);
});
G__4197.cljs$core$IFn$_invoke$arity$variadic = G__4197__delegate;
return G__4197;
})()
;
cljs$core$some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return cljs$core$some_fn__1.call(this,p1);
case 2:
return cljs$core$some_fn__2.call(this,p1,p2);
case 3:
return cljs$core$some_fn__3.call(this,p1,p2,p3);
default:
var G__4205 = null;
if (arguments.length > 3) {
var G__4206__i = 0, G__4206__a = new Array(arguments.length -  3);
while (G__4206__i < G__4206__a.length) {G__4206__a[G__4206__i] = arguments[G__4206__i + 3]; ++G__4206__i;}
G__4205 = new cljs.core.IndexedSeq(G__4206__a,0);
}
return cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__4205);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn.cljs$lang$applyTo = cljs$core$some_fn__4.cljs$lang$applyTo;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn__1;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn__2;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn__3;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to
 * the set of first items of each coll, followed by applying f to the
 * set of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments. Returns a transducer when
 * no collection is provided.
 * @param {...*} var_args
 */
cljs.core.map = (function() {
var cljs$core$map = null;
var cljs$core$map__1 = (function (f){
return (function (rf){
return (function() {
var G__4261 = null;
var G__4261__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__4261__1 = (function (result){
var G__4247 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__4247) : rf.call(null,G__4247));
});
var G__4261__2 = (function (result,input){
var G__4248 = result;
var G__4249 = (function (){var G__4250 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4250) : f.call(null,G__4250));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__4248,G__4249) : rf.call(null,G__4248,G__4249));
});
var G__4261__3 = (function() { 
var G__4262__delegate = function (result,input,inputs){
var G__4251 = result;
var G__4252 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__4251,G__4252) : rf.call(null,G__4251,G__4252));
};
var G__4262 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__4263__i = 0, G__4263__a = new Array(arguments.length -  2);
while (G__4263__i < G__4263__a.length) {G__4263__a[G__4263__i] = arguments[G__4263__i + 2]; ++G__4263__i;}
  inputs = new cljs.core.IndexedSeq(G__4263__a,0);
} 
return G__4262__delegate.call(this,result,input,inputs);};
G__4262.cljs$lang$maxFixedArity = 2;
G__4262.cljs$lang$applyTo = (function (arglist__4264){
var result = cljs.core.first(arglist__4264);
arglist__4264 = cljs.core.next(arglist__4264);
var input = cljs.core.first(arglist__4264);
var inputs = cljs.core.rest(arglist__4264);
return G__4262__delegate(result,input,inputs);
});
G__4262.cljs$core$IFn$_invoke$arity$variadic = G__4262__delegate;
return G__4262;
})()
;
G__4261 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__4261__0.call(this);
case 1:
return G__4261__1.call(this,result);
case 2:
return G__4261__2.call(this,result,input);
default:
var G__4265 = null;
if (arguments.length > 2) {
var G__4266__i = 0, G__4266__a = new Array(arguments.length -  2);
while (G__4266__i < G__4266__a.length) {G__4266__a[G__4266__i] = arguments[G__4266__i + 2]; ++G__4266__i;}
G__4265 = new cljs.core.IndexedSeq(G__4266__a,0);
}
return G__4261__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__4265);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4261.cljs$lang$maxFixedArity = 2;
G__4261.cljs$lang$applyTo = G__4261__3.cljs$lang$applyTo;
G__4261.cljs$core$IFn$_invoke$arity$0 = G__4261__0;
G__4261.cljs$core$IFn$_invoke$arity$1 = G__4261__1;
G__4261.cljs$core$IFn$_invoke$arity$2 = G__4261__2;
G__4261.cljs$core$IFn$_invoke$arity$variadic = G__4261__3.cljs$core$IFn$_invoke$arity$variadic;
return G__4261;
})()
});
});
var cljs$core$map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__11242__auto___4267 = size;
var i_4268 = (0);
while(true){
if((i_4268 < n__11242__auto___4267)){
cljs.core.chunk_append(b,(function (){var G__4253 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_4268);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4253) : f.call(null,G__4253));
})());

var G__4269 = (i_4268 + (1));
i_4268 = G__4269;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__4254 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4254) : f.call(null,G__4254));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var cljs$core$map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__4255 = cljs.core.first(s1);
var G__4256 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4255,G__4256) : f.call(null,G__4255,G__4256));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var cljs$core$map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__4257 = cljs.core.first(s1);
var G__4258 = cljs.core.first(s2);
var G__4259 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4257,G__4258,G__4259) : f.call(null,G__4257,G__4258,G__4259));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var cljs$core$map__5 = (function() { 
var G__4270__delegate = function (f,c1,c2,c3,colls){
var step = (function cljs$core$map_$_step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs$core$map_$_step(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return cljs$core$map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__4207_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__4207_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__4270 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__4271__i = 0, G__4271__a = new Array(arguments.length -  4);
while (G__4271__i < G__4271__a.length) {G__4271__a[G__4271__i] = arguments[G__4271__i + 4]; ++G__4271__i;}
  colls = new cljs.core.IndexedSeq(G__4271__a,0);
} 
return G__4270__delegate.call(this,f,c1,c2,c3,colls);};
G__4270.cljs$lang$maxFixedArity = 4;
G__4270.cljs$lang$applyTo = (function (arglist__4272){
var f = cljs.core.first(arglist__4272);
arglist__4272 = cljs.core.next(arglist__4272);
var c1 = cljs.core.first(arglist__4272);
arglist__4272 = cljs.core.next(arglist__4272);
var c2 = cljs.core.first(arglist__4272);
arglist__4272 = cljs.core.next(arglist__4272);
var c3 = cljs.core.first(arglist__4272);
var colls = cljs.core.rest(arglist__4272);
return G__4270__delegate(f,c1,c2,c3,colls);
});
G__4270.cljs$core$IFn$_invoke$arity$variadic = G__4270__delegate;
return G__4270;
})()
;
cljs$core$map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$map__1.call(this,f);
case 2:
return cljs$core$map__2.call(this,f,c1);
case 3:
return cljs$core$map__3.call(this,f,c1,c2);
case 4:
return cljs$core$map__4.call(this,f,c1,c2,c3);
default:
var G__4273 = null;
if (arguments.length > 4) {
var G__4274__i = 0, G__4274__a = new Array(arguments.length -  4);
while (G__4274__i < G__4274__a.length) {G__4274__a[G__4274__i] = arguments[G__4274__i + 4]; ++G__4274__i;}
G__4273 = new cljs.core.IndexedSeq(G__4274__a,0);
}
return cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__4273);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$map.cljs$lang$maxFixedArity = 4;
cljs$core$map.cljs$lang$applyTo = cljs$core$map__5.cljs$lang$applyTo;
cljs$core$map.cljs$core$IFn$_invoke$arity$1 = cljs$core$map__1;
cljs$core$map.cljs$core$IFn$_invoke$arity$2 = cljs$core$map__2;
cljs$core$map.cljs$core$IFn$_invoke$arity$3 = cljs$core$map__3;
cljs$core$map.cljs$core$IFn$_invoke$arity$4 = cljs$core$map__4;
cljs$core$map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$map;
})()
;
/**
 * Returns a lazy sequence of the first n items in coll, or all items if
 * there are fewer than n.  Returns a stateful transducer when
 * no collection is provided.
 */
cljs.core.take = (function() {
var cljs$core$take = null;
var cljs$core$take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__4283 = null;
var G__4283__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__4283__1 = (function (result){
var G__4280 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__4280) : rf.call(null,G__4280));
});
var G__4283__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__4281 = result;
var G__4282 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__4281,G__4282) : rf.call(null,G__4281,G__4282));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__4283 = function(result,input){
switch(arguments.length){
case 0:
return G__4283__0.call(this);
case 1:
return G__4283__1.call(this,result);
case 2:
return G__4283__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4283.cljs$core$IFn$_invoke$arity$0 = G__4283__0;
G__4283.cljs$core$IFn$_invoke$arity$1 = G__4283__1;
G__4283.cljs$core$IFn$_invoke$arity$2 = G__4283__2;
return G__4283;
})()
;})(na))
});
});
var cljs$core$take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),cljs$core$take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
cljs$core$take = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$take__1.call(this,n);
case 2:
return cljs$core$take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take.cljs$core$IFn$_invoke$arity$1 = cljs$core$take__1;
cljs$core$take.cljs$core$IFn$_invoke$arity$2 = cljs$core$take__2;
return cljs$core$take;
})()
;
/**
 * Returns a lazy sequence of all but the first n items in coll.
 * Returns a stateful transducer when no collection is provided.
 */
cljs.core.drop = (function() {
var cljs$core$drop = null;
var cljs$core$drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__4290 = null;
var G__4290__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__4290__1 = (function (result){
var G__4287 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__4287) : rf.call(null,G__4287));
});
var G__4290__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__4288 = result;
var G__4289 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__4288,G__4289) : rf.call(null,G__4288,G__4289));
}
});
G__4290 = function(result,input){
switch(arguments.length){
case 0:
return G__4290__0.call(this);
case 1:
return G__4290__1.call(this,result);
case 2:
return G__4290__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4290.cljs$core$IFn$_invoke$arity$0 = G__4290__0;
G__4290.cljs$core$IFn$_invoke$arity$1 = G__4290__1;
G__4290.cljs$core$IFn$_invoke$arity$2 = G__4290__2;
return G__4290;
})()
;})(na))
});
});
var cljs$core$drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__4291 = (n__$1 - (1));
var G__4292 = cljs.core.rest(s);
n__$1 = G__4291;
coll__$1 = G__4292;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
cljs$core$drop = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$drop__1.call(this,n);
case 2:
return cljs$core$drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop__1;
cljs$core$drop.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop__2;
return cljs$core$drop;
})()
;
/**
 * Return a lazy sequence of all but the last n (default 1) items in coll
 */
cljs.core.drop_last = (function() {
var cljs$core$drop_last = null;
var cljs$core$drop_last__1 = (function (s){
return cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var cljs$core$drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
cljs$core$drop_last = function(n,s){
switch(arguments.length){
case 1:
return cljs$core$drop_last__1.call(this,n);
case 2:
return cljs$core$drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop_last.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_last__1;
cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_last__2;
return cljs$core$drop_last;
})()
;
/**
 * Returns a seq of the last n items in coll.  Depending on the type
 * of coll may be no better than linear time.  For vectors, see also subvec.
 */
cljs.core.take_last = (function cljs$core$take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__4295 = cljs.core.next(s);
var G__4296 = cljs.core.next(lead);
s = G__4295;
lead = G__4296;
continue;
} else {
return s;
}
break;
}
});
/**
 * Returns a lazy sequence of the items in coll starting from the
 * first item for which (pred item) returns logical false.  Returns a
 * stateful transducer when no collection is provided.
 */
cljs.core.drop_while = (function() {
var cljs$core$drop_while = null;
var cljs$core$drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__4309 = null;
var G__4309__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__4309__1 = (function (result){
var G__4303 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__4303) : rf.call(null,G__4303));
});
var G__4309__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__10815__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__10815__auto__)){
var G__4304 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__4304) : pred.call(null,G__4304));
} else {
return and__10815__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__4305 = result;
var G__4306 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__4305,G__4306) : rf.call(null,G__4305,G__4306));
}
});
G__4309 = function(result,input){
switch(arguments.length){
case 0:
return G__4309__0.call(this);
case 1:
return G__4309__1.call(this,result);
case 2:
return G__4309__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4309.cljs$core$IFn$_invoke$arity$0 = G__4309__0;
G__4309.cljs$core$IFn$_invoke$arity$1 = G__4309__1;
G__4309.cljs$core$IFn$_invoke$arity$2 = G__4309__2;
return G__4309;
})()
;})(da))
});
});
var cljs$core$drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__10815__auto__ = s;
if(and__10815__auto__){
var G__4308 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__4308) : pred__$1.call(null,G__4308));
} else {
return and__10815__auto__;
}
})())){
var G__4310 = pred__$1;
var G__4311 = cljs.core.rest(s);
pred__$1 = G__4310;
coll__$1 = G__4311;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
cljs$core$drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$drop_while__1.call(this,pred);
case 2:
return cljs$core$drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_while__1;
cljs$core$drop_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_while__2;
return cljs$core$drop_while;
})()
;
/**
 * Returns a lazy (infinite!) sequence of repetitions of the items in coll.
 */
cljs.core.cycle = (function cljs$core$cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cljs$core$cycle(s));
} else {
return null;
}
}),null,null));
});
/**
 * Returns a vector of [(take n coll) (drop n coll)]
 */
cljs.core.split_at = (function cljs$core$split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
 * Returns a lazy (infinite!, or length n if supplied) sequence of xs.
 */
cljs.core.repeat = (function() {
var cljs$core$repeat = null;
var cljs$core$repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var cljs$core$repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
});
cljs$core$repeat = function(n,x){
switch(arguments.length){
case 1:
return cljs$core$repeat__1.call(this,n);
case 2:
return cljs$core$repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$repeat.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeat__1;
cljs$core$repeat.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeat__2;
return cljs$core$repeat;
})()
;
/**
 * Returns a lazy seq of n xs.
 */
cljs.core.replicate = (function cljs$core$replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
 * Takes a function of no args, presumably with side effects, and
 * returns an infinite (or length n if supplied) lazy sequence of calls
 * to it
 */
cljs.core.repeatedly = (function() {
var cljs$core$repeatedly = null;
var cljs$core$repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var cljs$core$repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
cljs$core$repeatedly = function(n,f){
switch(arguments.length){
case 1:
return cljs$core$repeatedly__1.call(this,n);
case 2:
return cljs$core$repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeatedly__1;
cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeatedly__2;
return cljs$core$repeatedly;
})()
;
/**
 * Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
 */
cljs.core.iterate = (function cljs$core$iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return cljs$core$iterate(f,(function (){var G__4320 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4320) : f.call(null,G__4320));
})());
}),null,null)));
});
/**
 * Returns a lazy seq of the first item in each coll, then the second etc.
 * @param {...*} var_args
 */
cljs.core.interleave = (function() {
var cljs$core$interleave = null;
var cljs$core$interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),cljs$core$interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var cljs$core$interleave__3 = (function() { 
var G__4323__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs$core$interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__4323 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__4324__i = 0, G__4324__a = new Array(arguments.length -  2);
while (G__4324__i < G__4324__a.length) {G__4324__a[G__4324__i] = arguments[G__4324__i + 2]; ++G__4324__i;}
  colls = new cljs.core.IndexedSeq(G__4324__a,0);
} 
return G__4323__delegate.call(this,c1,c2,colls);};
G__4323.cljs$lang$maxFixedArity = 2;
G__4323.cljs$lang$applyTo = (function (arglist__4325){
var c1 = cljs.core.first(arglist__4325);
arglist__4325 = cljs.core.next(arglist__4325);
var c2 = cljs.core.first(arglist__4325);
var colls = cljs.core.rest(arglist__4325);
return G__4323__delegate(c1,c2,colls);
});
G__4323.cljs$core$IFn$_invoke$arity$variadic = G__4323__delegate;
return G__4323;
})()
;
cljs$core$interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return cljs$core$interleave__2.call(this,c1,c2);
default:
var G__4326 = null;
if (arguments.length > 2) {
var G__4327__i = 0, G__4327__a = new Array(arguments.length -  2);
while (G__4327__i < G__4327__a.length) {G__4327__a[G__4327__i] = arguments[G__4327__i + 2]; ++G__4327__i;}
G__4326 = new cljs.core.IndexedSeq(G__4327__a,0);
}
return cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__4326);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$interleave.cljs$lang$maxFixedArity = 2;
cljs$core$interleave.cljs$lang$applyTo = cljs$core$interleave__3.cljs$lang$applyTo;
cljs$core$interleave.cljs$core$IFn$_invoke$arity$2 = cljs$core$interleave__2;
cljs$core$interleave.cljs$core$IFn$_invoke$arity$variadic = cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$interleave;
})()
;
/**
 * Returns a lazy seq of the elements of coll separated by sep
 */
cljs.core.interpose = (function() {
var cljs$core$interpose = null;
var cljs$core$interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__4342 = null;
var G__4342__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__4342__1 = (function (result){
var G__4335 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__4335) : rf.call(null,G__4335));
});
var G__4342__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__4336 = result;
var G__4337 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__4336,G__4337) : rf.call(null,G__4336,G__4337));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__4338 = sepr;
var G__4339 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__4338,G__4339) : rf.call(null,G__4338,G__4339));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__4340 = result;
var G__4341 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__4340,G__4341) : rf.call(null,G__4340,G__4341));
}
});
G__4342 = function(result,input){
switch(arguments.length){
case 0:
return G__4342__0.call(this);
case 1:
return G__4342__1.call(this,result);
case 2:
return G__4342__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4342.cljs$core$IFn$_invoke$arity$0 = G__4342__0;
G__4342.cljs$core$IFn$_invoke$arity$1 = G__4342__1;
G__4342.cljs$core$IFn$_invoke$arity$2 = G__4342__2;
return G__4342;
})()
;})(started))
});
});
var cljs$core$interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
cljs$core$interpose = function(sep,coll){
switch(arguments.length){
case 1:
return cljs$core$interpose__1.call(this,sep);
case 2:
return cljs$core$interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$interpose.cljs$core$IFn$_invoke$arity$1 = cljs$core$interpose__1;
cljs$core$interpose.cljs$core$IFn$_invoke$arity$2 = cljs$core$interpose__2;
return cljs$core$interpose;
})()
;
/**
 * Take a collection of collections, and return a lazy seq
 * of items from the inner collection
 */
cljs.core.flatten1 = (function cljs$core$flatten1(colls){
var cat = (function cljs$core$flatten1_$_cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
 * Returns the result of applying concat to the result of applying map
 * to f and colls.  Thus function f should return a collection. Returns
 * a transducer when no collections are provided
 * @param {...*} var_args
 */
cljs.core.mapcat = (function() {
var cljs$core$mapcat = null;
var cljs$core$mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var cljs$core$mapcat__2 = (function() { 
var G__4351__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__4351 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__4352__i = 0, G__4352__a = new Array(arguments.length -  1);
while (G__4352__i < G__4352__a.length) {G__4352__a[G__4352__i] = arguments[G__4352__i + 1]; ++G__4352__i;}
  colls = new cljs.core.IndexedSeq(G__4352__a,0);
} 
return G__4351__delegate.call(this,f,colls);};
G__4351.cljs$lang$maxFixedArity = 1;
G__4351.cljs$lang$applyTo = (function (arglist__4353){
var f = cljs.core.first(arglist__4353);
var colls = cljs.core.rest(arglist__4353);
return G__4351__delegate(f,colls);
});
G__4351.cljs$core$IFn$_invoke$arity$variadic = G__4351__delegate;
return G__4351;
})()
;
cljs$core$mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$mapcat__1.call(this,f);
default:
var G__4354 = null;
if (arguments.length > 1) {
var G__4355__i = 0, G__4355__a = new Array(arguments.length -  1);
while (G__4355__i < G__4355__a.length) {G__4355__a[G__4355__i] = arguments[G__4355__i + 1]; ++G__4355__i;}
G__4354 = new cljs.core.IndexedSeq(G__4355__a,0);
}
return cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__4354);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$mapcat.cljs$lang$maxFixedArity = 1;
cljs$core$mapcat.cljs$lang$applyTo = cljs$core$mapcat__2.cljs$lang$applyTo;
cljs$core$mapcat.cljs$core$IFn$_invoke$arity$1 = cljs$core$mapcat__1;
cljs$core$mapcat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$mapcat;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.filter = (function() {
var cljs$core$filter = null;
var cljs$core$filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__4374 = null;
var G__4374__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__4374__1 = (function (result){
var G__4368 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__4368) : rf.call(null,G__4368));
});
var G__4374__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__4369 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__4369) : pred.call(null,G__4369));
})())){
var G__4370 = result;
var G__4371 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__4370,G__4371) : rf.call(null,G__4370,G__4371));
} else {
return result;
}
});
G__4374 = function(result,input){
switch(arguments.length){
case 0:
return G__4374__0.call(this);
case 1:
return G__4374__1.call(this,result);
case 2:
return G__4374__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4374.cljs$core$IFn$_invoke$arity$0 = G__4374__0;
G__4374.cljs$core$IFn$_invoke$arity$1 = G__4374__1;
G__4374.cljs$core$IFn$_invoke$arity$2 = G__4374__2;
return G__4374;
})()
});
});
var cljs$core$filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__11242__auto___4375 = size;
var i_4376 = (0);
while(true){
if((i_4376 < n__11242__auto___4375)){
if(cljs.core.truth_((function (){var G__4372 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_4376);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__4372) : pred.call(null,G__4372));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_4376));
} else {
}

var G__4377 = (i_4376 + (1));
i_4376 = G__4377;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__4373 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__4373) : pred.call(null,G__4373));
})())){
return cljs.core.cons(f,cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
cljs$core$filter = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$filter__1.call(this,pred);
case 2:
return cljs$core$filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$filter.cljs$core$IFn$_invoke$arity$1 = cljs$core$filter__1;
cljs$core$filter.cljs$core$IFn$_invoke$arity$2 = cljs$core$filter__2;
return cljs$core$filter;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns false. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.remove = (function() {
var cljs$core$remove = null;
var cljs$core$remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var cljs$core$remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
cljs$core$remove = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$remove__1.call(this,pred);
case 2:
return cljs$core$remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$remove.cljs$core$IFn$_invoke$arity$1 = cljs$core$remove__1;
cljs$core$remove.cljs$core$IFn$_invoke$arity$2 = cljs$core$remove__2;
return cljs$core$remove;
})()
;
/**
 * Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
 * branch? must be a fn of one arg that returns true if passed a node
 * that can have children (but may not).  children must be a fn of one
 * arg that returns a sequence of the children. Will only be called on
 * nodes for which branch? returns true. Root is the root node of the
 * tree.
 */
cljs.core.tree_seq = (function cljs$core$tree_seq(branch_QMARK_,children,root){
var walk = (function cljs$core$tree_seq_$_walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__4384 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__4384) : branch_QMARK_.call(null,G__4384));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk,cljs.core.array_seq([(function (){var G__4385 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__4385) : children.call(null,G__4385));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
 * Takes any nested combination of sequential things (lists, vectors,
 * etc.) and returns their contents as a single, flat sequence.
 * (flatten nil) returns nil.
 */
cljs.core.flatten = (function cljs$core$flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__4386_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__4386_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
 * Returns a new coll consisting of to-coll with all of the items of
 * from-coll conjoined. A transducer may be supplied.
 */
cljs.core.into = (function() {
var cljs$core$into = null;
var cljs$core$into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__4389 = to;
if(G__4389){
var bit__11117__auto__ = (G__4389.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__11117__auto__) || (G__4389.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var cljs$core$into__3 = (function (to,xform,from){
if((function (){var G__4390 = to;
if(G__4390){
var bit__11117__auto__ = (G__4390.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__11117__auto__) || (G__4390.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
cljs$core$into = function(to,xform,from){
switch(arguments.length){
case 2:
return cljs$core$into__2.call(this,to,xform);
case 3:
return cljs$core$into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$into.cljs$core$IFn$_invoke$arity$2 = cljs$core$into__2;
cljs$core$into.cljs$core$IFn$_invoke$arity$3 = cljs$core$into__3;
return cljs$core$into;
})()
;
/**
 * Returns a vector consisting of the result of applying f to the
 * set of first items of each coll, followed by applying f to the set
 * of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments.
 * @param {...*} var_args
 */
cljs.core.mapv = (function() {
var cljs$core$mapv = null;
var cljs$core$mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__4392 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4392) : f.call(null,G__4392));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var cljs$core$mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var cljs$core$mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var cljs$core$mapv__5 = (function() { 
var G__4393__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__4393 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__4394__i = 0, G__4394__a = new Array(arguments.length -  4);
while (G__4394__i < G__4394__a.length) {G__4394__a[G__4394__i] = arguments[G__4394__i + 4]; ++G__4394__i;}
  colls = new cljs.core.IndexedSeq(G__4394__a,0);
} 
return G__4393__delegate.call(this,f,c1,c2,c3,colls);};
G__4393.cljs$lang$maxFixedArity = 4;
G__4393.cljs$lang$applyTo = (function (arglist__4395){
var f = cljs.core.first(arglist__4395);
arglist__4395 = cljs.core.next(arglist__4395);
var c1 = cljs.core.first(arglist__4395);
arglist__4395 = cljs.core.next(arglist__4395);
var c2 = cljs.core.first(arglist__4395);
arglist__4395 = cljs.core.next(arglist__4395);
var c3 = cljs.core.first(arglist__4395);
var colls = cljs.core.rest(arglist__4395);
return G__4393__delegate(f,c1,c2,c3,colls);
});
G__4393.cljs$core$IFn$_invoke$arity$variadic = G__4393__delegate;
return G__4393;
})()
;
cljs$core$mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return cljs$core$mapv__2.call(this,f,c1);
case 3:
return cljs$core$mapv__3.call(this,f,c1,c2);
case 4:
return cljs$core$mapv__4.call(this,f,c1,c2,c3);
default:
var G__4396 = null;
if (arguments.length > 4) {
var G__4397__i = 0, G__4397__a = new Array(arguments.length -  4);
while (G__4397__i < G__4397__a.length) {G__4397__a[G__4397__i] = arguments[G__4397__i + 4]; ++G__4397__i;}
G__4396 = new cljs.core.IndexedSeq(G__4397__a,0);
}
return cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__4396);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$mapv.cljs$lang$maxFixedArity = 4;
cljs$core$mapv.cljs$lang$applyTo = cljs$core$mapv__5.cljs$lang$applyTo;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$2 = cljs$core$mapv__2;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$3 = cljs$core$mapv__3;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$4 = cljs$core$mapv__4;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$mapv;
})()
;
/**
 * Returns a vector of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 */
cljs.core.filterv = (function cljs$core$filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__4399 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__4399) : pred.call(null,G__4399));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
 * Returns a lazy sequence of lists of n items each, at offsets step
 * apart. If step is not supplied, defaults to n, i.e. the partitions
 * do not overlap. If a pad collection is supplied, use its elements as
 * necessary to complete last partition up to n items. In case there are
 * not enough padding elements, return a partition with less than n items.
 */
cljs.core.partition = (function() {
var cljs$core$partition = null;
var cljs$core$partition__2 = (function (n,coll){
return cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var cljs$core$partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var cljs$core$partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs$core$partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
cljs$core$partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return cljs$core$partition__2.call(this,n,step);
case 3:
return cljs$core$partition__3.call(this,n,step,pad);
case 4:
return cljs$core$partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition__2;
cljs$core$partition.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition__3;
cljs$core$partition.cljs$core$IFn$_invoke$arity$4 = cljs$core$partition__4;
return cljs$core$partition;
})()
;
/**
 * Returns the value in a nested associative structure,
 * where ks is a sequence of keys. Returns nil if the key is not present,
 * or the not-found value if supplied.
 */
cljs.core.get_in = (function() {
var cljs$core$get_in = null;
var cljs$core$get_in__2 = (function (m,ks){
return cljs$core$get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var cljs$core$get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__4414 = m__$1;
if(G__4414){
var bit__11120__auto__ = (G__4414.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__11120__auto__) || (G__4414.cljs$core$ILookup$)){
return true;
} else {
if((!G__4414.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__4414);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__4414);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__4415 = sentinel;
var G__4416 = m__$2;
var G__4417 = cljs.core.next(ks__$1);
sentinel = G__4415;
m__$1 = G__4416;
ks__$1 = G__4417;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
cljs$core$get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return cljs$core$get_in__2.call(this,m,ks);
case 3:
return cljs$core$get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$get_in.cljs$core$IFn$_invoke$arity$2 = cljs$core$get_in__2;
cljs$core$get_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$get_in__3;
return cljs$core$get_in;
})()
;
/**
 * Associates a value in a nested associative structure, where ks is a
 * sequence of keys and v is the new value and returns a new nested structure.
 * If any levels do not exist, hash-maps will be created.
 */
cljs.core.assoc_in = (function cljs$core$assoc_in(m,p__4418,v){
var vec__4423 = p__4418;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4423,(0),null);
var ks = cljs.core.nthnext(vec__4423,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
 * 'Updates' a value in a nested associative structure, where ks is a
 * sequence of keys and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * nested structure.  If any levels do not exist, hash-maps will be
 * created.
 * @param {...*} var_args
 */
cljs.core.update_in = (function() {
var cljs$core$update_in = null;
var cljs$core$update_in__3 = (function (m,p__4424,f){
var vec__4462 = p__4424;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4462,(0),null);
var ks = cljs.core.nthnext(vec__4462,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__4463 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4463) : f.call(null,G__4463));
})());
}
});
var cljs$core$update_in__4 = (function (m,p__4425,f,a){
var vec__4464 = p__4425;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4464,(0),null);
var ks = cljs.core.nthnext(vec__4464,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__4465 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__4466 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4465,G__4466) : f.call(null,G__4465,G__4466));
})());
}
});
var cljs$core$update_in__5 = (function (m,p__4426,f,a,b){
var vec__4467 = p__4426;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4467,(0),null);
var ks = cljs.core.nthnext(vec__4467,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__4468 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__4469 = a;
var G__4470 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4468,G__4469,G__4470) : f.call(null,G__4468,G__4469,G__4470));
})());
}
});
var cljs$core$update_in__6 = (function (m,p__4427,f,a,b,c){
var vec__4471 = p__4427;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4471,(0),null);
var ks = cljs.core.nthnext(vec__4471,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__4472 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__4473 = a;
var G__4474 = b;
var G__4475 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__4472,G__4473,G__4474,G__4475) : f.call(null,G__4472,G__4473,G__4474,G__4475));
})());
}
});
var cljs$core$update_in__7 = (function() { 
var G__4477__delegate = function (m,p__4428,f,a,b,c,args){
var vec__4476 = p__4428;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4476,(0),null);
var ks = cljs.core.nthnext(vec__4476,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs$core$update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__4477 = function (m,p__4428,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__4478__i = 0, G__4478__a = new Array(arguments.length -  6);
while (G__4478__i < G__4478__a.length) {G__4478__a[G__4478__i] = arguments[G__4478__i + 6]; ++G__4478__i;}
  args = new cljs.core.IndexedSeq(G__4478__a,0);
} 
return G__4477__delegate.call(this,m,p__4428,f,a,b,c,args);};
G__4477.cljs$lang$maxFixedArity = 6;
G__4477.cljs$lang$applyTo = (function (arglist__4479){
var m = cljs.core.first(arglist__4479);
arglist__4479 = cljs.core.next(arglist__4479);
var p__4428 = cljs.core.first(arglist__4479);
arglist__4479 = cljs.core.next(arglist__4479);
var f = cljs.core.first(arglist__4479);
arglist__4479 = cljs.core.next(arglist__4479);
var a = cljs.core.first(arglist__4479);
arglist__4479 = cljs.core.next(arglist__4479);
var b = cljs.core.first(arglist__4479);
arglist__4479 = cljs.core.next(arglist__4479);
var c = cljs.core.first(arglist__4479);
var args = cljs.core.rest(arglist__4479);
return G__4477__delegate(m,p__4428,f,a,b,c,args);
});
G__4477.cljs$core$IFn$_invoke$arity$variadic = G__4477__delegate;
return G__4477;
})()
;
cljs$core$update_in = function(m,p__4428,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return cljs$core$update_in__3.call(this,m,p__4428,f);
case 4:
return cljs$core$update_in__4.call(this,m,p__4428,f,a);
case 5:
return cljs$core$update_in__5.call(this,m,p__4428,f,a,b);
case 6:
return cljs$core$update_in__6.call(this,m,p__4428,f,a,b,c);
default:
var G__4480 = null;
if (arguments.length > 6) {
var G__4481__i = 0, G__4481__a = new Array(arguments.length -  6);
while (G__4481__i < G__4481__a.length) {G__4481__a[G__4481__i] = arguments[G__4481__i + 6]; ++G__4481__i;}
G__4480 = new cljs.core.IndexedSeq(G__4481__a,0);
}
return cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__4428,f,a,b,c, G__4480);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$update_in.cljs$lang$maxFixedArity = 6;
cljs$core$update_in.cljs$lang$applyTo = cljs$core$update_in__7.cljs$lang$applyTo;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$update_in__3;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$4 = cljs$core$update_in__4;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$5 = cljs$core$update_in__5;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$6 = cljs$core$update_in__6;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$update_in;
})()
;
/**
 * 'Updates' a value in an associative structure, where k is a
 * key and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * structure.  If the key does not exist, nil is passed as the old value.
 * @param {...*} var_args
 */
cljs.core.update = (function() {
var cljs$core$update = null;
var cljs$core$update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__4492 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4492) : f.call(null,G__4492));
})());
});
var cljs$core$update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__4493 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__4494 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4493,G__4494) : f.call(null,G__4493,G__4494));
})());
});
var cljs$core$update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__4495 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__4496 = x;
var G__4497 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4495,G__4496,G__4497) : f.call(null,G__4495,G__4496,G__4497));
})());
});
var cljs$core$update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__4498 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__4499 = x;
var G__4500 = y;
var G__4501 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__4498,G__4499,G__4500,G__4501) : f.call(null,G__4498,G__4499,G__4500,G__4501));
})());
});
var cljs$core$update__7 = (function() { 
var G__4502__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__4502 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__4503__i = 0, G__4503__a = new Array(arguments.length -  6);
while (G__4503__i < G__4503__a.length) {G__4503__a[G__4503__i] = arguments[G__4503__i + 6]; ++G__4503__i;}
  more = new cljs.core.IndexedSeq(G__4503__a,0);
} 
return G__4502__delegate.call(this,m,k,f,x,y,z,more);};
G__4502.cljs$lang$maxFixedArity = 6;
G__4502.cljs$lang$applyTo = (function (arglist__4504){
var m = cljs.core.first(arglist__4504);
arglist__4504 = cljs.core.next(arglist__4504);
var k = cljs.core.first(arglist__4504);
arglist__4504 = cljs.core.next(arglist__4504);
var f = cljs.core.first(arglist__4504);
arglist__4504 = cljs.core.next(arglist__4504);
var x = cljs.core.first(arglist__4504);
arglist__4504 = cljs.core.next(arglist__4504);
var y = cljs.core.first(arglist__4504);
arglist__4504 = cljs.core.next(arglist__4504);
var z = cljs.core.first(arglist__4504);
var more = cljs.core.rest(arglist__4504);
return G__4502__delegate(m,k,f,x,y,z,more);
});
G__4502.cljs$core$IFn$_invoke$arity$variadic = G__4502__delegate;
return G__4502;
})()
;
cljs$core$update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return cljs$core$update__3.call(this,m,k,f);
case 4:
return cljs$core$update__4.call(this,m,k,f,x);
case 5:
return cljs$core$update__5.call(this,m,k,f,x,y);
case 6:
return cljs$core$update__6.call(this,m,k,f,x,y,z);
default:
var G__4505 = null;
if (arguments.length > 6) {
var G__4506__i = 0, G__4506__a = new Array(arguments.length -  6);
while (G__4506__i < G__4506__a.length) {G__4506__a[G__4506__i] = arguments[G__4506__i + 6]; ++G__4506__i;}
G__4505 = new cljs.core.IndexedSeq(G__4506__a,0);
}
return cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__4505);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$update.cljs$lang$maxFixedArity = 6;
cljs$core$update.cljs$lang$applyTo = cljs$core$update__7.cljs$lang$applyTo;
cljs$core$update.cljs$core$IFn$_invoke$arity$3 = cljs$core$update__3;
cljs$core$update.cljs$core$IFn$_invoke$arity$4 = cljs$core$update__4;
cljs$core$update.cljs$core$IFn$_invoke$arity$5 = cljs$core$update__5;
cljs$core$update.cljs$core$IFn$_invoke$arity$6 = cljs$core$update__6;
cljs$core$update.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function cljs$core$__GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function cljs$core$pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function cljs$core$pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function cljs$core$pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function cljs$core$pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function cljs$core$tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function cljs$core$new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__4507 = (ll - (5));
var G__4508 = r;
ll = G__4507;
ret = G__4508;
continue;
}
break;
}
});
cljs.core.push_tail = (function cljs$core$push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = cljs$core$push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function cljs$core$vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function cljs$core$first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__4513 = cljs.core.pv_aget(node,(0));
var G__4514 = (level - (5));
node = G__4513;
level = G__4514;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function cljs$core$unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__4515 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__4516 = (level - (5));
node = G__4515;
level = G__4516;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function cljs$core$array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function cljs$core$do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,cljs$core$do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function cljs$core$pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function cljs$core$__GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function cljs$core$ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__4526 = init__$2;
var G__4527 = (j + i);
var G__4528 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4526,G__4527,G__4528) : f.call(null,G__4526,G__4527,G__4528));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__4539 = (j + (1));
var G__4540 = init__$3;
j = G__4539;
init__$2 = G__4540;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__4529 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4529) : cljs.core.deref.call(null,G__4529));
} else {
var G__4541 = (i + len);
var G__4542 = init__$2;
i = G__4541;
init__$1 = G__4542;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__10916__auto__ = self__.__hash;
if(!((h__10916__auto__ == null))){
return h__10916__auto__;
} else {
var h__10916__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__10916__auto____$1;

return h__10916__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__4530 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__4530) : cljs.core.tv_editable_root.call(null,G__4530));
})(),(function (){var G__4531 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__4531) : cljs.core.tv_editable_tail.call(null,G__4531));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__4532 = init__$2;
var G__4533 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4532,G__4533) : f.call(null,G__4532,G__4533));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__4543 = (j + (1));
var G__4544 = init__$3;
j = G__4543;
init__$2 = G__4544;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__4534 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4534) : cljs.core.deref.call(null,G__4534));
} else {
var G__4545 = (i + len);
var G__4546 = init__$2;
i = G__4545;
init__$1 = G__4546;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__4535 = coll__$1;
var G__4536 = cljs.core.first_array_for_longvec(coll__$1);
var G__4537 = (0);
var G__4538 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__4535,G__4536,G__4537,G__4538) : cljs.core.chunked_seq.call(null,G__4535,G__4536,G__4537,G__4538));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__11242__auto___4547 = len;
var i_4548 = (0);
while(true){
if((i_4548 < n__11242__auto___4547)){
(new_tail[i_4548] = (self__.tail[i_4548]));

var G__4549 = (i_4548 + (1));
i_4548 = G__4549;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__4550 = null;
var G__4550__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__4550__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__4550 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__4550__2.call(this,self__,k);
case 3:
return G__4550__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4550.cljs$core$IFn$_invoke$arity$2 = G__4550__2;
G__4550.cljs$core$IFn$_invoke$arity$3 = G__4550__3;
return G__4550;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args4525){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args4525)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function cljs$core$__GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__4551 = (i + (1));
var G__4552 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__4551;
out = G__4552;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));
/**
 * Creates a new vector containing the contents of coll. JavaScript arrays
 * will be aliased and should not be modified.
 */
cljs.core.vec = (function cljs$core$vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
 * Creates a new vector containing the args.
 * @param {...*} var_args
 */
cljs.core.vector = (function() { 
var cljs$core$vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var cljs$core$vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__4553__i = 0, G__4553__a = new Array(arguments.length -  0);
while (G__4553__i < G__4553__a.length) {G__4553__a[G__4553__i] = arguments[G__4553__i + 0]; ++G__4553__i;}
  args = new cljs.core.IndexedSeq(G__4553__a,0);
} 
return cljs$core$vector__delegate.call(this,args);};
cljs$core$vector.cljs$lang$maxFixedArity = 0;
cljs$core$vector.cljs$lang$applyTo = (function (arglist__4554){
var args = cljs.core.seq(arglist__4554);
return cljs$core$vector__delegate(args);
});
cljs$core$vector.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vector__delegate;
return cljs$core$vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__4555 = self__.vec;
var G__4556 = self__.node;
var G__4557 = self__.i;
var G__4558 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__4555,G__4556,G__4557,G__4558) : cljs.core.chunked_seq.call(null,G__4555,G__4556,G__4557,G__4558));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__10916__auto__ = self__.__hash;
if(!((h__10916__auto__ == null))){
return h__10916__auto__;
} else {
var h__10916__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__10916__auto____$1;

return h__10916__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__4559 = self__.vec;
var G__4560 = (self__.i + self__.off);
var G__4561 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__4559,G__4560,G__4561) : cljs.core.subvec.call(null,G__4559,G__4560,G__4561));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__4562 = self__.vec;
var G__4563 = (self__.i + self__.off);
var G__4564 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__4562,G__4563,G__4564) : cljs.core.subvec.call(null,G__4562,G__4563,G__4564));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__4565 = self__.vec;
var G__4566 = self__.node;
var G__4567 = self__.i;
var G__4568 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__4565,G__4566,G__4567,G__4568) : cljs.core.chunked_seq.call(null,G__4565,G__4566,G__4567,G__4568));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__4569 = self__.vec;
var G__4570 = cljs.core.unchecked_array_for(self__.vec,end);
var G__4571 = end;
var G__4572 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__4569,G__4570,G__4571,G__4572) : cljs.core.chunked_seq.call(null,G__4569,G__4570,G__4571,G__4572));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__4573 = self__.vec;
var G__4574 = self__.node;
var G__4575 = self__.i;
var G__4576 = self__.off;
var G__4577 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__4573,G__4574,G__4575,G__4576,G__4577) : cljs.core.chunked_seq.call(null,G__4573,G__4574,G__4575,G__4576,G__4577));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__4578 = self__.vec;
var G__4579 = cljs.core.unchecked_array_for(self__.vec,end);
var G__4580 = end;
var G__4581 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__4578,G__4579,G__4580,G__4581) : cljs.core.chunked_seq.call(null,G__4578,G__4579,G__4580,G__4581));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function cljs$core$__GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));
cljs.core.chunked_seq = (function() {
var cljs$core$chunked_seq = null;
var cljs$core$chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var cljs$core$chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var cljs$core$chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
cljs$core$chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return cljs$core$chunked_seq__3.call(this,vec,node,i);
case 4:
return cljs$core$chunked_seq__4.call(this,vec,node,i,off);
case 5:
return cljs$core$chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$chunked_seq__3;
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$chunked_seq__4;
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$5 = cljs$core$chunked_seq__5;
return cljs$core$chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__4583 = self__.meta;
var G__4584 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__4585 = self__.start;
var G__4586 = (function (){var x__10892__auto__ = self__.end;
var y__10893__auto__ = (v_pos + (1));
return ((x__10892__auto__ > y__10893__auto__) ? x__10892__auto__ : y__10893__auto__);
})();
var G__4587 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__4583,G__4584,G__4585,G__4586,G__4587) : cljs.core.build_subvec.call(null,G__4583,G__4584,G__4585,G__4586,G__4587));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__4588 = self__.meta;
var G__4589 = self__.v;
var G__4590 = self__.start;
var G__4591 = (self__.end - (1));
var G__4592 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__4588,G__4589,G__4590,G__4591,G__4592) : cljs.core.build_subvec.call(null,G__4588,G__4589,G__4590,G__4591,G__4592));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__10916__auto__ = self__.__hash;
if(!((h__10916__auto__ == null))){
return h__10916__auto__;
} else {
var h__10916__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__10916__auto____$1;

return h__10916__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function cljs$core$subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return cljs$core$subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__4594 = meta__$1;
var G__4595 = self__.v;
var G__4596 = self__.start;
var G__4597 = self__.end;
var G__4598 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__4594,G__4595,G__4596,G__4597,G__4598) : cljs.core.build_subvec.call(null,G__4594,G__4595,G__4596,G__4597,G__4598));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__4599 = self__.meta;
var G__4600 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__4601 = self__.start;
var G__4602 = (self__.end + (1));
var G__4603 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__4599,G__4600,G__4601,G__4602,G__4603) : cljs.core.build_subvec.call(null,G__4599,G__4600,G__4601,G__4602,G__4603));
});

cljs.core.Subvec.prototype.call = (function() {
var G__4604 = null;
var G__4604__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__4604__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__4604 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__4604__2.call(this,self__,k);
case 3:
return G__4604__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4604.cljs$core$IFn$_invoke$arity$2 = G__4604__2;
G__4604.cljs$core$IFn$_invoke$arity$3 = G__4604__3;
return G__4604;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args4582){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args4582)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function cljs$core$__GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));
cljs.core.build_subvec = (function cljs$core$build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__4605 = meta;
var G__4606 = v.v;
var G__4607 = (v.start + start);
var G__4608 = (v.start + end);
var G__4609 = __hash;
meta = G__4605;
v = G__4606;
start = G__4607;
end = G__4608;
__hash = G__4609;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
 * Returns a persistent vector of the items in vector from
 * start (inclusive) to end (exclusive).  If end is not supplied,
 * defaults to (count vector). This operation is O(1) and very fast, as
 * the resulting vector shares structure with the original and no
 * trimming is done.
 */
cljs.core.subvec = (function() {
var cljs$core$subvec = null;
var cljs$core$subvec__2 = (function (v,start){
return cljs$core$subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var cljs$core$subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
cljs$core$subvec = function(v,start,end){
switch(arguments.length){
case 2:
return cljs$core$subvec__2.call(this,v,start);
case 3:
return cljs$core$subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subvec.cljs$core$IFn$_invoke$arity$2 = cljs$core$subvec__2;
cljs$core$subvec.cljs$core$IFn$_invoke$arity$3 = cljs$core$subvec__3;
return cljs$core$subvec;
})()
;
cljs.core.tv_ensure_editable = (function cljs$core$tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function cljs$core$tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj4616 = {};
return obj4616;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function cljs$core$tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function cljs$core$tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return cljs$core$tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function cljs$core$tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function cljs$core$unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__4624 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__4625 = (level - (5));
node = G__4624;
level = G__4625;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__4629 = null;
var G__4629__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__4629__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__4629 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__4629__2.call(this,self__,k);
case 3:
return G__4629__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4629.cljs$core$IFn$_invoke$arity$2 = G__4629__2;
G__4629.cljs$core$IFn$_invoke$arity$3 = G__4629__3;
return G__4629;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args4626){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args4626)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function cljs$core$go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,cljs$core$go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function cljs$core$__GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__10916__auto__ = self__.__hash;
if(!((h__10916__auto__ == null))){
return h__10916__auto__;
} else {
var h__10916__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__10916__auto____$1;

return h__10916__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function cljs$core$__GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__10916__auto__ = self__.__hash;
if(!((h__10916__auto__ == null))){
return h__10916__auto__;
} else {
var h__10916__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__10916__auto____$1;

return h__10916__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__10823__auto__ = self__.front;
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__10823__auto__ = self__.rear;
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function cljs$core$__GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function cljs$core$__GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
 * Assumes y is a map. Returns true if x equals y, otherwise returns
 * false.
 */
cljs.core.equiv_map = (function cljs$core$equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function cljs$core$scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__4630 = (i + incr);
i = G__4630;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function cljs$core$obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function cljs$core$obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__4631 = (i + (1));
var G__4632 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__4631;
out = G__4632;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function cljs$core$obj_clone(obj,ks){
var new_obj = (function (){var obj4636 = {};
return obj4636;
})();
var l = ks.length;
var i_4637 = (0);
while(true){
if((i_4637 < l)){
var k_4638 = (ks[i_4637]);
(new_obj[k_4638] = (obj[k_4638]));

var G__4639 = (i_4637 + (1));
i_4637 = G__4639;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__10815__auto__ = (function (){var G__4643 = k;
return goog.isString(G__4643);
})();
if(cljs.core.truth_(and__10815__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__10815__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__4644 = init__$1;
var G__4645 = k;
var G__4646 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4644,G__4645,G__4646) : f.call(null,G__4644,G__4645,G__4646));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__4647 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4647) : cljs.core.deref.call(null,G__4647));
} else {
var G__4653 = cljs.core.rest(keys__$1);
var G__4654 = init__$2;
keys__$1 = G__4653;
init__$1 = G__4654;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__10916__auto__ = self__.__hash;
if(!((h__10916__auto__ == null))){
return h__10916__auto__;
} else {
var h__10916__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__10916__auto____$1;

return h__10916__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__10815__auto__ = (function (){var G__4649 = k;
return goog.isString(G__4649);
})();
if(cljs.core.truth_(and__10815__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__10815__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__4650 = k;
return goog.isString(G__4650);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__10815__auto__ = (function (){var G__4652 = k;
return goog.isString(G__4652);
})();
if(cljs.core.truth_(and__10815__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__10815__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__4640_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__4640_SHARP_,(self__.strobj[p1__4640_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__4655 = null;
var G__4655__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__4655__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__4655 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__4655__2.call(this,self__,k);
case 3:
return G__4655__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4655.cljs$core$IFn$_invoke$arity$2 = G__4655__2;
G__4655.cljs$core$IFn$_invoke$arity$3 = G__4655__3;
return G__4655;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args4641){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args4641)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function cljs$core$__GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj4657 = {};
return obj4657;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__4658 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4658,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4658,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function cljs$core$__GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function cljs$core$es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function cljs$core$__GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function cljs$core$es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function cljs$core$array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__4659 = (i + (2));
i = G__4659;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function cljs$core$array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__4660 = (i + (2));
i = G__4660;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function cljs$core$array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__4661 = (i + (2));
i = G__4661;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function cljs$core$array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__4662 = (i + (2));
i = G__4662;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function cljs$core$array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__4663 = (i + (2));
i = G__4663;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function cljs$core$array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__10823__auto__ = (function (){var G__4667 = k;
return goog.isString(G__4667);
})();
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function cljs$core$array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_4668 = (0);
while(true){
if((i_4668 < l)){
(narr[i_4668] = (arr[i_4668]));

var G__4669 = (i_4668 + (1));
i_4668 = G__4669;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function cljs$core$__GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));
cljs.core.persistent_array_map_seq = (function cljs$core$persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function cljs$core$__GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__4671 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__4671) : cljs.core.keys.call(null,G__4671));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__4672 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__4672) : cljs.core.vals.call(null,G__4672));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__4673 = cljs.core.seq(coll);
var chunk__4674 = null;
var count__4675 = (0);
var i__4676 = (0);
while(true){
if((i__4676 < count__4675)){
var vec__4677 = chunk__4674.cljs$core$IIndexed$_nth$arity$2(null,i__4676);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4677,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4677,(1),null);
var G__4678_4691 = v;
var G__4679_4692 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4678_4691,G__4679_4692) : f.call(null,G__4678_4691,G__4679_4692));

var G__4693 = seq__4673;
var G__4694 = chunk__4674;
var G__4695 = count__4675;
var G__4696 = (i__4676 + (1));
seq__4673 = G__4693;
chunk__4674 = G__4694;
count__4675 = G__4695;
i__4676 = G__4696;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__4673);
if(temp__4126__auto__){
var seq__4673__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__4673__$1)){
var c__11190__auto__ = cljs.core.chunk_first(seq__4673__$1);
var G__4697 = cljs.core.chunk_rest(seq__4673__$1);
var G__4698 = c__11190__auto__;
var G__4699 = cljs.core.count(c__11190__auto__);
var G__4700 = (0);
seq__4673 = G__4697;
chunk__4674 = G__4698;
count__4675 = G__4699;
i__4676 = G__4700;
continue;
} else {
var vec__4680 = cljs.core.first(seq__4673__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4680,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4680,(1),null);
var G__4681_4701 = v;
var G__4682_4702 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4681_4701,G__4682_4702) : f.call(null,G__4681_4701,G__4682_4702));

var G__4703 = cljs.core.next(seq__4673__$1);
var G__4704 = null;
var G__4705 = (0);
var G__4706 = (0);
seq__4673 = G__4703;
chunk__4674 = G__4704;
count__4675 = G__4705;
i__4676 = G__4706;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__4683 = init__$1;
var G__4684 = (self__.arr[i]);
var G__4685 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4683,G__4684,G__4685) : f.call(null,G__4683,G__4684,G__4685));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__4686 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4686) : cljs.core.deref.call(null,G__4686));
} else {
var G__4707 = (i + (2));
var G__4708 = init__$2;
i = G__4707;
init__$1 = G__4708;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__10916__auto__ = self__.__hash;
if(!((h__10916__auto__ == null))){
return h__10916__auto__;
} else {
var h__10916__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__10916__auto____$1;

return h__10916__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__4687 = other;
if(G__4687){
var bit__11117__auto__ = (G__4687.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__11117__auto__) || (G__4687.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__4709 = (i + (2));
i = G__4709;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj4689 = {};
return obj4689;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__4710 = (s + (2));
var G__4711 = d;
s = G__4710;
d = G__4711;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__4712 = (s + (2));
var G__4713 = (d + (2));
s = G__4712;
d = G__4713;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__4690 = cljs.core.aclone(self__.arr);
(G__4690[(idx + (1))] = v);

return G__4690;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__4714 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__4715 = cljs.core.next(es);
ret = G__4714;
es = G__4715;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__4716 = null;
var G__4716__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__4716__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__4716 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__4716__2.call(this,self__,k);
case 3:
return G__4716__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4716.cljs$core$IFn$_invoke$arity$2 = G__4716__2;
G__4716.cljs$core$IFn$_invoke$arity$3 = G__4716__3;
return G__4716;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args4670){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args4670)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function cljs$core$__GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__4717 = (i + (2));
var G__4718 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__4717;
ret = G__4718;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__4719_4727 = self__.arr;
G__4719_4727.pop();

G__4719_4727.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__4720 = self__.len;
var G__4721 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__4720,G__4721) : cljs.core.array__GT_transient_hash_map.call(null,G__4720,G__4721));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__4722 = o;
if(G__4722){
var bit__11120__auto__ = (G__4722.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__11120__auto__) || (G__4722.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__4722.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__4722);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__4722);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__4723 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__4723) : cljs.core.key.call(null,G__4723));
})(),(function (){var G__4724 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__4724) : cljs.core.val.call(null,G__4724));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__4728 = cljs.core.next(es);
var G__4729 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__4725 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__4725) : cljs.core.key.call(null,G__4725));
})(),(function (){var G__4726 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__4726) : cljs.core.val.call(null,G__4726));
})());
es = G__4728;
tcoll__$2 = G__4729;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function cljs$core$__GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function cljs$core$array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__4730 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__4731 = (i + (2));
out = G__4730;
i = G__4731;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function cljs$core$__GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function cljs$core$key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function cljs$core$mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var cljs$core$clone_and_set = null;
var cljs$core$clone_and_set__3 = (function (arr,i,a){
var G__4734 = cljs.core.aclone(arr);
(G__4734[i] = a);

return G__4734;
});
var cljs$core$clone_and_set__5 = (function (arr,i,a,j,b){
var G__4735 = cljs.core.aclone(arr);
(G__4735[i] = a);

(G__4735[j] = b);

return G__4735;
});
cljs$core$clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return cljs$core$clone_and_set__3.call(this,arr,i,a);
case 5:
return cljs$core$clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$3 = cljs$core$clone_and_set__3;
cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$5 = cljs$core$clone_and_set__5;
return cljs$core$clone_and_set;
})()
;
cljs.core.remove_pair = (function cljs$core$remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function cljs$core$bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function cljs$core$bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var cljs$core$edit_and_set = null;
var cljs$core$edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var cljs$core$edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
cljs$core$edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return cljs$core$edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return cljs$core$edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$4 = cljs$core$edit_and_set__4;
cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$6 = cljs$core$edit_and_set__6;
return cljs$core$edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function cljs$core$inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__4740 = init__$1;
var G__4741 = k;
var G__4742 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4740,G__4741,G__4742) : f.call(null,G__4740,G__4741,G__4742));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__4743 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4743) : cljs.core.deref.call(null,G__4743));
} else {
var G__4744 = (i + (2));
var G__4745 = init__$2;
i = G__4744;
init__$1 = G__4745;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__4746 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__4746) : cljs.core.create_inode_seq.call(null,G__4746));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_4760 = (0);
var j_4761 = (0);
while(true){
if((i_4760 < (32))){
if((((self__.bitmap >>> i_4760) & (1)) === (0))){
var G__4762 = (i_4760 + (1));
var G__4763 = j_4761;
i_4760 = G__4762;
j_4761 = G__4763;
continue;
} else {
(nodes[i_4760] = ((!(((self__.arr[j_4761]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_4761])),(self__.arr[j_4761]),(self__.arr[(j_4761 + (1))]),added_leaf_QMARK_):(self__.arr[(j_4761 + (1))])));

var G__4764 = (i_4760 + (1));
var G__4765 = (j_4761 + (2));
i_4760 = G__4764;
j_4761 = G__4765;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__4747 = edit__$1;
var G__4748 = (shift + (5));
var G__4749 = key_or_nil;
var G__4750 = val_or_node;
var G__4751 = hash;
var G__4752 = key;
var G__4753 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__4747,G__4748,G__4749,G__4750,G__4751,G__4752,G__4753) : cljs.core.create_node.call(null,G__4747,G__4748,G__4749,G__4750,G__4751,G__4752,G__4753));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_4766 = (0);
var j_4767 = (0);
while(true){
if((i_4766 < (32))){
if((((self__.bitmap >>> i_4766) & (1)) === (0))){
var G__4768 = (i_4766 + (1));
var G__4769 = j_4767;
i_4766 = G__4768;
j_4767 = G__4769;
continue;
} else {
(nodes[i_4766] = ((!(((self__.arr[j_4767]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_4767])),(self__.arr[j_4767]),(self__.arr[(j_4767 + (1))]),added_leaf_QMARK_):(self__.arr[(j_4767 + (1))])));

var G__4770 = (i_4766 + (1));
var G__4771 = (j_4767 + (2));
i_4766 = G__4770;
j_4767 = G__4771;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__4754 = (shift + (5));
var G__4755 = key_or_nil;
var G__4756 = val_or_node;
var G__4757 = hash;
var G__4758 = key;
var G__4759 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__4754,G__4755,G__4756,G__4757,G__4758,G__4759) : cljs.core.create_node.call(null,G__4754,G__4755,G__4756,G__4757,G__4758,G__4759));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function cljs$core$__GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function cljs$core$pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__4772 = (i + (1));
var G__4773 = (j + (2));
var G__4774 = (bitmap | ((1) << i));
i = G__4772;
j = G__4773;
bitmap = G__4774;
continue;
} else {
var G__4775 = (i + (1));
var G__4776 = j;
var G__4777 = bitmap;
i = G__4775;
j = G__4776;
bitmap = G__4777;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__4778 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__4778) : cljs.core.create_array_node_seq.call(null,G__4778));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__4779 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4779) : cljs.core.deref.call(null,G__4779));
} else {
var G__4780 = (i + (1));
var G__4781 = init__$2;
i = G__4780;
init__$1 = G__4781;
continue;
}
} else {
var G__4782 = (i + (1));
var G__4783 = init__$1;
i = G__4782;
init__$1 = G__4783;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function cljs$core$__GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function cljs$core$hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__4784 = (i + (2));
i = G__4784;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__4785 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__4785) : cljs.core.create_inode_seq.call(null,G__4785));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function cljs$core$__GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var cljs$core$create_node = null;
var cljs$core$create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var cljs$core$create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
cljs$core$create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return cljs$core$create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return cljs$core$create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_node.cljs$core$IFn$_invoke$arity$6 = cljs$core$create_node__6;
cljs$core$create_node.cljs$core$IFn$_invoke$arity$7 = cljs$core$create_node__7;
return cljs$core$create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__10916__auto__ = self__.__hash;
if(!((h__10916__auto__ == null))){
return h__10916__auto__;
} else {
var h__10916__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__10916__auto____$1;

return h__10916__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__4786 = self__.nodes;
var G__4787 = (self__.i + (2));
var G__4788 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__4786,G__4787,G__4788) : cljs.core.create_inode_seq.call(null,G__4786,G__4787,G__4788));
} else {
var G__4789 = self__.nodes;
var G__4790 = self__.i;
var G__4791 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__4789,G__4790,G__4791) : cljs.core.create_inode_seq.call(null,G__4789,G__4790,G__4791));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function cljs$core$__GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));
cljs.core.create_inode_seq = (function() {
var cljs$core$create_inode_seq = null;
var cljs$core$create_inode_seq__1 = (function (nodes){
return cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var cljs$core$create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__4795 = (j + (2));
j = G__4795;
continue;
}
} else {
var G__4796 = (j + (2));
j = G__4796;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
cljs$core$create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return cljs$core$create_inode_seq__1.call(this,nodes);
case 3:
return cljs$core$create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_inode_seq__1;
cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$create_inode_seq__3;
return cljs$core$create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__10916__auto__ = self__.__hash;
if(!((h__10916__auto__ == null))){
return h__10916__auto__;
} else {
var h__10916__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__10916__auto____$1;

return h__10916__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__4797 = null;
var G__4798 = self__.nodes;
var G__4799 = self__.i;
var G__4800 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__4797,G__4798,G__4799,G__4800) : cljs.core.create_array_node_seq.call(null,G__4797,G__4798,G__4799,G__4800));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function cljs$core$__GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var cljs$core$create_array_node_seq = null;
var cljs$core$create_array_node_seq__1 = (function (nodes){
return cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var cljs$core$create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__4805 = (j + (1));
j = G__4805;
continue;
}
} else {
var G__4806 = (j + (1));
j = G__4806;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
cljs$core$create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return cljs$core$create_array_node_seq__1.call(this,meta);
case 4:
return cljs$core$create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_array_node_seq__1;
cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$create_array_node_seq__4;
return cljs$core$create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__4808 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__4808) : cljs.core.keys.call(null,G__4808));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__4809 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__4809) : cljs.core.vals.call(null,G__4809));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__4810 = cljs.core.seq(coll);
var chunk__4811 = null;
var count__4812 = (0);
var i__4813 = (0);
while(true){
if((i__4813 < count__4812)){
var vec__4814 = chunk__4811.cljs$core$IIndexed$_nth$arity$2(null,i__4813);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4814,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4814,(1),null);
var G__4815_4826 = v;
var G__4816_4827 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4815_4826,G__4816_4827) : f.call(null,G__4815_4826,G__4816_4827));

var G__4828 = seq__4810;
var G__4829 = chunk__4811;
var G__4830 = count__4812;
var G__4831 = (i__4813 + (1));
seq__4810 = G__4828;
chunk__4811 = G__4829;
count__4812 = G__4830;
i__4813 = G__4831;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__4810);
if(temp__4126__auto__){
var seq__4810__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__4810__$1)){
var c__11190__auto__ = cljs.core.chunk_first(seq__4810__$1);
var G__4832 = cljs.core.chunk_rest(seq__4810__$1);
var G__4833 = c__11190__auto__;
var G__4834 = cljs.core.count(c__11190__auto__);
var G__4835 = (0);
seq__4810 = G__4832;
chunk__4811 = G__4833;
count__4812 = G__4834;
i__4813 = G__4835;
continue;
} else {
var vec__4817 = cljs.core.first(seq__4810__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4817,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4817,(1),null);
var G__4818_4836 = v;
var G__4819_4837 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4818_4836,G__4819_4837) : f.call(null,G__4818_4836,G__4819_4837));

var G__4838 = cljs.core.next(seq__4810__$1);
var G__4839 = null;
var G__4840 = (0);
var G__4841 = (0);
seq__4810 = G__4838;
chunk__4811 = G__4839;
count__4812 = G__4840;
i__4813 = G__4841;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__4820 = init;
var G__4821 = null;
var G__4822 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4820,G__4821,G__4822) : f.call(null,G__4820,G__4821,G__4822));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__4823 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4823) : cljs.core.deref.call(null,G__4823));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__10916__auto__ = self__.__hash;
if(!((h__10916__auto__ == null))){
return h__10916__auto__;
} else {
var h__10916__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__10916__auto____$1;

return h__10916__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj4825 = {};
return obj4825;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__4842 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__4843 = cljs.core.next(es);
ret = G__4842;
es = G__4843;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__4844 = null;
var G__4844__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__4844__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__4844 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__4844__2.call(this,self__,k);
case 3:
return G__4844__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4844.cljs$core$IFn$_invoke$arity$2 = G__4844__2;
G__4844.cljs$core$IFn$_invoke$arity$3 = G__4844__3;
return G__4844;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args4807){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args4807)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function cljs$core$__GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__4845 = (i + (2));
var G__4846 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__4845;
ret = G__4846;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__4847 = (i + (1));
var G__4848 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__4847;
out = G__4848;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__4849 = o;
if(G__4849){
var bit__11120__auto__ = (G__4849.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__11120__auto__) || (G__4849.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__4849.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__4849);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__4849);
}
})()){
return tcoll.assoc_BANG_((function (){var G__4850 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__4850) : cljs.core.key.call(null,G__4850));
})(),(function (){var G__4851 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__4851) : cljs.core.val.call(null,G__4851));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__4854 = cljs.core.next(es);
var G__4855 = tcoll__$1.assoc_BANG_((function (){var G__4852 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__4852) : cljs.core.key.call(null,G__4852));
})(),(function (){var G__4853 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__4853) : cljs.core.val.call(null,G__4853));
})());
es = G__4854;
tcoll__$1 = G__4855;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function cljs$core$__GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function cljs$core$tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__4856 = ((ascending_QMARK_)?t.left:t.right);
var G__4857 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__4856;
stack__$1 = G__4857;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__10916__auto__ = self__.__hash;
if(!((h__10916__auto__ == null))){
return h__10916__auto__;
} else {
var h__10916__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__10916__auto____$1;

return h__10916__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function cljs$core$__GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));
cljs.core.create_tree_map_seq = (function cljs$core$create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function cljs$core$balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function cljs$core$balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function cljs$core$balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function cljs$core$balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function cljs$core$tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?cljs$core$tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__4870 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4870) : cljs.core.deref.call(null,G__4870));
} else {
var init__$2 = (function (){var G__4871 = init__$1;
var G__4872 = node.key;
var G__4873 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4871,G__4872,G__4873) : f.call(null,G__4871,G__4872,G__4873));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__4874 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4874) : cljs.core.deref.call(null,G__4874));
} else {
var init__$3 = ((!((node.right == null)))?cljs$core$tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__4875 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4875) : cljs.core.deref.call(null,G__4875));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__10916__auto__ = self__.__hash;
if(!((h__10916__auto__ == null))){
return h__10916__auto__;
} else {
var h__10916__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__10916__auto____$1;

return h__10916__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__4877 = null;
var G__4877__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__4877__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__4877 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__4877__2.call(this,self__,k);
case 3:
return G__4877__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4877.cljs$core$IFn$_invoke$arity$2 = G__4877__2;
G__4877.cljs$core$IFn$_invoke$arity$3 = G__4877__3;
return G__4877;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args4876){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args4876)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function cljs$core$__GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__10916__auto__ = self__.__hash;
if(!((h__10916__auto__ == null))){
return h__10916__auto__;
} else {
var h__10916__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__10916__auto____$1;

return h__10916__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__4879 = null;
var G__4879__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__4879__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__4879 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__4879__2.call(this,self__,k);
case 3:
return G__4879__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4879.cljs$core$IFn$_invoke$arity$2 = G__4879__2;
G__4879.cljs$core$IFn$_invoke$arity$3 = G__4879__3;
return G__4879;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args4878){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args4878)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function cljs$core$__GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));
cljs.core.tree_map_add = (function cljs$core$tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__4892 = k;
var G__4893 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__4892,G__4893) : comp.call(null,G__4892,G__4893));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = cljs$core$tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = cljs$core$tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function cljs$core$tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,cljs$core$tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,cljs$core$tree_map_append(left,right.left),right.right,null));
} else {
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function cljs$core$tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__4912 = k;
var G__4913 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__4912,G__4913) : comp.call(null,G__4912,G__4913));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = cljs$core$tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = cljs$core$tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function cljs$core$tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__4924 = k;
var G__4925 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__4924,G__4925) : comp.call(null,G__4924,G__4925));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,cljs$core$tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,cljs$core$tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__4927 = cljs.core.seq(coll);
var chunk__4928 = null;
var count__4929 = (0);
var i__4930 = (0);
while(true){
if((i__4930 < count__4929)){
var vec__4931 = chunk__4928.cljs$core$IIndexed$_nth$arity$2(null,i__4930);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4931,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4931,(1),null);
var G__4932_4944 = v;
var G__4933_4945 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4932_4944,G__4933_4945) : f.call(null,G__4932_4944,G__4933_4945));

var G__4946 = seq__4927;
var G__4947 = chunk__4928;
var G__4948 = count__4929;
var G__4949 = (i__4930 + (1));
seq__4927 = G__4946;
chunk__4928 = G__4947;
count__4929 = G__4948;
i__4930 = G__4949;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__4927);
if(temp__4126__auto__){
var seq__4927__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__4927__$1)){
var c__11190__auto__ = cljs.core.chunk_first(seq__4927__$1);
var G__4950 = cljs.core.chunk_rest(seq__4927__$1);
var G__4951 = c__11190__auto__;
var G__4952 = cljs.core.count(c__11190__auto__);
var G__4953 = (0);
seq__4927 = G__4950;
chunk__4928 = G__4951;
count__4929 = G__4952;
i__4930 = G__4953;
continue;
} else {
var vec__4934 = cljs.core.first(seq__4927__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4934,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4934,(1),null);
var G__4935_4954 = v;
var G__4936_4955 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4935_4954,G__4936_4955) : f.call(null,G__4935_4954,G__4936_4955));

var G__4956 = cljs.core.next(seq__4927__$1);
var G__4957 = null;
var G__4958 = (0);
var G__4959 = (0);
seq__4927 = G__4956;
chunk__4928 = G__4957;
count__4929 = G__4958;
i__4930 = G__4959;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__4937 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__4937) : cljs.core.keys.call(null,G__4937));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__4938 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__4938) : cljs.core.vals.call(null,G__4938));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__4939 = k;
var G__4940 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__4939,G__4940) : self__.comp.call(null,G__4939,G__4940));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__4960 = t.left;
t = G__4960;
continue;
} else {
var G__4961 = t.right;
t = G__4961;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__10916__auto__ = self__.__hash;
if(!((h__10916__auto__ == null))){
return h__10916__auto__;
} else {
var h__10916__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__10916__auto____$1;

return h__10916__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__4962 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__4963 = cljs.core.next(es);
ret = G__4962;
es = G__4963;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__4964 = null;
var G__4964__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__4964__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__4964 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__4964__2.call(this,self__,k);
case 3:
return G__4964__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4964.cljs$core$IFn$_invoke$arity$2 = G__4964__2;
G__4964.cljs$core$IFn$_invoke$arity$3 = G__4964__3;
return G__4964;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args4926){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args4926)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__4941 = k;
var G__4942 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__4941,G__4942) : self__.comp.call(null,G__4941,G__4942));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__4965 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__4966 = t.left;
stack = G__4965;
t = G__4966;
continue;
} else {
var G__4967 = stack;
var G__4968 = t.right;
stack = G__4967;
t = G__4968;
continue;
}
} else {
if((c > (0))){
var G__4969 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__4970 = t.right;
stack = G__4969;
t = G__4970;
continue;
} else {
var G__4971 = stack;
var G__4972 = t.left;
stack = G__4971;
t = G__4972;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__4943 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__4943) : cljs.core.key.call(null,G__4943));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function cljs$core$__GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));
/**
 * keyval => key val
 * Returns a new hash map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.hash_map = (function() { 
var cljs$core$hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__4973 = cljs.core.nnext(in$);
var G__4974 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__4973;
out = G__4974;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var cljs$core$hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__4975__i = 0, G__4975__a = new Array(arguments.length -  0);
while (G__4975__i < G__4975__a.length) {G__4975__a[G__4975__i] = arguments[G__4975__i + 0]; ++G__4975__i;}
  keyvals = new cljs.core.IndexedSeq(G__4975__a,0);
} 
return cljs$core$hash_map__delegate.call(this,keyvals);};
cljs$core$hash_map.cljs$lang$maxFixedArity = 0;
cljs$core$hash_map.cljs$lang$applyTo = (function (arglist__4976){
var keyvals = cljs.core.seq(arglist__4976);
return cljs$core$hash_map__delegate(keyvals);
});
cljs$core$hash_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_map__delegate;
return cljs$core$hash_map;
})()
;
/**
 * keyval => key val
 * Returns a new array map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.array_map = (function() { 
var cljs$core$array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var cljs$core$array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__4977__i = 0, G__4977__a = new Array(arguments.length -  0);
while (G__4977__i < G__4977__a.length) {G__4977__a[G__4977__i] = arguments[G__4977__i + 0]; ++G__4977__i;}
  keyvals = new cljs.core.IndexedSeq(G__4977__a,0);
} 
return cljs$core$array_map__delegate.call(this,keyvals);};
cljs$core$array_map.cljs$lang$maxFixedArity = 0;
cljs$core$array_map.cljs$lang$applyTo = (function (arglist__4978){
var keyvals = cljs.core.seq(arglist__4978);
return cljs$core$array_map__delegate(keyvals);
});
cljs$core$array_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$array_map__delegate;
return cljs$core$array_map;
})()
;
/**
 * keyval => key val
 * Returns a new object map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.obj_map = (function() { 
var cljs$core$obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj4982 = {};
return obj4982;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__4983 = cljs.core.nnext(kvs);
kvs = G__4983;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var cljs$core$obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__4984__i = 0, G__4984__a = new Array(arguments.length -  0);
while (G__4984__i < G__4984__a.length) {G__4984__a[G__4984__i] = arguments[G__4984__i + 0]; ++G__4984__i;}
  keyvals = new cljs.core.IndexedSeq(G__4984__a,0);
} 
return cljs$core$obj_map__delegate.call(this,keyvals);};
cljs$core$obj_map.cljs$lang$maxFixedArity = 0;
cljs$core$obj_map.cljs$lang$applyTo = (function (arglist__4985){
var keyvals = cljs.core.seq(arglist__4985);
return cljs$core$obj_map__delegate(keyvals);
});
cljs$core$obj_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$obj_map__delegate;
return cljs$core$obj_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.sorted_map = (function() { 
var cljs$core$sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__4986 = cljs.core.nnext(in$);
var G__4987 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__4986;
out = G__4987;
continue;
} else {
return out;
}
break;
}
};
var cljs$core$sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__4988__i = 0, G__4988__a = new Array(arguments.length -  0);
while (G__4988__i < G__4988__a.length) {G__4988__a[G__4988__i] = arguments[G__4988__i + 0]; ++G__4988__i;}
  keyvals = new cljs.core.IndexedSeq(G__4988__a,0);
} 
return cljs$core$sorted_map__delegate.call(this,keyvals);};
cljs$core$sorted_map.cljs$lang$maxFixedArity = 0;
cljs$core$sorted_map.cljs$lang$applyTo = (function (arglist__4989){
var keyvals = cljs.core.seq(arglist__4989);
return cljs$core$sorted_map__delegate(keyvals);
});
cljs$core$sorted_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map__delegate;
return cljs$core$sorted_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_map_by = (function() { 
var cljs$core$sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__4990 = cljs.core.nnext(in$);
var G__4991 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__4990;
out = G__4991;
continue;
} else {
return out;
}
break;
}
};
var cljs$core$sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__4992__i = 0, G__4992__a = new Array(arguments.length -  1);
while (G__4992__i < G__4992__a.length) {G__4992__a[G__4992__i] = arguments[G__4992__i + 1]; ++G__4992__i;}
  keyvals = new cljs.core.IndexedSeq(G__4992__a,0);
} 
return cljs$core$sorted_map_by__delegate.call(this,comparator,keyvals);};
cljs$core$sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs$core$sorted_map_by.cljs$lang$applyTo = (function (arglist__4993){
var comparator = cljs.core.first(arglist__4993);
var keyvals = cljs.core.rest(arglist__4993);
return cljs$core$sorted_map_by__delegate(comparator,keyvals);
});
cljs$core$sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map_by__delegate;
return cljs$core$sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__4994 = self__.mseq;
if(G__4994){
var bit__11120__auto__ = (G__4994.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__11120__auto__) || (G__4994.cljs$core$INext$)){
return true;
} else {
if((!G__4994.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__4994);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__4994);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__4995 = self__.mseq;
if(G__4995){
var bit__11120__auto__ = (G__4995.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__11120__auto__) || (G__4995.cljs$core$INext$)){
return true;
} else {
if((!G__4995.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__4995);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__4995);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function cljs$core$__GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));
/**
 * Returns a sequence of the map's keys.
 */
cljs.core.keys = (function cljs$core$keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the key of the map entry.
 */
cljs.core.key = (function cljs$core$key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__4996 = self__.mseq;
if(G__4996){
var bit__11120__auto__ = (G__4996.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__11120__auto__) || (G__4996.cljs$core$INext$)){
return true;
} else {
if((!G__4996.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__4996);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__4996);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__4997 = self__.mseq;
if(G__4997){
var bit__11120__auto__ = (G__4997.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__11120__auto__) || (G__4997.cljs$core$INext$)){
return true;
} else {
if((!G__4997.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__4997);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__4997);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function cljs$core$__GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));
/**
 * Returns a sequence of the map's values.
 */
cljs.core.vals = (function cljs$core$vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the value in the map entry.
 */
cljs.core.val = (function cljs$core$val(map_entry){
return cljs.core._val(map_entry);
});
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping from
 * the latter (left-to-right) will be the mapping in the result.
 * @param {...*} var_args
 */
cljs.core.merge = (function() { 
var cljs$core$merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__4998_SHARP_,p2__4999_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__10823__auto__ = p1__4998_SHARP_;
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__4999_SHARP_);
}),maps);
} else {
return null;
}
};
var cljs$core$merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__5000__i = 0, G__5000__a = new Array(arguments.length -  0);
while (G__5000__i < G__5000__a.length) {G__5000__a[G__5000__i] = arguments[G__5000__i + 0]; ++G__5000__i;}
  maps = new cljs.core.IndexedSeq(G__5000__a,0);
} 
return cljs$core$merge__delegate.call(this,maps);};
cljs$core$merge.cljs$lang$maxFixedArity = 0;
cljs$core$merge.cljs$lang$applyTo = (function (arglist__5001){
var maps = cljs.core.seq(arglist__5001);
return cljs$core$merge__delegate(maps);
});
cljs$core$merge.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge__delegate;
return cljs$core$merge;
})()
;
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping(s)
 * from the latter (left-to-right) will be combined with the mapping in
 * the result by calling (f val-in-result val-in-latter).
 * @param {...*} var_args
 */
cljs.core.merge_with = (function() { 
var cljs$core$merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__5004 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__5005 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5004,G__5005) : f.call(null,G__5004,G__5005));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__10823__auto__ = m1;
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var cljs$core$merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__5006__i = 0, G__5006__a = new Array(arguments.length -  1);
while (G__5006__i < G__5006__a.length) {G__5006__a[G__5006__i] = arguments[G__5006__i + 1]; ++G__5006__i;}
  maps = new cljs.core.IndexedSeq(G__5006__a,0);
} 
return cljs$core$merge_with__delegate.call(this,f,maps);};
cljs$core$merge_with.cljs$lang$maxFixedArity = 1;
cljs$core$merge_with.cljs$lang$applyTo = (function (arglist__5007){
var f = cljs.core.first(arglist__5007);
var maps = cljs.core.rest(arglist__5007);
return cljs$core$merge_with__delegate(f,maps);
});
cljs$core$merge_with.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge_with__delegate;
return cljs$core$merge_with;
})()
;
/**
 * Returns a map containing only those entries in map whose key is in keys
 */
cljs.core.select_keys = (function cljs$core$select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$_COLON_cljs$core_SLASH_not_found);
var G__5008 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$_COLON_cljs$core_SLASH_not_found))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__5009 = cljs.core.next(keys);
ret = G__5008;
keys = G__5009;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__5012 = cljs.core.seq(coll);
var chunk__5013 = null;
var count__5014 = (0);
var i__5015 = (0);
while(true){
if((i__5015 < count__5014)){
var vec__5016 = chunk__5013.cljs$core$IIndexed$_nth$arity$2(null,i__5015);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5016,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5016,(1),null);
var G__5017_5022 = v;
var G__5018_5023 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5017_5022,G__5018_5023) : f.call(null,G__5017_5022,G__5018_5023));

var G__5024 = seq__5012;
var G__5025 = chunk__5013;
var G__5026 = count__5014;
var G__5027 = (i__5015 + (1));
seq__5012 = G__5024;
chunk__5013 = G__5025;
count__5014 = G__5026;
i__5015 = G__5027;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__5012);
if(temp__4126__auto__){
var seq__5012__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__5012__$1)){
var c__11190__auto__ = cljs.core.chunk_first(seq__5012__$1);
var G__5028 = cljs.core.chunk_rest(seq__5012__$1);
var G__5029 = c__11190__auto__;
var G__5030 = cljs.core.count(c__11190__auto__);
var G__5031 = (0);
seq__5012 = G__5028;
chunk__5013 = G__5029;
count__5014 = G__5030;
i__5015 = G__5031;
continue;
} else {
var vec__5019 = cljs.core.first(seq__5012__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5019,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5019,(1),null);
var G__5020_5032 = v;
var G__5021_5033 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5020_5032,G__5021_5033) : f.call(null,G__5020_5032,G__5021_5033));

var G__5034 = cljs.core.next(seq__5012__$1);
var G__5035 = null;
var G__5036 = (0);
var G__5037 = (0);
seq__5012 = G__5034;
chunk__5013 = G__5035;
count__5014 = G__5036;
i__5015 = G__5037;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__10916__auto__ = self__.__hash;
if(!((h__10916__auto__ == null))){
return h__10916__auto__;
} else {
var h__10916__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__10916__auto____$1;

return h__10916__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__5010_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__5010_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__5038 = null;
var G__5038__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__5038__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__5038 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__5038__2.call(this,self__,k);
case 3:
return G__5038__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5038.cljs$core$IFn$_invoke$arity$2 = G__5038__2;
G__5038.cljs$core$IFn$_invoke$arity$3 = G__5038__3;
return G__5038;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args5011){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args5011)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function cljs$core$__GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__5039 = (i + (1));
var G__5040 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__5039;
out = G__5040;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__5041 = (i + (1));
var G__5042 = cljs.core._conj_BANG_(out,(items[i]));
i = G__5041;
out = G__5042;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__5044 = null;
var G__5044__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__5044__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__5044 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__5044__2.call(this,self__,k);
case 3:
return G__5044__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5044.cljs$core$IFn$_invoke$arity$2 = G__5044__2;
G__5044.cljs$core$IFn$_invoke$arity$3 = G__5044__3;
return G__5044;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args5043){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args5043)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function cljs$core$__GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__5047 = cljs.core.seq(coll);
var chunk__5048 = null;
var count__5049 = (0);
var i__5050 = (0);
while(true){
if((i__5050 < count__5049)){
var vec__5051 = chunk__5048.cljs$core$IIndexed$_nth$arity$2(null,i__5050);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5051,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5051,(1),null);
var G__5052_5057 = v;
var G__5053_5058 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5052_5057,G__5053_5058) : f.call(null,G__5052_5057,G__5053_5058));

var G__5059 = seq__5047;
var G__5060 = chunk__5048;
var G__5061 = count__5049;
var G__5062 = (i__5050 + (1));
seq__5047 = G__5059;
chunk__5048 = G__5060;
count__5049 = G__5061;
i__5050 = G__5062;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__5047);
if(temp__4126__auto__){
var seq__5047__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__5047__$1)){
var c__11190__auto__ = cljs.core.chunk_first(seq__5047__$1);
var G__5063 = cljs.core.chunk_rest(seq__5047__$1);
var G__5064 = c__11190__auto__;
var G__5065 = cljs.core.count(c__11190__auto__);
var G__5066 = (0);
seq__5047 = G__5063;
chunk__5048 = G__5064;
count__5049 = G__5065;
i__5050 = G__5066;
continue;
} else {
var vec__5054 = cljs.core.first(seq__5047__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5054,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5054,(1),null);
var G__5055_5067 = v;
var G__5056_5068 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5055_5067,G__5056_5068) : f.call(null,G__5055_5067,G__5056_5068));

var G__5069 = cljs.core.next(seq__5047__$1);
var G__5070 = null;
var G__5071 = (0);
var G__5072 = (0);
seq__5047 = G__5069;
chunk__5048 = G__5070;
count__5049 = G__5071;
i__5050 = G__5072;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__10916__auto__ = self__.__hash;
if(!((h__10916__auto__ == null))){
return h__10916__auto__;
} else {
var h__10916__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__10916__auto____$1;

return h__10916__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__5045_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__5045_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__5073 = null;
var G__5073__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__5073__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__5073 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__5073__2.call(this,self__,k);
case 3:
return G__5073__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5073.cljs$core$IFn$_invoke$arity$2 = G__5073__2;
G__5073.cljs$core$IFn$_invoke$arity$3 = G__5073__3;
return G__5073;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args5046){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args5046)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function cljs$core$__GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));
cljs.core.set_from_indexed_seq = (function cljs$core$set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__11240__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__11240__auto__.length)){
var G__5074 = (i + (1));
var G__5075 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__5074;
res = G__5075;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
 * Returns a set of the distinct elements of coll.
 */
cljs.core.set = (function cljs$core$set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__5076 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__5077 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__5076;
out = G__5077;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
 * Returns a new hash set with supplied keys.  Any equal keys are
 * handled as if by repeated uses of conj.
 * @param {...*} var_args
 */
cljs.core.hash_set = (function() {
var cljs$core$hash_set = null;
var cljs$core$hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var cljs$core$hash_set__1 = (function() { 
var G__5078__delegate = function (keys){
return cljs.core.set(keys);
};
var G__5078 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__5079__i = 0, G__5079__a = new Array(arguments.length -  0);
while (G__5079__i < G__5079__a.length) {G__5079__a[G__5079__i] = arguments[G__5079__i + 0]; ++G__5079__i;}
  keys = new cljs.core.IndexedSeq(G__5079__a,0);
} 
return G__5078__delegate.call(this,keys);};
G__5078.cljs$lang$maxFixedArity = 0;
G__5078.cljs$lang$applyTo = (function (arglist__5080){
var keys = cljs.core.seq(arglist__5080);
return G__5078__delegate(keys);
});
G__5078.cljs$core$IFn$_invoke$arity$variadic = G__5078__delegate;
return G__5078;
})()
;
cljs$core$hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return cljs$core$hash_set__0.call(this);
default:
var G__5081 = null;
if (arguments.length > 0) {
var G__5082__i = 0, G__5082__a = new Array(arguments.length -  0);
while (G__5082__i < G__5082__a.length) {G__5082__a[G__5082__i] = arguments[G__5082__i + 0]; ++G__5082__i;}
G__5081 = new cljs.core.IndexedSeq(G__5082__a,0);
}
return cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__5081);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$hash_set.cljs$lang$maxFixedArity = 0;
cljs$core$hash_set.cljs$lang$applyTo = cljs$core$hash_set__1.cljs$lang$applyTo;
cljs$core$hash_set.cljs$core$IFn$_invoke$arity$0 = cljs$core$hash_set__0;
cljs$core$hash_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$hash_set;
})()
;
/**
 * Returns a new sorted set with supplied keys.
 * @param {...*} var_args
 */
cljs.core.sorted_set = (function() { 
var cljs$core$sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var cljs$core$sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__5083__i = 0, G__5083__a = new Array(arguments.length -  0);
while (G__5083__i < G__5083__a.length) {G__5083__a[G__5083__i] = arguments[G__5083__i + 0]; ++G__5083__i;}
  keys = new cljs.core.IndexedSeq(G__5083__a,0);
} 
return cljs$core$sorted_set__delegate.call(this,keys);};
cljs$core$sorted_set.cljs$lang$maxFixedArity = 0;
cljs$core$sorted_set.cljs$lang$applyTo = (function (arglist__5084){
var keys = cljs.core.seq(arglist__5084);
return cljs$core$sorted_set__delegate(keys);
});
cljs$core$sorted_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set__delegate;
return cljs$core$sorted_set;
})()
;
/**
 * Returns a new sorted set with supplied keys, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_set_by = (function() { 
var cljs$core$sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var cljs$core$sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__5085__i = 0, G__5085__a = new Array(arguments.length -  1);
while (G__5085__i < G__5085__a.length) {G__5085__a[G__5085__i] = arguments[G__5085__i + 1]; ++G__5085__i;}
  keys = new cljs.core.IndexedSeq(G__5085__a,0);
} 
return cljs$core$sorted_set_by__delegate.call(this,comparator,keys);};
cljs$core$sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs$core$sorted_set_by.cljs$lang$applyTo = (function (arglist__5086){
var comparator = cljs.core.first(arglist__5086);
var keys = cljs.core.rest(arglist__5086);
return cljs$core$sorted_set_by__delegate(comparator,keys);
});
cljs$core$sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set_by__delegate;
return cljs$core$sorted_set_by;
})()
;
/**
 * Given a map of replacement pairs and a vector/collection, returns a
 * vector/seq with any elements = a key in smap replaced with the
 * corresponding val in smap.  Returns a transducer when no collection
 * is provided.
 */
cljs.core.replace = (function() {
var cljs$core$replace = null;
var cljs$core$replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__5087_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__5087_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__5087_SHARP_;
}
}));
});
var cljs$core$replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__5088_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__5088_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__5088_SHARP_;
}
}),coll);
}
});
cljs$core$replace = function(smap,coll){
switch(arguments.length){
case 1:
return cljs$core$replace__1.call(this,smap);
case 2:
return cljs$core$replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$replace.cljs$core$IFn$_invoke$arity$1 = cljs$core$replace__1;
cljs$core$replace.cljs$core$IFn$_invoke$arity$2 = cljs$core$replace__2;
return cljs$core$replace;
})()
;
/**
 * Returns a lazy sequence of the elements of coll with duplicates removed
 */
cljs.core.distinct = (function() {
var cljs$core$distinct = null;
var cljs$core$distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__5109 = null;
var G__5109__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__5109__1 = (function (result){
var G__5099 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__5099) : rf.call(null,G__5099));
});
var G__5109__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__5100 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5100) : cljs.core.deref.call(null,G__5100));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__5101 = result;
var G__5102 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__5101,G__5102) : rf.call(null,G__5101,G__5102));
}
});
G__5109 = function(result,input){
switch(arguments.length){
case 0:
return G__5109__0.call(this);
case 1:
return G__5109__1.call(this,result);
case 2:
return G__5109__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5109.cljs$core$IFn$_invoke$arity$0 = G__5109__0;
G__5109.cljs$core$IFn$_invoke$arity$1 = G__5109__1;
G__5109.cljs$core$IFn$_invoke$arity$2 = G__5109__2;
return G__5109;
})()
;})(seen))
});
});
var cljs$core$distinct__1 = (function (coll){
var step = (function cljs$core$distinct_$_step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__5107,seen__$1){
while(true){
var vec__5108 = p__5107;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5108,(0),null);
var xs__$1 = vec__5108;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__5110 = cljs.core.rest(s);
var G__5111 = seen__$1;
p__5107 = G__5110;
seen__$1 = G__5111;
continue;
} else {
return cljs.core.cons(f,cljs$core$distinct_$_step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs$core$distinct = function(coll){
switch(arguments.length){
case 0:
return cljs$core$distinct__0.call(this);
case 1:
return cljs$core$distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$distinct.cljs$core$IFn$_invoke$arity$0 = cljs$core$distinct__0;
cljs$core$distinct.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct__1;
return cljs$core$distinct;
})()
;
/**
 * Return a seq of all but the last item in coll, in linear time
 */
cljs.core.butlast = (function cljs$core$butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__5112 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__5113 = cljs.core.next(s__$1);
ret = G__5112;
s__$1 = G__5113;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
 * Returns the name String of a string, symbol or keyword.
 */
cljs.core.name = (function cljs$core$name(x){
if((function (){var G__5115 = x;
if(G__5115){
var bit__11117__auto__ = (G__5115.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__11117__auto__) || (G__5115.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
 * Returns a map with the keys mapped to the corresponding vals.
 */
cljs.core.zipmap = (function cljs$core$zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__5116 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__5117 = cljs.core.next(ks);
var G__5118 = cljs.core.next(vs);
map = G__5116;
ks = G__5117;
vs = G__5118;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
 * Returns the x for which (k x), a number, is greatest.
 * @param {...*} var_args
 */
cljs.core.max_key = (function() {
var cljs$core$max_key = null;
var cljs$core$max_key__2 = (function (k,x){
return x;
});
var cljs$core$max_key__3 = (function (k,x,y){
if(((function (){var G__5129 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__5129) : k.call(null,G__5129));
})() > (function (){var G__5130 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__5130) : k.call(null,G__5130));
})())){
return x;
} else {
return y;
}
});
var cljs$core$max_key__4 = (function() { 
var G__5131__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__5119_SHARP_,p2__5120_SHARP_){
return cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k,p1__5119_SHARP_,p2__5120_SHARP_);
}),cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__5131 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__5132__i = 0, G__5132__a = new Array(arguments.length -  3);
while (G__5132__i < G__5132__a.length) {G__5132__a[G__5132__i] = arguments[G__5132__i + 3]; ++G__5132__i;}
  more = new cljs.core.IndexedSeq(G__5132__a,0);
} 
return G__5131__delegate.call(this,k,x,y,more);};
G__5131.cljs$lang$maxFixedArity = 3;
G__5131.cljs$lang$applyTo = (function (arglist__5133){
var k = cljs.core.first(arglist__5133);
arglist__5133 = cljs.core.next(arglist__5133);
var x = cljs.core.first(arglist__5133);
arglist__5133 = cljs.core.next(arglist__5133);
var y = cljs.core.first(arglist__5133);
var more = cljs.core.rest(arglist__5133);
return G__5131__delegate(k,x,y,more);
});
G__5131.cljs$core$IFn$_invoke$arity$variadic = G__5131__delegate;
return G__5131;
})()
;
cljs$core$max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$max_key__2.call(this,k,x);
case 3:
return cljs$core$max_key__3.call(this,k,x,y);
default:
var G__5134 = null;
if (arguments.length > 3) {
var G__5135__i = 0, G__5135__a = new Array(arguments.length -  3);
while (G__5135__i < G__5135__a.length) {G__5135__a[G__5135__i] = arguments[G__5135__i + 3]; ++G__5135__i;}
G__5134 = new cljs.core.IndexedSeq(G__5135__a,0);
}
return cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__5134);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$max_key.cljs$lang$maxFixedArity = 3;
cljs$core$max_key.cljs$lang$applyTo = cljs$core$max_key__4.cljs$lang$applyTo;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$max_key__2;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$max_key__3;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$max_key;
})()
;
/**
 * Returns the x for which (k x), a number, is least.
 * @param {...*} var_args
 */
cljs.core.min_key = (function() {
var cljs$core$min_key = null;
var cljs$core$min_key__2 = (function (k,x){
return x;
});
var cljs$core$min_key__3 = (function (k,x,y){
if(((function (){var G__5146 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__5146) : k.call(null,G__5146));
})() < (function (){var G__5147 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__5147) : k.call(null,G__5147));
})())){
return x;
} else {
return y;
}
});
var cljs$core$min_key__4 = (function() { 
var G__5148__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__5136_SHARP_,p2__5137_SHARP_){
return cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k,p1__5136_SHARP_,p2__5137_SHARP_);
}),cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__5148 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__5149__i = 0, G__5149__a = new Array(arguments.length -  3);
while (G__5149__i < G__5149__a.length) {G__5149__a[G__5149__i] = arguments[G__5149__i + 3]; ++G__5149__i;}
  more = new cljs.core.IndexedSeq(G__5149__a,0);
} 
return G__5148__delegate.call(this,k,x,y,more);};
G__5148.cljs$lang$maxFixedArity = 3;
G__5148.cljs$lang$applyTo = (function (arglist__5150){
var k = cljs.core.first(arglist__5150);
arglist__5150 = cljs.core.next(arglist__5150);
var x = cljs.core.first(arglist__5150);
arglist__5150 = cljs.core.next(arglist__5150);
var y = cljs.core.first(arglist__5150);
var more = cljs.core.rest(arglist__5150);
return G__5148__delegate(k,x,y,more);
});
G__5148.cljs$core$IFn$_invoke$arity$variadic = G__5148__delegate;
return G__5148;
})()
;
cljs$core$min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$min_key__2.call(this,k,x);
case 3:
return cljs$core$min_key__3.call(this,k,x,y);
default:
var G__5151 = null;
if (arguments.length > 3) {
var G__5152__i = 0, G__5152__a = new Array(arguments.length -  3);
while (G__5152__i < G__5152__a.length) {G__5152__a[G__5152__i] = arguments[G__5152__i + 3]; ++G__5152__i;}
G__5151 = new cljs.core.IndexedSeq(G__5152__a,0);
}
return cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__5151);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$min_key.cljs$lang$maxFixedArity = 3;
cljs$core$min_key.cljs$lang$applyTo = cljs$core$min_key__4.cljs$lang$applyTo;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$min_key__2;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$min_key__3;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function cljs$core$__GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function cljs$core$array_list(){
return (new cljs.core.ArrayList([]));
});
/**
 * Returns a lazy sequence of lists like partition, but may include
 * partitions with fewer than n items at the end.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_all = (function() {
var cljs$core$partition_all = null;
var cljs$core$partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__5169 = null;
var G__5169__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__5169__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__5164 = result;
var G__5165 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__5164,G__5165) : rf.call(null,G__5164,G__5165));
})());
})());
var G__5166 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__5166) : rf.call(null,G__5166));
});
var G__5169__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__5167 = result;
var G__5168 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__5167,G__5168) : rf.call(null,G__5167,G__5168));
} else {
return result;
}
});
G__5169 = function(result,input){
switch(arguments.length){
case 0:
return G__5169__0.call(this);
case 1:
return G__5169__1.call(this,result);
case 2:
return G__5169__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5169.cljs$core$IFn$_invoke$arity$0 = G__5169__0;
G__5169.cljs$core$IFn$_invoke$arity$1 = G__5169__1;
G__5169.cljs$core$IFn$_invoke$arity$2 = G__5169__2;
return G__5169;
})()
;})(a))
});
});
var cljs$core$partition_all__2 = (function (n,coll){
return cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var cljs$core$partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
cljs$core$partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return cljs$core$partition_all__1.call(this,n);
case 2:
return cljs$core$partition_all__2.call(this,n,step);
case 3:
return cljs$core$partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_all__1;
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_all__2;
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition_all__3;
return cljs$core$partition_all;
})()
;
/**
 * Returns a lazy sequence of successive items from coll while
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.take_while = (function() {
var cljs$core$take_while = null;
var cljs$core$take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__5182 = null;
var G__5182__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__5182__1 = (function (result){
var G__5177 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__5177) : rf.call(null,G__5177));
});
var G__5182__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__5178 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__5178) : pred.call(null,G__5178));
})())){
var G__5179 = result;
var G__5180 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__5179,G__5180) : rf.call(null,G__5179,G__5180));
} else {
return cljs.core.reduced(result);
}
});
G__5182 = function(result,input){
switch(arguments.length){
case 0:
return G__5182__0.call(this);
case 1:
return G__5182__1.call(this,result);
case 2:
return G__5182__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5182.cljs$core$IFn$_invoke$arity$0 = G__5182__0;
G__5182.cljs$core$IFn$_invoke$arity$1 = G__5182__1;
G__5182.cljs$core$IFn$_invoke$arity$2 = G__5182__2;
return G__5182;
})()
});
});
var cljs$core$take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__5181 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__5181) : pred.call(null,G__5181));
})())){
return cljs.core.cons(cljs.core.first(s),cljs$core$take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
cljs$core$take_while = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$take_while__1.call(this,pred);
case 2:
return cljs$core$take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_while__1;
cljs$core$take_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_while__2;
return cljs$core$take_while;
})()
;
cljs.core.mk_bound_fn = (function cljs$core$mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__5187 = (function (){var G__5189 = cljs.core._entry_key(sc,e);
var G__5190 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__5189,G__5190) : comp.call(null,G__5189,G__5190));
})();
var G__5188 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__5187,G__5188) : test.call(null,G__5187,G__5188));
});
});
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.subseq = (function() {
var cljs$core$subseq = null;
var cljs$core$subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__5194 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5194,(0),null);
var s = vec__5194;
if(cljs.core.truth_((function (){var G__5195 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__5195) : include.call(null,G__5195));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var cljs$core$subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__5196 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5196,(0),null);
var s = vec__5196;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
cljs$core$subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return cljs$core$subseq__3.call(this,sc,start_test,start_key);
case 5:
return cljs$core$subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$subseq__3;
cljs$core$subseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$subseq__5;
return cljs$core$subseq;
})()
;
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a reverse seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.rsubseq = (function() {
var cljs$core$rsubseq = null;
var cljs$core$rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__5200 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5200,(0),null);
var s = vec__5200;
if(cljs.core.truth_((function (){var G__5201 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__5201) : include.call(null,G__5201));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var cljs$core$rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__5202 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5202,(0),null);
var s = vec__5202;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
cljs$core$rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return cljs$core$rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return cljs$core$rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$rsubseq__3;
cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$rsubseq__5;
return cljs$core$rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function cljs$core$__GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__5203 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__5203) : Math.ceil.call(null,G__5203));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__10916__auto__ = self__.__hash;
if(!((h__10916__auto__ == null))){
return h__10916__auto__;
} else {
var h__10916__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__10916__auto____$1;

return h__10916__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__5204 = ret;
var G__5205 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5204,G__5205) : f.call(null,G__5204,G__5205));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__5206 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5206) : cljs.core.deref.call(null,G__5206));
} else {
var G__5207 = (i + self__.step);
var G__5208 = ret__$1;
i = G__5207;
ret = G__5208;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function cljs$core$__GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));
/**
 * Returns a lazy seq of nums from start (inclusive) to end
 * (exclusive), by step, where start defaults to 0, step to 1,
 * and end to infinity.
 */
cljs.core.range = (function() {
var cljs$core$range = null;
var cljs$core$range__0 = (function (){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var cljs$core$range__1 = (function (end){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var cljs$core$range__2 = (function (start,end){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var cljs$core$range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
cljs$core$range = function(start,end,step){
switch(arguments.length){
case 0:
return cljs$core$range__0.call(this);
case 1:
return cljs$core$range__1.call(this,start);
case 2:
return cljs$core$range__2.call(this,start,end);
case 3:
return cljs$core$range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$range.cljs$core$IFn$_invoke$arity$0 = cljs$core$range__0;
cljs$core$range.cljs$core$IFn$_invoke$arity$1 = cljs$core$range__1;
cljs$core$range.cljs$core$IFn$_invoke$arity$2 = cljs$core$range__2;
cljs$core$range.cljs$core$IFn$_invoke$arity$3 = cljs$core$range__3;
return cljs$core$range;
})()
;
/**
 * Returns a lazy seq of every nth item in coll.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.take_nth = (function() {
var cljs$core$take_nth = null;
var cljs$core$take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__5226 = null;
var G__5226__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__5226__1 = (function (result){
var G__5223 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__5223) : rf.call(null,G__5223));
});
var G__5226__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__5224 = result;
var G__5225 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__5224,G__5225) : rf.call(null,G__5224,G__5225));
} else {
return result;
}
});
G__5226 = function(result,input){
switch(arguments.length){
case 0:
return G__5226__0.call(this);
case 1:
return G__5226__1.call(this,result);
case 2:
return G__5226__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5226.cljs$core$IFn$_invoke$arity$0 = G__5226__0;
G__5226.cljs$core$IFn$_invoke$arity$1 = G__5226__1;
G__5226.cljs$core$IFn$_invoke$arity$2 = G__5226__2;
return G__5226;
})()
;})(ia))
});
});
var cljs$core$take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
cljs$core$take_nth = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$take_nth__1.call(this,n);
case 2:
return cljs$core$take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take_nth.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_nth__1;
cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_nth__2;
return cljs$core$take_nth;
})()
;
/**
 * Returns a vector of [(take-while pred coll) (drop-while pred coll)]
 */
cljs.core.split_with = (function cljs$core$split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
 * Applies f to each value in coll, splitting it each time f returns a
 * new value.  Returns a lazy seq of partitions.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_by = (function() {
var cljs$core$partition_by = null;
var cljs$core$partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$_COLON_cljs$core_SLASH_none);
return ((function (a,pa){
return (function() {
var G__5248 = null;
var G__5248__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__5248__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__5239 = result;
var G__5240 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__5239,G__5240) : rf.call(null,G__5239,G__5240));
})());
})());
var G__5241 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__5241) : rf.call(null,G__5241));
});
var G__5248__2 = (function (result,input){
var pval = (function (){var G__5242 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5242) : cljs.core.deref.call(null,G__5242));
})();
var val = (function (){var G__5243 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__5243) : f.call(null,G__5243));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$_COLON_cljs$core_SLASH_none)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__5244 = result;
var G__5245 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__5244,G__5245) : rf.call(null,G__5244,G__5245));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__5248 = function(result,input){
switch(arguments.length){
case 0:
return G__5248__0.call(this);
case 1:
return G__5248__1.call(this,result);
case 2:
return G__5248__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5248.cljs$core$IFn$_invoke$arity$0 = G__5248__0;
G__5248.cljs$core$IFn$_invoke$arity$1 = G__5248__1;
G__5248.cljs$core$IFn$_invoke$arity$2 = G__5248__2;
return G__5248;
})()
;})(a,pa))
});
});
var cljs$core$partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__5246 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__5246) : f.call(null,G__5246));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__5227_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__5247 = p1__5227_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__5247) : f.call(null,G__5247));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
cljs$core$partition_by = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$partition_by__1.call(this,f);
case 2:
return cljs$core$partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition_by.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_by__1;
cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_by__2;
return cljs$core$partition_by;
})()
;
/**
 * Returns a map from distinct items in coll to the number of times
 * they appear.
 */
cljs.core.frequencies = (function cljs$core$frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Returns a lazy seq of the intermediate values of the reduction (as
 * per reduce) of coll by f, starting with init.
 */
cljs.core.reductions = (function() {
var cljs$core$reductions = null;
var cljs$core$reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var cljs$core$reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__5257 = init;
var G__5258 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5257,G__5258) : f.call(null,G__5257,G__5258));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
cljs$core$reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return cljs$core$reductions__2.call(this,f,init);
case 3:
return cljs$core$reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$reductions.cljs$core$IFn$_invoke$arity$2 = cljs$core$reductions__2;
cljs$core$reductions.cljs$core$IFn$_invoke$arity$3 = cljs$core$reductions__3;
return cljs$core$reductions;
})()
;
/**
 * Takes a set of functions and returns a fn that is the juxtaposition
 * of those fns.  The returned fn takes a variable number of args, and
 * returns a vector containing the result of applying each fn to the
 * args (left-to-right).
 * ((juxt a b c) x) => [(a x) (b x) (c x)]
 * @param {...*} var_args
 */
cljs.core.juxt = (function() {
var cljs$core$juxt = null;
var cljs$core$juxt__1 = (function (f){
return (function() {
var G__5353 = null;
var G__5353__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__5353__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__5311 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__5311) : f.call(null,G__5311));
})()],null));
});
var G__5353__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__5312 = x;
var G__5313 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5312,G__5313) : f.call(null,G__5312,G__5313));
})()],null));
});
var G__5353__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__5314 = x;
var G__5315 = y;
var G__5316 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__5314,G__5315,G__5316) : f.call(null,G__5314,G__5315,G__5316));
})()],null));
});
var G__5353__4 = (function() { 
var G__5354__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__5354 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__5355__i = 0, G__5355__a = new Array(arguments.length -  3);
while (G__5355__i < G__5355__a.length) {G__5355__a[G__5355__i] = arguments[G__5355__i + 3]; ++G__5355__i;}
  args = new cljs.core.IndexedSeq(G__5355__a,0);
} 
return G__5354__delegate.call(this,x,y,z,args);};
G__5354.cljs$lang$maxFixedArity = 3;
G__5354.cljs$lang$applyTo = (function (arglist__5356){
var x = cljs.core.first(arglist__5356);
arglist__5356 = cljs.core.next(arglist__5356);
var y = cljs.core.first(arglist__5356);
arglist__5356 = cljs.core.next(arglist__5356);
var z = cljs.core.first(arglist__5356);
var args = cljs.core.rest(arglist__5356);
return G__5354__delegate(x,y,z,args);
});
G__5354.cljs$core$IFn$_invoke$arity$variadic = G__5354__delegate;
return G__5354;
})()
;
G__5353 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__5353__0.call(this);
case 1:
return G__5353__1.call(this,x);
case 2:
return G__5353__2.call(this,x,y);
case 3:
return G__5353__3.call(this,x,y,z);
default:
var G__5357 = null;
if (arguments.length > 3) {
var G__5358__i = 0, G__5358__a = new Array(arguments.length -  3);
while (G__5358__i < G__5358__a.length) {G__5358__a[G__5358__i] = arguments[G__5358__i + 3]; ++G__5358__i;}
G__5357 = new cljs.core.IndexedSeq(G__5358__a,0);
}
return G__5353__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__5357);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5353.cljs$lang$maxFixedArity = 3;
G__5353.cljs$lang$applyTo = G__5353__4.cljs$lang$applyTo;
G__5353.cljs$core$IFn$_invoke$arity$0 = G__5353__0;
G__5353.cljs$core$IFn$_invoke$arity$1 = G__5353__1;
G__5353.cljs$core$IFn$_invoke$arity$2 = G__5353__2;
G__5353.cljs$core$IFn$_invoke$arity$3 = G__5353__3;
G__5353.cljs$core$IFn$_invoke$arity$variadic = G__5353__4.cljs$core$IFn$_invoke$arity$variadic;
return G__5353;
})()
});
var cljs$core$juxt__2 = (function (f,g){
return (function() {
var G__5359 = null;
var G__5359__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__5359__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__5317 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__5317) : f.call(null,G__5317));
})(),(function (){var G__5318 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__5318) : g.call(null,G__5318));
})()],null));
});
var G__5359__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__5319 = x;
var G__5320 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5319,G__5320) : f.call(null,G__5319,G__5320));
})(),(function (){var G__5321 = x;
var G__5322 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__5321,G__5322) : g.call(null,G__5321,G__5322));
})()],null));
});
var G__5359__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__5323 = x;
var G__5324 = y;
var G__5325 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__5323,G__5324,G__5325) : f.call(null,G__5323,G__5324,G__5325));
})(),(function (){var G__5326 = x;
var G__5327 = y;
var G__5328 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__5326,G__5327,G__5328) : g.call(null,G__5326,G__5327,G__5328));
})()],null));
});
var G__5359__4 = (function() { 
var G__5360__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__5360 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__5361__i = 0, G__5361__a = new Array(arguments.length -  3);
while (G__5361__i < G__5361__a.length) {G__5361__a[G__5361__i] = arguments[G__5361__i + 3]; ++G__5361__i;}
  args = new cljs.core.IndexedSeq(G__5361__a,0);
} 
return G__5360__delegate.call(this,x,y,z,args);};
G__5360.cljs$lang$maxFixedArity = 3;
G__5360.cljs$lang$applyTo = (function (arglist__5362){
var x = cljs.core.first(arglist__5362);
arglist__5362 = cljs.core.next(arglist__5362);
var y = cljs.core.first(arglist__5362);
arglist__5362 = cljs.core.next(arglist__5362);
var z = cljs.core.first(arglist__5362);
var args = cljs.core.rest(arglist__5362);
return G__5360__delegate(x,y,z,args);
});
G__5360.cljs$core$IFn$_invoke$arity$variadic = G__5360__delegate;
return G__5360;
})()
;
G__5359 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__5359__0.call(this);
case 1:
return G__5359__1.call(this,x);
case 2:
return G__5359__2.call(this,x,y);
case 3:
return G__5359__3.call(this,x,y,z);
default:
var G__5363 = null;
if (arguments.length > 3) {
var G__5364__i = 0, G__5364__a = new Array(arguments.length -  3);
while (G__5364__i < G__5364__a.length) {G__5364__a[G__5364__i] = arguments[G__5364__i + 3]; ++G__5364__i;}
G__5363 = new cljs.core.IndexedSeq(G__5364__a,0);
}
return G__5359__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__5363);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5359.cljs$lang$maxFixedArity = 3;
G__5359.cljs$lang$applyTo = G__5359__4.cljs$lang$applyTo;
G__5359.cljs$core$IFn$_invoke$arity$0 = G__5359__0;
G__5359.cljs$core$IFn$_invoke$arity$1 = G__5359__1;
G__5359.cljs$core$IFn$_invoke$arity$2 = G__5359__2;
G__5359.cljs$core$IFn$_invoke$arity$3 = G__5359__3;
G__5359.cljs$core$IFn$_invoke$arity$variadic = G__5359__4.cljs$core$IFn$_invoke$arity$variadic;
return G__5359;
})()
});
var cljs$core$juxt__3 = (function (f,g,h){
return (function() {
var G__5365 = null;
var G__5365__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__5365__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__5329 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__5329) : f.call(null,G__5329));
})(),(function (){var G__5330 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__5330) : g.call(null,G__5330));
})(),(function (){var G__5331 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__5331) : h.call(null,G__5331));
})()],null));
});
var G__5365__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__5332 = x;
var G__5333 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5332,G__5333) : f.call(null,G__5332,G__5333));
})(),(function (){var G__5334 = x;
var G__5335 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__5334,G__5335) : g.call(null,G__5334,G__5335));
})(),(function (){var G__5336 = x;
var G__5337 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__5336,G__5337) : h.call(null,G__5336,G__5337));
})()],null));
});
var G__5365__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__5338 = x;
var G__5339 = y;
var G__5340 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__5338,G__5339,G__5340) : f.call(null,G__5338,G__5339,G__5340));
})(),(function (){var G__5341 = x;
var G__5342 = y;
var G__5343 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__5341,G__5342,G__5343) : g.call(null,G__5341,G__5342,G__5343));
})(),(function (){var G__5344 = x;
var G__5345 = y;
var G__5346 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__5344,G__5345,G__5346) : h.call(null,G__5344,G__5345,G__5346));
})()],null));
});
var G__5365__4 = (function() { 
var G__5366__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__5366 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__5367__i = 0, G__5367__a = new Array(arguments.length -  3);
while (G__5367__i < G__5367__a.length) {G__5367__a[G__5367__i] = arguments[G__5367__i + 3]; ++G__5367__i;}
  args = new cljs.core.IndexedSeq(G__5367__a,0);
} 
return G__5366__delegate.call(this,x,y,z,args);};
G__5366.cljs$lang$maxFixedArity = 3;
G__5366.cljs$lang$applyTo = (function (arglist__5368){
var x = cljs.core.first(arglist__5368);
arglist__5368 = cljs.core.next(arglist__5368);
var y = cljs.core.first(arglist__5368);
arglist__5368 = cljs.core.next(arglist__5368);
var z = cljs.core.first(arglist__5368);
var args = cljs.core.rest(arglist__5368);
return G__5366__delegate(x,y,z,args);
});
G__5366.cljs$core$IFn$_invoke$arity$variadic = G__5366__delegate;
return G__5366;
})()
;
G__5365 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__5365__0.call(this);
case 1:
return G__5365__1.call(this,x);
case 2:
return G__5365__2.call(this,x,y);
case 3:
return G__5365__3.call(this,x,y,z);
default:
var G__5369 = null;
if (arguments.length > 3) {
var G__5370__i = 0, G__5370__a = new Array(arguments.length -  3);
while (G__5370__i < G__5370__a.length) {G__5370__a[G__5370__i] = arguments[G__5370__i + 3]; ++G__5370__i;}
G__5369 = new cljs.core.IndexedSeq(G__5370__a,0);
}
return G__5365__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__5369);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5365.cljs$lang$maxFixedArity = 3;
G__5365.cljs$lang$applyTo = G__5365__4.cljs$lang$applyTo;
G__5365.cljs$core$IFn$_invoke$arity$0 = G__5365__0;
G__5365.cljs$core$IFn$_invoke$arity$1 = G__5365__1;
G__5365.cljs$core$IFn$_invoke$arity$2 = G__5365__2;
G__5365.cljs$core$IFn$_invoke$arity$3 = G__5365__3;
G__5365.cljs$core$IFn$_invoke$arity$variadic = G__5365__4.cljs$core$IFn$_invoke$arity$variadic;
return G__5365;
})()
});
var cljs$core$juxt__4 = (function() { 
var G__5371__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__5372 = null;
var G__5372__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__5259_SHARP_,p2__5260_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__5259_SHARP_,(function (){return (p2__5260_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__5260_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__5260_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__5372__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__5261_SHARP_,p2__5262_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__5261_SHARP_,(function (){var G__5347 = x;
return (p2__5262_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__5262_SHARP_.cljs$core$IFn$_invoke$arity$1(G__5347) : p2__5262_SHARP_.call(null,G__5347));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__5372__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__5263_SHARP_,p2__5264_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__5263_SHARP_,(function (){var G__5348 = x;
var G__5349 = y;
return (p2__5264_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__5264_SHARP_.cljs$core$IFn$_invoke$arity$2(G__5348,G__5349) : p2__5264_SHARP_.call(null,G__5348,G__5349));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__5372__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__5265_SHARP_,p2__5266_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__5265_SHARP_,(function (){var G__5350 = x;
var G__5351 = y;
var G__5352 = z;
return (p2__5266_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__5266_SHARP_.cljs$core$IFn$_invoke$arity$3(G__5350,G__5351,G__5352) : p2__5266_SHARP_.call(null,G__5350,G__5351,G__5352));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__5372__4 = (function() { 
var G__5373__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__5267_SHARP_,p2__5268_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__5267_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__5268_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__5373 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__5374__i = 0, G__5374__a = new Array(arguments.length -  3);
while (G__5374__i < G__5374__a.length) {G__5374__a[G__5374__i] = arguments[G__5374__i + 3]; ++G__5374__i;}
  args = new cljs.core.IndexedSeq(G__5374__a,0);
} 
return G__5373__delegate.call(this,x,y,z,args);};
G__5373.cljs$lang$maxFixedArity = 3;
G__5373.cljs$lang$applyTo = (function (arglist__5375){
var x = cljs.core.first(arglist__5375);
arglist__5375 = cljs.core.next(arglist__5375);
var y = cljs.core.first(arglist__5375);
arglist__5375 = cljs.core.next(arglist__5375);
var z = cljs.core.first(arglist__5375);
var args = cljs.core.rest(arglist__5375);
return G__5373__delegate(x,y,z,args);
});
G__5373.cljs$core$IFn$_invoke$arity$variadic = G__5373__delegate;
return G__5373;
})()
;
G__5372 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__5372__0.call(this);
case 1:
return G__5372__1.call(this,x);
case 2:
return G__5372__2.call(this,x,y);
case 3:
return G__5372__3.call(this,x,y,z);
default:
var G__5376 = null;
if (arguments.length > 3) {
var G__5377__i = 0, G__5377__a = new Array(arguments.length -  3);
while (G__5377__i < G__5377__a.length) {G__5377__a[G__5377__i] = arguments[G__5377__i + 3]; ++G__5377__i;}
G__5376 = new cljs.core.IndexedSeq(G__5377__a,0);
}
return G__5372__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__5376);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5372.cljs$lang$maxFixedArity = 3;
G__5372.cljs$lang$applyTo = G__5372__4.cljs$lang$applyTo;
G__5372.cljs$core$IFn$_invoke$arity$0 = G__5372__0;
G__5372.cljs$core$IFn$_invoke$arity$1 = G__5372__1;
G__5372.cljs$core$IFn$_invoke$arity$2 = G__5372__2;
G__5372.cljs$core$IFn$_invoke$arity$3 = G__5372__3;
G__5372.cljs$core$IFn$_invoke$arity$variadic = G__5372__4.cljs$core$IFn$_invoke$arity$variadic;
return G__5372;
})()
;})(fs__$1))
};
var G__5371 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__5378__i = 0, G__5378__a = new Array(arguments.length -  3);
while (G__5378__i < G__5378__a.length) {G__5378__a[G__5378__i] = arguments[G__5378__i + 3]; ++G__5378__i;}
  fs = new cljs.core.IndexedSeq(G__5378__a,0);
} 
return G__5371__delegate.call(this,f,g,h,fs);};
G__5371.cljs$lang$maxFixedArity = 3;
G__5371.cljs$lang$applyTo = (function (arglist__5379){
var f = cljs.core.first(arglist__5379);
arglist__5379 = cljs.core.next(arglist__5379);
var g = cljs.core.first(arglist__5379);
arglist__5379 = cljs.core.next(arglist__5379);
var h = cljs.core.first(arglist__5379);
var fs = cljs.core.rest(arglist__5379);
return G__5371__delegate(f,g,h,fs);
});
G__5371.cljs$core$IFn$_invoke$arity$variadic = G__5371__delegate;
return G__5371;
})()
;
cljs$core$juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return cljs$core$juxt__1.call(this,f);
case 2:
return cljs$core$juxt__2.call(this,f,g);
case 3:
return cljs$core$juxt__3.call(this,f,g,h);
default:
var G__5380 = null;
if (arguments.length > 3) {
var G__5381__i = 0, G__5381__a = new Array(arguments.length -  3);
while (G__5381__i < G__5381__a.length) {G__5381__a[G__5381__i] = arguments[G__5381__i + 3]; ++G__5381__i;}
G__5380 = new cljs.core.IndexedSeq(G__5381__a,0);
}
return cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__5380);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$juxt.cljs$lang$maxFixedArity = 3;
cljs$core$juxt.cljs$lang$applyTo = cljs$core$juxt__4.cljs$lang$applyTo;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$1 = cljs$core$juxt__1;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$2 = cljs$core$juxt__2;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$3 = cljs$core$juxt__3;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$variadic = cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$juxt;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. dorun can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, does not retain the head and returns nil.
 */
cljs.core.dorun = (function() {
var cljs$core$dorun = null;
var cljs$core$dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__5382 = cljs.core.next(coll);
coll = G__5382;
continue;
} else {
return null;
}
break;
}
});
var cljs$core$dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__5383 = (n - (1));
var G__5384 = cljs.core.next(coll);
n = G__5383;
coll = G__5384;
continue;
} else {
return null;
}
break;
}
});
cljs$core$dorun = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$dorun__1.call(this,n);
case 2:
return cljs$core$dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dorun.cljs$core$IFn$_invoke$arity$1 = cljs$core$dorun__1;
cljs$core$dorun.cljs$core$IFn$_invoke$arity$2 = cljs$core$dorun__2;
return cljs$core$dorun;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. doall can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, retains the head and returns it, thus causing the entire
 * seq to reside in memory at one time.
 */
cljs.core.doall = (function() {
var cljs$core$doall = null;
var cljs$core$doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var cljs$core$doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
cljs$core$doall = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$doall__1.call(this,n);
case 2:
return cljs$core$doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$doall.cljs$core$IFn$_invoke$arity$1 = cljs$core$doall__1;
cljs$core$doall.cljs$core$IFn$_invoke$arity$2 = cljs$core$doall__2;
return cljs$core$doall;
})()
;
/**
 * Returns true if x is a JavaScript RegExp instance.
 */
cljs.core.regexp_QMARK_ = (function cljs$core$regexp_QMARK_(x){
return (x instanceof RegExp);
});
/**
 * Returns the result of (re-find re s) if re fully matches s.
 */
cljs.core.re_matches = (function cljs$core$re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
 * Returns the first regex match, if any, of s to re, using
 * re.exec(s). Returns a vector, containing first the matching
 * substring, then any capturing groups if the regular expression contains
 * capturing groups.
 */
cljs.core.re_find = (function cljs$core$re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
 * Returns a lazy sequence of successive matches of re in s.
 */
cljs.core.re_seq = (function cljs$core$re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?cljs$core$re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
 * Returns an instance of RegExp which has compiled the provided string.
 */
cljs.core.re_pattern = (function cljs$core$re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__5388 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5388,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5388,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5388,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function cljs$core$pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_5396 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((cljs.core.constant$keyword$_COLON_print_length.cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__10823__auto__ = cljs.core.constant$keyword$_COLON_more_marker.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__5397_5403 = cljs.core.first(coll);
var G__5398_5404 = writer;
var G__5399_5405 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__5397_5403,G__5398_5404,G__5399_5405) : print_one.call(null,G__5397_5403,G__5398_5404,G__5399_5405));
} else {
}

var coll_5406__$1 = cljs.core.next(coll);
var n_5407 = (cljs.core.constant$keyword$_COLON_print_length.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_5406__$1) && (((n_5407 == null)) || (!((n_5407 === (0)))))){
cljs.core._write(writer,sep);

var G__5400_5408 = cljs.core.first(coll_5406__$1);
var G__5401_5409 = writer;
var G__5402_5410 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__5400_5408,G__5401_5409,G__5402_5410) : print_one.call(null,G__5400_5408,G__5401_5409,G__5402_5410));

var G__5411 = cljs.core.next(coll_5406__$1);
var G__5412 = (n_5407 - (1));
coll_5406__$1 = G__5411;
n_5407 = G__5412;
continue;
} else {
if((cljs.core.seq(coll_5406__$1)) && ((n_5407 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__10823__auto__ = cljs.core.constant$keyword$_COLON_more_marker.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_5396;
}});
/**
 * @param {...*} var_args
 */
cljs.core.write_all = (function() { 
var cljs$core$write_all__delegate = function (writer,ss){
var seq__5417 = cljs.core.seq(ss);
var chunk__5418 = null;
var count__5419 = (0);
var i__5420 = (0);
while(true){
if((i__5420 < count__5419)){
var s = chunk__5418.cljs$core$IIndexed$_nth$arity$2(null,i__5420);
cljs.core._write(writer,s);

var G__5421 = seq__5417;
var G__5422 = chunk__5418;
var G__5423 = count__5419;
var G__5424 = (i__5420 + (1));
seq__5417 = G__5421;
chunk__5418 = G__5422;
count__5419 = G__5423;
i__5420 = G__5424;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__5417);
if(temp__4126__auto__){
var seq__5417__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__5417__$1)){
var c__11190__auto__ = cljs.core.chunk_first(seq__5417__$1);
var G__5425 = cljs.core.chunk_rest(seq__5417__$1);
var G__5426 = c__11190__auto__;
var G__5427 = cljs.core.count(c__11190__auto__);
var G__5428 = (0);
seq__5417 = G__5425;
chunk__5418 = G__5426;
count__5419 = G__5427;
i__5420 = G__5428;
continue;
} else {
var s = cljs.core.first(seq__5417__$1);
cljs.core._write(writer,s);

var G__5429 = cljs.core.next(seq__5417__$1);
var G__5430 = null;
var G__5431 = (0);
var G__5432 = (0);
seq__5417 = G__5429;
chunk__5418 = G__5430;
count__5419 = G__5431;
i__5420 = G__5432;
continue;
}
} else {
return null;
}
}
break;
}
};
var cljs$core$write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__5433__i = 0, G__5433__a = new Array(arguments.length -  1);
while (G__5433__i < G__5433__a.length) {G__5433__a[G__5433__i] = arguments[G__5433__i + 1]; ++G__5433__i;}
  ss = new cljs.core.IndexedSeq(G__5433__a,0);
} 
return cljs$core$write_all__delegate.call(this,writer,ss);};
cljs$core$write_all.cljs$lang$maxFixedArity = 1;
cljs$core$write_all.cljs$lang$applyTo = (function (arglist__5434){
var writer = cljs.core.first(arglist__5434);
var ss = cljs.core.rest(arglist__5434);
return cljs$core$write_all__delegate(writer,ss);
});
cljs$core$write_all.cljs$core$IFn$_invoke$arity$variadic = cljs$core$write_all__delegate;
return cljs$core$write_all;
})()
;
cljs.core.string_print = (function cljs$core$string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function cljs$core$flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj5436 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj5436;
})();
cljs.core.quote_string = (function cljs$core$quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__5439 = "[\\\\\"\b\f\n\r\t]";
var G__5440 = "g";
return RegExp(G__5439,G__5440);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function cljs$core$pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__10815__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$_COLON_meta);
if(cljs.core.truth_(and__10815__auto__)){
var and__10815__auto____$1 = (function (){var G__5454 = obj;
if(G__5454){
var bit__11120__auto__ = (G__5454.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__11120__auto__) || (G__5454.cljs$core$IMeta$)){
return true;
} else {
if((!G__5454.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__5454);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__5454);
}
})();
if(and__10815__auto____$1){
return cljs.core.meta(obj);
} else {
return and__10815__auto____$1;
}
} else {
return and__10815__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__5455_5465 = cljs.core.meta(obj);
var G__5456_5466 = writer;
var G__5457_5467 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__5455_5465,G__5456_5466,G__5457_5467) : cljs.core.pr_writer.call(null,G__5455_5465,G__5456_5466,G__5457_5467));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__5458 = obj;
if(G__5458){
var bit__11117__auto__ = (G__5458.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__11117__auto__) || (G__5458.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__5459 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__5460 = cljs.core.pr_writer;
var G__5461 = writer;
var G__5462 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__5459,G__5460,G__5461,G__5462) : cljs.core.print_map.call(null,G__5459,G__5460,G__5461,G__5462));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__5463 = obj;
return goog.isString(G__5463);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$_COLON_readably.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__5468 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__5468;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__5464 = obj;
if(G__5464){
var bit__11120__auto__ = (G__5464.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__11120__auto__) || (G__5464.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__5464.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__5464);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__5464);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
 * Prefer this to pr-seq, because it makes the printing function
 * configurable, allowing efficient implementations such as appending
 * to a StringBuffer.
 */
cljs.core.pr_writer = (function cljs$core$pr_writer(obj,writer,opts){
var temp__4124__auto__ = cljs.core.constant$keyword$_COLON_alt_impl.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__5472 = obj;
var G__5473 = writer;
var G__5474 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,cljs.core.constant$keyword$_COLON_fallback_impl,cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__5472,G__5473,G__5474) : alt_impl.call(null,G__5472,G__5473,G__5474));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function cljs$core$pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__5479 = cljs.core.seq(cljs.core.next(objs));
var chunk__5480 = null;
var count__5481 = (0);
var i__5482 = (0);
while(true){
if((i__5482 < count__5481)){
var obj = chunk__5480.cljs$core$IIndexed$_nth$arity$2(null,i__5482);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__5483 = seq__5479;
var G__5484 = chunk__5480;
var G__5485 = count__5481;
var G__5486 = (i__5482 + (1));
seq__5479 = G__5483;
chunk__5480 = G__5484;
count__5481 = G__5485;
i__5482 = G__5486;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__5479);
if(temp__4126__auto__){
var seq__5479__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__5479__$1)){
var c__11190__auto__ = cljs.core.chunk_first(seq__5479__$1);
var G__5487 = cljs.core.chunk_rest(seq__5479__$1);
var G__5488 = c__11190__auto__;
var G__5489 = cljs.core.count(c__11190__auto__);
var G__5490 = (0);
seq__5479 = G__5487;
chunk__5480 = G__5488;
count__5481 = G__5489;
i__5482 = G__5490;
continue;
} else {
var obj = cljs.core.first(seq__5479__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__5491 = cljs.core.next(seq__5479__$1);
var G__5492 = null;
var G__5493 = (0);
var G__5494 = (0);
seq__5479 = G__5491;
chunk__5480 = G__5492;
count__5481 = G__5493;
i__5482 = G__5494;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function cljs$core$pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
 * Prints a sequence of objects to a string, observing all the
 * options given in opts
 */
cljs.core.pr_str_with_opts = (function cljs$core$pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
 * Same as pr-str-with-opts followed by (newline)
 */
cljs.core.prn_str_with_opts = (function cljs$core$prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
 * Prints a sequence of objects using string-print, observing all
 * the options given in opts
 */
cljs.core.pr_with_opts = (function cljs$core$pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function cljs$core$newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$_COLON_flush_on_newline))){
return cljs.core.flush();
} else {
return null;
}
});
/**
 * pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
 * @param {...*} var_args
 */
cljs.core.pr_str = (function() { 
var cljs$core$pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__5495__i = 0, G__5495__a = new Array(arguments.length -  0);
while (G__5495__i < G__5495__a.length) {G__5495__a[G__5495__i] = arguments[G__5495__i + 0]; ++G__5495__i;}
  objs = new cljs.core.IndexedSeq(G__5495__a,0);
} 
return cljs$core$pr_str__delegate.call(this,objs);};
cljs$core$pr_str.cljs$lang$maxFixedArity = 0;
cljs$core$pr_str.cljs$lang$applyTo = (function (arglist__5496){
var objs = cljs.core.seq(arglist__5496);
return cljs$core$pr_str__delegate(objs);
});
cljs$core$pr_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr_str__delegate;
return cljs$core$pr_str;
})()
;
/**
 * Same as pr-str followed by (newline)
 * @param {...*} var_args
 */
cljs.core.prn_str = (function() { 
var cljs$core$prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__5497__i = 0, G__5497__a = new Array(arguments.length -  0);
while (G__5497__i < G__5497__a.length) {G__5497__a[G__5497__i] = arguments[G__5497__i + 0]; ++G__5497__i;}
  objs = new cljs.core.IndexedSeq(G__5497__a,0);
} 
return cljs$core$prn_str__delegate.call(this,objs);};
cljs$core$prn_str.cljs$lang$maxFixedArity = 0;
cljs$core$prn_str.cljs$lang$applyTo = (function (arglist__5498){
var objs = cljs.core.seq(arglist__5498);
return cljs$core$prn_str__delegate(objs);
});
cljs$core$prn_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn_str__delegate;
return cljs$core$prn_str;
})()
;
/**
 * Prints the object(s) using string-print.  Prints the
 * object(s), separated by spaces if there is more than one.
 * By default, pr and prn print in a way that objects can be
 * read by the reader
 * @param {...*} var_args
 */
cljs.core.pr = (function() { 
var cljs$core$pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__5499__i = 0, G__5499__a = new Array(arguments.length -  0);
while (G__5499__i < G__5499__a.length) {G__5499__a[G__5499__i] = arguments[G__5499__i + 0]; ++G__5499__i;}
  objs = new cljs.core.IndexedSeq(G__5499__a,0);
} 
return cljs$core$pr__delegate.call(this,objs);};
cljs$core$pr.cljs$lang$maxFixedArity = 0;
cljs$core$pr.cljs$lang$applyTo = (function (arglist__5500){
var objs = cljs.core.seq(arglist__5500);
return cljs$core$pr__delegate(objs);
});
cljs$core$pr.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr__delegate;
return cljs$core$pr;
})()
;
/**
 * Prints the object(s) using string-print.
 * print and println produce output for human consumption.
 * @param {...*} var_args
 */
cljs.core.print = (function() { 
var cljs$core$cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$_COLON_readably,false));
};
var cljs$core$cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__5501__i = 0, G__5501__a = new Array(arguments.length -  0);
while (G__5501__i < G__5501__a.length) {G__5501__a[G__5501__i] = arguments[G__5501__i + 0]; ++G__5501__i;}
  objs = new cljs.core.IndexedSeq(G__5501__a,0);
} 
return cljs$core$cljs_core_print__delegate.call(this,objs);};
cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs$core$cljs_core_print.cljs$lang$applyTo = (function (arglist__5502){
var objs = cljs.core.seq(arglist__5502);
return cljs$core$cljs_core_print__delegate(objs);
});
cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
return cljs$core$cljs_core_print;
})()
;
/**
 * print to a string, returning it
 * @param {...*} var_args
 */
cljs.core.print_str = (function() { 
var cljs$core$print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$_COLON_readably,false));
};
var cljs$core$print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__5503__i = 0, G__5503__a = new Array(arguments.length -  0);
while (G__5503__i < G__5503__a.length) {G__5503__a[G__5503__i] = arguments[G__5503__i + 0]; ++G__5503__i;}
  objs = new cljs.core.IndexedSeq(G__5503__a,0);
} 
return cljs$core$print_str__delegate.call(this,objs);};
cljs$core$print_str.cljs$lang$maxFixedArity = 0;
cljs$core$print_str.cljs$lang$applyTo = (function (arglist__5504){
var objs = cljs.core.seq(arglist__5504);
return cljs$core$print_str__delegate(objs);
});
cljs$core$print_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$print_str__delegate;
return cljs$core$print_str;
})()
;
/**
 * Same as print followed by (newline)
 * @param {...*} var_args
 */
cljs.core.println = (function() { 
var cljs$core$println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$_COLON_readably,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var cljs$core$println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__5505__i = 0, G__5505__a = new Array(arguments.length -  0);
while (G__5505__i < G__5505__a.length) {G__5505__a[G__5505__i] = arguments[G__5505__i + 0]; ++G__5505__i;}
  objs = new cljs.core.IndexedSeq(G__5505__a,0);
} 
return cljs$core$println__delegate.call(this,objs);};
cljs$core$println.cljs$lang$maxFixedArity = 0;
cljs$core$println.cljs$lang$applyTo = (function (arglist__5506){
var objs = cljs.core.seq(arglist__5506);
return cljs$core$println__delegate(objs);
});
cljs$core$println.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println__delegate;
return cljs$core$println;
})()
;
/**
 * println to a string, returning it
 * @param {...*} var_args
 */
cljs.core.println_str = (function() { 
var cljs$core$println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$_COLON_readably,false));
};
var cljs$core$println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__5507__i = 0, G__5507__a = new Array(arguments.length -  0);
while (G__5507__i < G__5507__a.length) {G__5507__a[G__5507__i] = arguments[G__5507__i + 0]; ++G__5507__i;}
  objs = new cljs.core.IndexedSeq(G__5507__a,0);
} 
return cljs$core$println_str__delegate.call(this,objs);};
cljs$core$println_str.cljs$lang$maxFixedArity = 0;
cljs$core$println_str.cljs$lang$applyTo = (function (arglist__5508){
var objs = cljs.core.seq(arglist__5508);
return cljs$core$println_str__delegate(objs);
});
cljs$core$println_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println_str__delegate;
return cljs$core$println_str;
})()
;
/**
 * Same as pr followed by (newline).
 * @param {...*} var_args
 */
cljs.core.prn = (function() { 
var cljs$core$prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var cljs$core$prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__5509__i = 0, G__5509__a = new Array(arguments.length -  0);
while (G__5509__i < G__5509__a.length) {G__5509__a[G__5509__i] = arguments[G__5509__i + 0]; ++G__5509__i;}
  objs = new cljs.core.IndexedSeq(G__5509__a,0);
} 
return cljs$core$prn__delegate.call(this,objs);};
cljs$core$prn.cljs$lang$maxFixedArity = 0;
cljs$core$prn.cljs$lang$applyTo = (function (arglist__5510){
var objs = cljs.core.seq(arglist__5510);
return cljs$core$prn__delegate(objs);
});
cljs$core$prn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn__delegate;
return cljs$core$prn;
})()
;
cljs.core.print_map = (function cljs$core$print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__5517_5523 = cljs.core.key(e);
var G__5518_5524 = w;
var G__5519_5525 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__5517_5523,G__5518_5524,G__5519_5525) : print_one.call(null,G__5517_5523,G__5518_5524,G__5519_5525));

cljs.core._write(w," ");

var G__5520 = cljs.core.val(e);
var G__5521 = w;
var G__5522 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__5520,G__5521,G__5522) : print_one.call(null,G__5520,G__5521,G__5522));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
 * Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
 * 
 * (apply f its-current-meta args)
 * 
 * f must be free of side-effects
 * @param {...*} var_args
 */
cljs.core.alter_meta_BANG_ = (function() { 
var cljs$core$alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var cljs$core$alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__5526__i = 0, G__5526__a = new Array(arguments.length -  2);
while (G__5526__i < G__5526__a.length) {G__5526__a[G__5526__i] = arguments[G__5526__i + 2]; ++G__5526__i;}
  args = new cljs.core.IndexedSeq(G__5526__a,0);
} 
return cljs$core$alter_meta_BANG___delegate.call(this,iref,f,args);};
cljs$core$alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__5527){
var iref = cljs.core.first(arglist__5527);
arglist__5527 = cljs.core.next(arglist__5527);
var f = cljs.core.first(arglist__5527);
var args = cljs.core.rest(arglist__5527);
return cljs$core$alter_meta_BANG___delegate(iref,f,args);
});
cljs$core$alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$alter_meta_BANG___delegate;
return cljs$core$alter_meta_BANG_;
})()
;
/**
 * Atomically resets the metadata for an atom
 */
cljs.core.reset_meta_BANG_ = (function cljs$core$reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
 * Alpha - subject to change.
 * 
 * Adds a watch function to an atom reference. The watch fn must be a
 * fn of 4 args: a key, the reference, its old-state, its
 * new-state. Whenever the reference's state might have been changed,
 * any registered watches will have their functions called. The watch
 * fn will be called synchronously. Note that an atom's state
 * may have changed again prior to the fn call, so use old/new-state
 * rather than derefing the reference. Keys must be unique per
 * reference, and can be used to remove the watch with remove-watch,
 * but are otherwise considered opaque by the watch mechanism.  Bear in
 * mind that regardless of the result or action of the watch fns the
 * atom's value will change.  Example:
 * 
 * (def a (atom 0))
 * (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
 * (swap! a inc)
 * ;; Assertion Error
 * (deref a)
 * ;=> 1
 */
cljs.core.add_watch = (function cljs$core$add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
 * Alpha - subject to change.
 * 
 * Removes a watch (set by add-watch) from a reference
 */
cljs.core.remove_watch = (function cljs$core$remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
 * Returns a new symbol with a unique name. If a prefix string is
 * supplied, the name is prefix# where # is some unique number. If
 * prefix is not supplied, the prefix is 'G__'.
 */
cljs.core.gensym = (function() {
var cljs$core$gensym = null;
var cljs$core$gensym__0 = (function (){
return cljs$core$gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var cljs$core$gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__5530 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__5530) : cljs.core.atom.call(null,G__5530));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
cljs$core$gensym = function(prefix_string){
switch(arguments.length){
case 0:
return cljs$core$gensym__0.call(this);
case 1:
return cljs$core$gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$gensym.cljs$core$IFn$_invoke$arity$0 = cljs$core$gensym__0;
cljs$core$gensym.cljs$core$IFn$_invoke$arity$1 = cljs$core$gensym__1;
return cljs$core$gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function cljs$core$__GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
 * returns true if x is a Delay created with delay
 */
cljs.core.delay_QMARK_ = (function cljs$core$delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
 * If x is a Delay, returns the (possibly cached) value of its expression, else returns x
 */
cljs.core.force = (function cljs$core$force(x){
if(cljs.core.delay_QMARK_(x)){
var G__5532 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5532) : cljs.core.deref.call(null,G__5532));
} else {
return x;
}
});
/**
 * Returns true if a value has been produced for a promise, delay, future or lazy sequence.
 */
cljs.core.realized_QMARK_ = (function cljs$core$realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function cljs$core$preserving_reduced(rf){
return (function (p1__5533_SHARP_,p2__5534_SHARP_){
var ret = (function (){var G__5537 = p1__5533_SHARP_;
var G__5538 = p2__5534_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__5537,G__5538) : rf.call(null,G__5537,G__5538));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
 * A transducer which concatenates the contents of each input, which must be a
 * collection, into the reduction.
 */
cljs.core.cat = (function cljs$core$cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__5541 = null;
var G__5541__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__5541__1 = (function (result){
var G__5540 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__5540) : rf.call(null,G__5540));
});
var G__5541__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__5541 = function(result,input){
switch(arguments.length){
case 0:
return G__5541__0.call(this);
case 1:
return G__5541__1.call(this,result);
case 2:
return G__5541__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5541.cljs$core$IFn$_invoke$arity$0 = G__5541__0;
G__5541.cljs$core$IFn$_invoke$arity$1 = G__5541__1;
G__5541.cljs$core$IFn$_invoke$arity$2 = G__5541__2;
return G__5541;
})()
;})(rf1))
});
/**
 * Returns a lazy sequence removing consecutive duplicates in coll.
 * Returns a transducer when no collection is provided.
 */
cljs.core.dedupe = (function() {
var cljs$core$dedupe = null;
var cljs$core$dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$_COLON_cljs$core_SLASH_none);
return ((function (pa){
return (function() {
var G__5550 = null;
var G__5550__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__5550__1 = (function (result){
var G__5546 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__5546) : rf.call(null,G__5546));
});
var G__5550__2 = (function (result,input){
var prior = (function (){var G__5547 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5547) : cljs.core.deref.call(null,G__5547));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__5548 = result;
var G__5549 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__5548,G__5549) : rf.call(null,G__5548,G__5549));
}
});
G__5550 = function(result,input){
switch(arguments.length){
case 0:
return G__5550__0.call(this);
case 1:
return G__5550__1.call(this,result);
case 2:
return G__5550__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5550.cljs$core$IFn$_invoke$arity$0 = G__5550__0;
G__5550.cljs$core$IFn$_invoke$arity$1 = G__5550__1;
G__5550.cljs$core$IFn$_invoke$arity$2 = G__5550__2;
return G__5550;
})()
;})(pa))
});
});
var cljs$core$dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
cljs$core$dedupe = function(coll){
switch(arguments.length){
case 0:
return cljs$core$dedupe__0.call(this);
case 1:
return cljs$core$dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0 = cljs$core$dedupe__0;
cljs$core$dedupe.cljs$core$IFn$_invoke$arity$1 = cljs$core$dedupe__1;
return cljs$core$dedupe;
})()
;
/**
 * Returns items from coll with random probability of prob (0.0 -
 * 1.0).  Returns a transducer when no collection is provided.
 */
cljs.core.random_sample = (function() {
var cljs$core$random_sample = null;
var cljs$core$random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var cljs$core$random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
cljs$core$random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return cljs$core$random_sample__1.call(this,prob);
case 2:
return cljs$core$random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$random_sample.cljs$core$IFn$_invoke$arity$1 = cljs$core$random_sample__1;
cljs$core$random_sample.cljs$core$IFn$_invoke$arity$2 = cljs$core$random_sample__2;
return cljs$core$random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function cljs$core$__GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__11297__auto__ = this;
return cljs.core.es6_iterator(this__11297__auto__);
}));
/**
 * Returns a reducible/iterable/seqable application of
 * the transducer to the items in coll. Note that these applications
 * will be performed every time iterator/seq/reduce is called.
 */
cljs.core.eduction = (function cljs$core$eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
 * Runs the supplied procedure (via reduce), for purposes of side
 * effects, on successive items in the collection. Returns nil
 */
cljs.core.run_BANG_ = (function cljs$core$run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__5552_SHARP_,p2__5551_SHARP_){
var G__5554 = p2__5551_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__5554) : proc.call(null,G__5554));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj5556 = {};
return obj5556;
})();

cljs.core._clj__GT_js = (function cljs$core$_clj__GT_js(x){
if((function (){var and__10815__auto__ = x;
if(and__10815__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__10815__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__11091__auto__ = (((x == null))?null:x);
return (function (){var or__10823__auto__ = (cljs.core._clj__GT_js[(function (){var G__5560 = x__11091__auto__;
return goog.typeOf(G__5560);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function cljs$core$_key__GT_js(x){
if((function (){var and__10815__auto__ = x;
if(and__10815__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__10815__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__11091__auto__ = (((x == null))?null:x);
return (function (){var or__10823__auto__ = (cljs.core._key__GT_js[(function (){var G__5564 = x__11091__auto__;
return goog.typeOf(G__5564);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function cljs$core$key__GT_js(k){
if((function (){var G__5567 = k;
if(G__5567){
var bit__11120__auto__ = null;
if(cljs.core.truth_((function (){var or__10823__auto__ = bit__11120__auto__;
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
return G__5567.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__5567.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__5567);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__5567);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__5568 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__5568) : cljs.core.clj__GT_js.call(null,G__5568));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
 * Recursively transforms ClojureScript values to JavaScript.
 * sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
 * Maps become Objects. Arbitrary keys are encoded to by key->js.
 */
cljs.core.clj__GT_js = (function cljs$core$clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__5584 = x;
if(G__5584){
var bit__11120__auto__ = null;
if(cljs.core.truth_((function (){var or__10823__auto__ = bit__11120__auto__;
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
return G__5584.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__5584.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__5584);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__5584);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj5586 = {};
return obj5586;
})();
var seq__5587_5597 = cljs.core.seq(x);
var chunk__5588_5598 = null;
var count__5589_5599 = (0);
var i__5590_5600 = (0);
while(true){
if((i__5590_5600 < count__5589_5599)){
var vec__5591_5601 = chunk__5588_5598.cljs$core$IIndexed$_nth$arity$2(null,i__5590_5600);
var k_5602 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5591_5601,(0),null);
var v_5603 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5591_5601,(1),null);
(m[cljs.core.key__GT_js(k_5602)] = cljs$core$clj__GT_js(v_5603));

var G__5604 = seq__5587_5597;
var G__5605 = chunk__5588_5598;
var G__5606 = count__5589_5599;
var G__5607 = (i__5590_5600 + (1));
seq__5587_5597 = G__5604;
chunk__5588_5598 = G__5605;
count__5589_5599 = G__5606;
i__5590_5600 = G__5607;
continue;
} else {
var temp__4126__auto___5608 = cljs.core.seq(seq__5587_5597);
if(temp__4126__auto___5608){
var seq__5587_5609__$1 = temp__4126__auto___5608;
if(cljs.core.chunked_seq_QMARK_(seq__5587_5609__$1)){
var c__11190__auto___5610 = cljs.core.chunk_first(seq__5587_5609__$1);
var G__5611 = cljs.core.chunk_rest(seq__5587_5609__$1);
var G__5612 = c__11190__auto___5610;
var G__5613 = cljs.core.count(c__11190__auto___5610);
var G__5614 = (0);
seq__5587_5597 = G__5611;
chunk__5588_5598 = G__5612;
count__5589_5599 = G__5613;
i__5590_5600 = G__5614;
continue;
} else {
var vec__5592_5615 = cljs.core.first(seq__5587_5609__$1);
var k_5616 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5592_5615,(0),null);
var v_5617 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5592_5615,(1),null);
(m[cljs.core.key__GT_js(k_5616)] = cljs$core$clj__GT_js(v_5617));

var G__5618 = cljs.core.next(seq__5587_5609__$1);
var G__5619 = null;
var G__5620 = (0);
var G__5621 = (0);
seq__5587_5597 = G__5618;
chunk__5588_5598 = G__5619;
count__5589_5599 = G__5620;
i__5590_5600 = G__5621;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__5593_5622 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js,x));
var chunk__5594_5623 = null;
var count__5595_5624 = (0);
var i__5596_5625 = (0);
while(true){
if((i__5596_5625 < count__5595_5624)){
var x_5626__$1 = chunk__5594_5623.cljs$core$IIndexed$_nth$arity$2(null,i__5596_5625);
arr.push(x_5626__$1);

var G__5627 = seq__5593_5622;
var G__5628 = chunk__5594_5623;
var G__5629 = count__5595_5624;
var G__5630 = (i__5596_5625 + (1));
seq__5593_5622 = G__5627;
chunk__5594_5623 = G__5628;
count__5595_5624 = G__5629;
i__5596_5625 = G__5630;
continue;
} else {
var temp__4126__auto___5631 = cljs.core.seq(seq__5593_5622);
if(temp__4126__auto___5631){
var seq__5593_5632__$1 = temp__4126__auto___5631;
if(cljs.core.chunked_seq_QMARK_(seq__5593_5632__$1)){
var c__11190__auto___5633 = cljs.core.chunk_first(seq__5593_5632__$1);
var G__5634 = cljs.core.chunk_rest(seq__5593_5632__$1);
var G__5635 = c__11190__auto___5633;
var G__5636 = cljs.core.count(c__11190__auto___5633);
var G__5637 = (0);
seq__5593_5622 = G__5634;
chunk__5594_5623 = G__5635;
count__5595_5624 = G__5636;
i__5596_5625 = G__5637;
continue;
} else {
var x_5638__$1 = cljs.core.first(seq__5593_5632__$1);
arr.push(x_5638__$1);

var G__5639 = cljs.core.next(seq__5593_5632__$1);
var G__5640 = null;
var G__5641 = (0);
var G__5642 = (0);
seq__5593_5622 = G__5639;
chunk__5594_5623 = G__5640;
count__5595_5624 = G__5641;
i__5596_5625 = G__5642;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj5644 = {};
return obj5644;
})();

cljs.core._js__GT_clj = (function cljs$core$_js__GT_clj(x,options){
if((function (){var and__10815__auto__ = x;
if(and__10815__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__10815__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__11091__auto__ = (((x == null))?null:x);
return (function (){var or__10823__auto__ = (cljs.core._js__GT_clj[(function (){var G__5648 = x__11091__auto__;
return goog.typeOf(G__5648);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
 * Recursively transforms JavaScript arrays into ClojureScript
 * vectors, and JavaScript objects into ClojureScript maps.  With
 * option ':keywordize-keys true' will convert object fields from
 * strings to keywords.
 * @param {...*} var_args
 */
cljs.core.js__GT_clj = (function() {
var cljs$core$js__GT_clj = null;
var cljs$core$js__GT_clj__1 = (function (x){
return cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$_COLON_keywordize_keys,false], null)], 0));
});
var cljs$core$js__GT_clj__2 = (function() { 
var G__5705__delegate = function (x,opts){
var map__5678 = opts;
var map__5678__$1 = ((cljs.core.seq_QMARK_(map__5678))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__5678):map__5678);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__5678__$1,cljs.core.constant$keyword$_COLON_keywordize_keys);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__5678,map__5678__$1,keywordize_keys,keyfn){
return (function cljs$core$js__GT_clj_$_thisfn(x__$1){
if((function (){var G__5694 = x__$1;
if(G__5694){
var bit__11120__auto__ = null;
if(cljs.core.truth_((function (){var or__10823__auto__ = bit__11120__auto__;
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
return G__5694.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__5694.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__5694);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__5694);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__11163__auto__ = ((function (map__5678,map__5678__$1,keywordize_keys,keyfn){
return (function cljs$core$js__GT_clj_$_thisfn_$_iter__5695(s__5696){
return (new cljs.core.LazySeq(null,((function (map__5678,map__5678__$1,keywordize_keys,keyfn){
return (function (){
var s__5696__$1 = s__5696;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__5696__$1);
if(temp__4126__auto__){
var s__5696__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__5696__$2)){
var c__11161__auto__ = cljs.core.chunk_first(s__5696__$2);
var size__11162__auto__ = cljs.core.count(c__11161__auto__);
var b__5698 = cljs.core.chunk_buffer(size__11162__auto__);
if((function (){var i__5697 = (0);
while(true){
if((i__5697 < size__11162__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__11161__auto__,i__5697);
cljs.core.chunk_append(b__5698,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__5703 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__5703) : keyfn.call(null,G__5703));
})(),cljs$core$js__GT_clj_$_thisfn((x__$1[k]))], null));

var G__5706 = (i__5697 + (1));
i__5697 = G__5706;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__5698),cljs$core$js__GT_clj_$_thisfn_$_iter__5695(cljs.core.chunk_rest(s__5696__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__5698),null);
}
} else {
var k = cljs.core.first(s__5696__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__5704 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__5704) : keyfn.call(null,G__5704));
})(),cljs$core$js__GT_clj_$_thisfn((x__$1[k]))], null),cljs$core$js__GT_clj_$_thisfn_$_iter__5695(cljs.core.rest(s__5696__$2)));
}
} else {
return null;
}
break;
}
});})(map__5678,map__5678__$1,keywordize_keys,keyfn))
,null,null));
});})(map__5678,map__5678__$1,keywordize_keys,keyfn))
;
return iter__11163__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__5678,map__5678__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__5705 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__5707__i = 0, G__5707__a = new Array(arguments.length -  1);
while (G__5707__i < G__5707__a.length) {G__5707__a[G__5707__i] = arguments[G__5707__i + 1]; ++G__5707__i;}
  opts = new cljs.core.IndexedSeq(G__5707__a,0);
} 
return G__5705__delegate.call(this,x,opts);};
G__5705.cljs$lang$maxFixedArity = 1;
G__5705.cljs$lang$applyTo = (function (arglist__5708){
var x = cljs.core.first(arglist__5708);
var opts = cljs.core.rest(arglist__5708);
return G__5705__delegate(x,opts);
});
G__5705.cljs$core$IFn$_invoke$arity$variadic = G__5705__delegate;
return G__5705;
})()
;
cljs$core$js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return cljs$core$js__GT_clj__1.call(this,x);
default:
var G__5709 = null;
if (arguments.length > 1) {
var G__5710__i = 0, G__5710__a = new Array(arguments.length -  1);
while (G__5710__i < G__5710__a.length) {G__5710__a[G__5710__i] = arguments[G__5710__i + 1]; ++G__5710__i;}
G__5709 = new cljs.core.IndexedSeq(G__5710__a,0);
}
return cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__5709);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs$core$js__GT_clj.cljs$lang$applyTo = cljs$core$js__GT_clj__2.cljs$lang$applyTo;
cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$1 = cljs$core$js__GT_clj__1;
cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$js__GT_clj;
})()
;
/**
 * Returns a memoized version of a referentially transparent function. The
 * memoized version of the function keeps a cache of the mapping from arguments
 * to results and, when calls with the same arguments are repeated often, has
 * higher performance at the expense of higher memory use.
 */
cljs.core.memoize = (function cljs$core$memoize(f){
var mem = (function (){var G__5713 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__5713) : cljs.core.atom.call(null,G__5713));
})();
return ((function (mem){
return (function() { 
var G__5715__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__5714 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5714) : cljs.core.deref.call(null,G__5714));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__5715 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__5716__i = 0, G__5716__a = new Array(arguments.length -  0);
while (G__5716__i < G__5716__a.length) {G__5716__a[G__5716__i] = arguments[G__5716__i + 0]; ++G__5716__i;}
  args = new cljs.core.IndexedSeq(G__5716__a,0);
} 
return G__5715__delegate.call(this,args);};
G__5715.cljs$lang$maxFixedArity = 0;
G__5715.cljs$lang$applyTo = (function (arglist__5717){
var args = cljs.core.seq(arglist__5717);
return G__5715__delegate(args);
});
G__5715.cljs$core$IFn$_invoke$arity$variadic = G__5715__delegate;
return G__5715;
})()
;
;})(mem))
});
/**
 * trampoline can be used to convert algorithms requiring mutual
 * recursion without stack consumption. Calls f with supplied args, if
 * any. If f returns a fn, calls that fn with no arguments, and
 * continues to repeat, until the return value is not a fn, then
 * returns that non-fn value. Note that if you want to return a fn as a
 * final value, you must wrap it in some data structure and unpack it
 * after trampoline returns.
 * @param {...*} var_args
 */
cljs.core.trampoline = (function() {
var cljs$core$trampoline = null;
var cljs$core$trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__5719 = ret;
f = G__5719;
continue;
} else {
return ret;
}
break;
}
});
var cljs$core$trampoline__2 = (function() { 
var G__5720__delegate = function (f,args){
return cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__5720 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__5721__i = 0, G__5721__a = new Array(arguments.length -  1);
while (G__5721__i < G__5721__a.length) {G__5721__a[G__5721__i] = arguments[G__5721__i + 1]; ++G__5721__i;}
  args = new cljs.core.IndexedSeq(G__5721__a,0);
} 
return G__5720__delegate.call(this,f,args);};
G__5720.cljs$lang$maxFixedArity = 1;
G__5720.cljs$lang$applyTo = (function (arglist__5722){
var f = cljs.core.first(arglist__5722);
var args = cljs.core.rest(arglist__5722);
return G__5720__delegate(f,args);
});
G__5720.cljs$core$IFn$_invoke$arity$variadic = G__5720__delegate;
return G__5720;
})()
;
cljs$core$trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return cljs$core$trampoline__1.call(this,f);
default:
var G__5723 = null;
if (arguments.length > 1) {
var G__5724__i = 0, G__5724__a = new Array(arguments.length -  1);
while (G__5724__i < G__5724__a.length) {G__5724__a[G__5724__i] = arguments[G__5724__i + 1]; ++G__5724__i;}
G__5723 = new cljs.core.IndexedSeq(G__5724__a,0);
}
return cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__5723);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$trampoline.cljs$lang$maxFixedArity = 1;
cljs$core$trampoline.cljs$lang$applyTo = cljs$core$trampoline__2.cljs$lang$applyTo;
cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1 = cljs$core$trampoline__1;
cljs$core$trampoline.cljs$core$IFn$_invoke$arity$variadic = cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$trampoline;
})()
;
/**
 * Returns a random floating point number between 0 (inclusive) and
 * n (default 1) (exclusive).
 */
cljs.core.rand = (function() {
var cljs$core$rand = null;
var cljs$core$rand__0 = (function (){
return cljs$core$rand.cljs$core$IFn$_invoke$arity$1((1));
});
var cljs$core$rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
cljs$core$rand = function(n){
switch(arguments.length){
case 0:
return cljs$core$rand__0.call(this);
case 1:
return cljs$core$rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$rand.cljs$core$IFn$_invoke$arity$0 = cljs$core$rand__0;
cljs$core$rand.cljs$core$IFn$_invoke$arity$1 = cljs$core$rand__1;
return cljs$core$rand;
})()
;
/**
 * Returns a random integer between 0 (inclusive) and n (exclusive).
 */
cljs.core.rand_int = (function cljs$core$rand_int(n){
var G__5727 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__5727) : Math.floor.call(null,G__5727));
});
/**
 * Return a random element of the (sequential) collection. Will have
 * the same performance characteristics as nth for the given
 * collection.
 */
cljs.core.rand_nth = (function cljs$core$rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
 * Returns a map of the elements of coll keyed by the result of
 * f on each element. The value at each key will be a vector of the
 * corresponding elements, in the order they appeared in coll.
 */
cljs.core.group_by = (function cljs$core$group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__5729 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__5729) : f.call(null,G__5729));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Creates a hierarchy object for use with derive, isa? etc.
 */
cljs.core.make_hierarchy = (function cljs$core$make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$_COLON_parents,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$_COLON_descendants,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$_COLON_ancestors,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function cljs$core$get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__5731 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__5731) : cljs.core.atom.call(null,G__5731));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
 * @param {...*} var_args
 */
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var cljs$core$swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var cljs$core$swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__5732__i = 0, G__5732__a = new Array(arguments.length -  1);
while (G__5732__i < G__5732__a.length) {G__5732__a[G__5732__i] = arguments[G__5732__i + 1]; ++G__5732__i;}
  args = new cljs.core.IndexedSeq(G__5732__a,0);
} 
return cljs$core$swap_global_hierarchy_BANG___delegate.call(this,f,args);};
cljs$core$swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs$core$swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__5733){
var f = cljs.core.first(arglist__5733);
var args = cljs.core.rest(arglist__5733);
return cljs$core$swap_global_hierarchy_BANG___delegate(f,args);
});
cljs$core$swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_global_hierarchy_BANG___delegate;
return cljs$core$swap_global_hierarchy_BANG_;
})()
;
/**
 * Returns true if (= child parent), or child is directly or indirectly derived from
 * parent, either via a JavaScript type inheritance relationship or a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy
 */
cljs.core.isa_QMARK_ = (function() {
var cljs$core$isa_QMARK_ = null;
var cljs$core$isa_QMARK___2 = (function (child,parent){
return cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__5798 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5798) : cljs.core.deref.call(null,G__5798));
})(),child,parent);
});
var cljs$core$isa_QMARK___3 = (function (h,child,parent){
var or__10823__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$_COLON_ancestors.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
var and__10815__auto__ = cljs.core.vector_QMARK_(parent);
if(and__10815__auto__){
var and__10815__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__10815__auto____$1){
var and__10815__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__10815__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__5823 = cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__5821 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__5821) : child.call(null,G__5821));
})(),(function (){var G__5822 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__5822) : parent.call(null,G__5822));
})());
var G__5824 = (i + (1));
ret = G__5823;
i = G__5824;
continue;
}
break;
}
} else {
return and__10815__auto____$2;
}
} else {
return and__10815__auto____$1;
}
} else {
return and__10815__auto__;
}
}
}
});
cljs$core$isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return cljs$core$isa_QMARK___2.call(this,h,child);
case 3:
return cljs$core$isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$isa_QMARK___2;
cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = cljs$core$isa_QMARK___3;
return cljs$core$isa_QMARK_;
})()
;
/**
 * Returns the immediate parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.parents = (function() {
var cljs$core$parents = null;
var cljs$core$parents__1 = (function (tag){
return cljs$core$parents.cljs$core$IFn$_invoke$arity$2((function (){var G__5828 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5828) : cljs.core.deref.call(null,G__5828));
})(),tag);
});
var cljs$core$parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$_COLON_parents.cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$parents = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$parents__1.call(this,h);
case 2:
return cljs$core$parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$parents.cljs$core$IFn$_invoke$arity$1 = cljs$core$parents__1;
cljs$core$parents.cljs$core$IFn$_invoke$arity$2 = cljs$core$parents__2;
return cljs$core$parents;
})()
;
/**
 * Returns the immediate and indirect parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.ancestors = (function() {
var cljs$core$ancestors = null;
var cljs$core$ancestors__1 = (function (tag){
return cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__5832 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5832) : cljs.core.deref.call(null,G__5832));
})(),tag);
});
var cljs$core$ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$_COLON_ancestors.cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$ancestors = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$ancestors__1.call(this,h);
case 2:
return cljs$core$ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ancestors.cljs$core$IFn$_invoke$arity$1 = cljs$core$ancestors__1;
cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2 = cljs$core$ancestors__2;
return cljs$core$ancestors;
})()
;
/**
 * Returns the immediate and indirect children of tag, through a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy. Note: does not work on JavaScript type inheritance
 * relationships.
 */
cljs.core.descendants = (function() {
var cljs$core$descendants = null;
var cljs$core$descendants__1 = (function (tag){
return cljs$core$descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__5836 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5836) : cljs.core.deref.call(null,G__5836));
})(),tag);
});
var cljs$core$descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$_COLON_descendants.cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$descendants = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$descendants__1.call(this,h);
case 2:
return cljs$core$descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$descendants.cljs$core$IFn$_invoke$arity$1 = cljs$core$descendants__1;
cljs$core$descendants.cljs$core$IFn$_invoke$arity$2 = cljs$core$descendants__2;
return cljs$core$descendants;
})()
;
/**
 * Establishes a parent/child relationship between parent and
 * tag. Parent must be a namespace-qualified symbol or keyword and
 * child can be either a namespace-qualified symbol or keyword or a
 * class. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.derive = (function() {
var cljs$core$derive = null;
var cljs$core$derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var cljs$core$derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = cljs.core.constant$keyword$_COLON_parents.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$_COLON_descendants.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$_COLON_ancestors.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__5845 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__5845) : targets.call(null,G__5845));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__5846 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__5846) : sources.call(null,G__5846));
})()));
});})(tp,td,ta))
;
var or__10823__auto__ = ((cljs.core.contains_QMARK_((function (){var G__5850 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__5850) : tp.call(null,G__5850));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__5851 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__5851) : ta.call(null,G__5851));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__5852 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__5852) : ta.call(null,G__5852));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$_COLON_parents,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$_COLON_parents.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$_COLON_ancestors,tf(cljs.core.constant$keyword$_COLON_ancestors.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$_COLON_descendants,tf(cljs.core.constant$keyword$_COLON_descendants.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
return h;
}
});
cljs$core$derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return cljs$core$derive__2.call(this,h,tag);
case 3:
return cljs$core$derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$derive.cljs$core$IFn$_invoke$arity$2 = cljs$core$derive__2;
cljs$core$derive.cljs$core$IFn$_invoke$arity$3 = cljs$core$derive__3;
return cljs$core$derive;
})()
;
/**
 * Removes a parent/child relationship between parent and
 * tag. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.underive = (function() {
var cljs$core$underive = null;
var cljs$core$underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var cljs$core$underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$_COLON_parents.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__5859 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__5859) : parentMap.call(null,G__5859));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__5860 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__5860) : parentMap.call(null,G__5860));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__5853_SHARP_){
return cljs.core.cons(cljs.core.first(p1__5853_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__5853_SHARP_),cljs.core.second(p1__5853_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__5861 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__5861) : parentMap.call(null,G__5861));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__5854_SHARP_,p2__5855_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__5854_SHARP_,p2__5855_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
cljs$core$underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return cljs$core$underive__2.call(this,h,tag);
case 3:
return cljs$core$underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$underive.cljs$core$IFn$_invoke$arity$2 = cljs$core$underive__2;
cljs$core$underive.cljs$core$IFn$_invoke$arity$3 = cljs$core$underive__3;
return cljs$core$underive;
})()
;
cljs.core.reset_cache = (function cljs$core$reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__5864 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5864) : cljs.core.deref.call(null,G__5864));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__5865 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5865) : cljs.core.deref.call(null,G__5865));
}));
});
cljs.core.prefers_STAR_ = (function cljs$core$prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__5881 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5881) : cljs.core.deref.call(null,G__5881));
})().call(null,x);
var or__10823__auto__ = (cljs.core.truth_((function (){var and__10815__auto__ = xprefs;
if(cljs.core.truth_(and__10815__auto__)){
var G__5883 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__5883) : xprefs.call(null,G__5883));
} else {
return and__10815__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__5884 = cljs.core.rest(ps);
ps = G__5884;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__10823__auto____$1)){
return or__10823__auto____$1;
} else {
var or__10823__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__5885 = cljs.core.rest(ps);
ps = G__5885;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__10823__auto____$2)){
return or__10823__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function cljs$core$dominates(x,y,prefer_table){
var or__10823__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__10823__auto__)){
return or__10823__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__5899){
var vec__5900 = p__5899;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5900,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5900,(1),null);
var e = vec__5900;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__5901 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5901) : cljs.core.deref.call(null,G__5901));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__10823__auto__ = (be == null);
if(or__10823__auto__){
return or__10823__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__5902 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5902) : cljs.core.deref.call(null,G__5902));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__5903 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5903) : cljs.core.deref.call(null,G__5903));
})(),(function (){var G__5904 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5904) : cljs.core.deref.call(null,G__5904));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj5906 = {};
return obj5906;
})();

cljs.core._reset = (function cljs$core$_reset(mf){
if((function (){var and__10815__auto__ = mf;
if(and__10815__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__10815__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__11091__auto__ = (((mf == null))?null:mf);
return (function (){var or__10823__auto__ = (cljs.core._reset[(function (){var G__5910 = x__11091__auto__;
return goog.typeOf(G__5910);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._reset["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function cljs$core$_add_method(mf,dispatch_val,method){
if((function (){var and__10815__auto__ = mf;
if(and__10815__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__10815__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__11091__auto__ = (((mf == null))?null:mf);
return (function (){var or__10823__auto__ = (cljs.core._add_method[(function (){var G__5914 = x__11091__auto__;
return goog.typeOf(G__5914);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._add_method["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function cljs$core$_remove_method(mf,dispatch_val){
if((function (){var and__10815__auto__ = mf;
if(and__10815__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__10815__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__11091__auto__ = (((mf == null))?null:mf);
return (function (){var or__10823__auto__ = (cljs.core._remove_method[(function (){var G__5918 = x__11091__auto__;
return goog.typeOf(G__5918);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._remove_method["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function cljs$core$_prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__10815__auto__ = mf;
if(and__10815__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__10815__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__11091__auto__ = (((mf == null))?null:mf);
return (function (){var or__10823__auto__ = (cljs.core._prefer_method[(function (){var G__5922 = x__11091__auto__;
return goog.typeOf(G__5922);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function cljs$core$_get_method(mf,dispatch_val){
if((function (){var and__10815__auto__ = mf;
if(and__10815__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__10815__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__11091__auto__ = (((mf == null))?null:mf);
return (function (){var or__10823__auto__ = (cljs.core._get_method[(function (){var G__5926 = x__11091__auto__;
return goog.typeOf(G__5926);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._get_method["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function cljs$core$_methods(mf){
if((function (){var and__10815__auto__ = mf;
if(and__10815__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__10815__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__11091__auto__ = (((mf == null))?null:mf);
return (function (){var or__10823__auto__ = (cljs.core._methods[(function (){var G__5930 = x__11091__auto__;
return goog.typeOf(G__5930);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._methods["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function cljs$core$_prefers(mf){
if((function (){var and__10815__auto__ = mf;
if(and__10815__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__10815__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__11091__auto__ = (((mf == null))?null:mf);
return (function (){var or__10823__auto__ = (cljs.core._prefers[(function (){var G__5934 = x__11091__auto__;
return goog.typeOf(G__5934);
})()]);
if(or__10823__auto__){
return or__10823__auto__;
} else {
var or__10823__auto____$1 = (cljs.core._prefers["_"]);
if(or__10823__auto____$1){
return or__10823__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function cljs$core$throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__5936 = this$__$1;
return goog.getUid(G__5936);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__5937 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5937) : cljs.core.deref.call(null,G__5937));
})(),(function (){var G__5938 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5938) : cljs.core.deref.call(null,G__5938));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__5939 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5939) : cljs.core.deref.call(null,G__5939));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__5940 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5940) : cljs.core.deref.call(null,G__5940));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__5941 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5941) : cljs.core.deref.call(null,G__5941));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__5942 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5942) : cljs.core.deref.call(null,G__5942));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__6783 = null;
var G__6783__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__6783__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5943 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__5943) : self__.dispatch_fn.call(null,G__5943));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5944 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__5944) : target_fn.call(null,G__5944));
});
var G__6783__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5945 = a;
var G__5946 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__5945,G__5946) : self__.dispatch_fn.call(null,G__5945,G__5946));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5947 = a;
var G__5948 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__5947,G__5948) : target_fn.call(null,G__5947,G__5948));
});
var G__6783__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5949 = a;
var G__5950 = b;
var G__5951 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__5949,G__5950,G__5951) : self__.dispatch_fn.call(null,G__5949,G__5950,G__5951));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5952 = a;
var G__5953 = b;
var G__5954 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__5952,G__5953,G__5954) : target_fn.call(null,G__5952,G__5953,G__5954));
});
var G__6783__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5955 = a;
var G__5956 = b;
var G__5957 = c;
var G__5958 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__5955,G__5956,G__5957,G__5958) : self__.dispatch_fn.call(null,G__5955,G__5956,G__5957,G__5958));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5959 = a;
var G__5960 = b;
var G__5961 = c;
var G__5962 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__5959,G__5960,G__5961,G__5962) : target_fn.call(null,G__5959,G__5960,G__5961,G__5962));
});
var G__6783__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5963 = a;
var G__5964 = b;
var G__5965 = c;
var G__5966 = d;
var G__5967 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__5963,G__5964,G__5965,G__5966,G__5967) : self__.dispatch_fn.call(null,G__5963,G__5964,G__5965,G__5966,G__5967));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5968 = a;
var G__5969 = b;
var G__5970 = c;
var G__5971 = d;
var G__5972 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__5968,G__5969,G__5970,G__5971,G__5972) : target_fn.call(null,G__5968,G__5969,G__5970,G__5971,G__5972));
});
var G__6783__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5973 = a;
var G__5974 = b;
var G__5975 = c;
var G__5976 = d;
var G__5977 = e;
var G__5978 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__5973,G__5974,G__5975,G__5976,G__5977,G__5978) : self__.dispatch_fn.call(null,G__5973,G__5974,G__5975,G__5976,G__5977,G__5978));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5979 = a;
var G__5980 = b;
var G__5981 = c;
var G__5982 = d;
var G__5983 = e;
var G__5984 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__5979,G__5980,G__5981,G__5982,G__5983,G__5984) : target_fn.call(null,G__5979,G__5980,G__5981,G__5982,G__5983,G__5984));
});
var G__6783__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5985 = a;
var G__5986 = b;
var G__5987 = c;
var G__5988 = d;
var G__5989 = e;
var G__5990 = f;
var G__5991 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__5985,G__5986,G__5987,G__5988,G__5989,G__5990,G__5991) : self__.dispatch_fn.call(null,G__5985,G__5986,G__5987,G__5988,G__5989,G__5990,G__5991));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5992 = a;
var G__5993 = b;
var G__5994 = c;
var G__5995 = d;
var G__5996 = e;
var G__5997 = f;
var G__5998 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__5992,G__5993,G__5994,G__5995,G__5996,G__5997,G__5998) : target_fn.call(null,G__5992,G__5993,G__5994,G__5995,G__5996,G__5997,G__5998));
});
var G__6783__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5999 = a;
var G__6000 = b;
var G__6001 = c;
var G__6002 = d;
var G__6003 = e;
var G__6004 = f;
var G__6005 = g;
var G__6006 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__5999,G__6000,G__6001,G__6002,G__6003,G__6004,G__6005,G__6006) : self__.dispatch_fn.call(null,G__5999,G__6000,G__6001,G__6002,G__6003,G__6004,G__6005,G__6006));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6007 = a;
var G__6008 = b;
var G__6009 = c;
var G__6010 = d;
var G__6011 = e;
var G__6012 = f;
var G__6013 = g;
var G__6014 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__6007,G__6008,G__6009,G__6010,G__6011,G__6012,G__6013,G__6014) : target_fn.call(null,G__6007,G__6008,G__6009,G__6010,G__6011,G__6012,G__6013,G__6014));
});
var G__6783__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__6015 = a;
var G__6016 = b;
var G__6017 = c;
var G__6018 = d;
var G__6019 = e;
var G__6020 = f;
var G__6021 = g;
var G__6022 = h;
var G__6023 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__6015,G__6016,G__6017,G__6018,G__6019,G__6020,G__6021,G__6022,G__6023) : self__.dispatch_fn.call(null,G__6015,G__6016,G__6017,G__6018,G__6019,G__6020,G__6021,G__6022,G__6023));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6024 = a;
var G__6025 = b;
var G__6026 = c;
var G__6027 = d;
var G__6028 = e;
var G__6029 = f;
var G__6030 = g;
var G__6031 = h;
var G__6032 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__6024,G__6025,G__6026,G__6027,G__6028,G__6029,G__6030,G__6031,G__6032) : target_fn.call(null,G__6024,G__6025,G__6026,G__6027,G__6028,G__6029,G__6030,G__6031,G__6032));
});
var G__6783__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__6033 = a;
var G__6034 = b;
var G__6035 = c;
var G__6036 = d;
var G__6037 = e;
var G__6038 = f;
var G__6039 = g;
var G__6040 = h;
var G__6041 = i;
var G__6042 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__6033,G__6034,G__6035,G__6036,G__6037,G__6038,G__6039,G__6040,G__6041,G__6042) : self__.dispatch_fn.call(null,G__6033,G__6034,G__6035,G__6036,G__6037,G__6038,G__6039,G__6040,G__6041,G__6042));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6043 = a;
var G__6044 = b;
var G__6045 = c;
var G__6046 = d;
var G__6047 = e;
var G__6048 = f;
var G__6049 = g;
var G__6050 = h;
var G__6051 = i;
var G__6052 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__6043,G__6044,G__6045,G__6046,G__6047,G__6048,G__6049,G__6050,G__6051,G__6052) : target_fn.call(null,G__6043,G__6044,G__6045,G__6046,G__6047,G__6048,G__6049,G__6050,G__6051,G__6052));
});
var G__6783__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__6053 = a;
var G__6054 = b;
var G__6055 = c;
var G__6056 = d;
var G__6057 = e;
var G__6058 = f;
var G__6059 = g;
var G__6060 = h;
var G__6061 = i;
var G__6062 = j;
var G__6063 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__6053,G__6054,G__6055,G__6056,G__6057,G__6058,G__6059,G__6060,G__6061,G__6062,G__6063) : self__.dispatch_fn.call(null,G__6053,G__6054,G__6055,G__6056,G__6057,G__6058,G__6059,G__6060,G__6061,G__6062,G__6063));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6064 = a;
var G__6065 = b;
var G__6066 = c;
var G__6067 = d;
var G__6068 = e;
var G__6069 = f;
var G__6070 = g;
var G__6071 = h;
var G__6072 = i;
var G__6073 = j;
var G__6074 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__6064,G__6065,G__6066,G__6067,G__6068,G__6069,G__6070,G__6071,G__6072,G__6073,G__6074) : target_fn.call(null,G__6064,G__6065,G__6066,G__6067,G__6068,G__6069,G__6070,G__6071,G__6072,G__6073,G__6074));
});
var G__6783__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__6075 = a;
var G__6076 = b;
var G__6077 = c;
var G__6078 = d;
var G__6079 = e;
var G__6080 = f;
var G__6081 = g;
var G__6082 = h;
var G__6083 = i;
var G__6084 = j;
var G__6085 = k;
var G__6086 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__6075,G__6076,G__6077,G__6078,G__6079,G__6080,G__6081,G__6082,G__6083,G__6084,G__6085,G__6086) : self__.dispatch_fn.call(null,G__6075,G__6076,G__6077,G__6078,G__6079,G__6080,G__6081,G__6082,G__6083,G__6084,G__6085,G__6086));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6087 = a;
var G__6088 = b;
var G__6089 = c;
var G__6090 = d;
var G__6091 = e;
var G__6092 = f;
var G__6093 = g;
var G__6094 = h;
var G__6095 = i;
var G__6096 = j;
var G__6097 = k;
var G__6098 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__6087,G__6088,G__6089,G__6090,G__6091,G__6092,G__6093,G__6094,G__6095,G__6096,G__6097,G__6098) : target_fn.call(null,G__6087,G__6088,G__6089,G__6090,G__6091,G__6092,G__6093,G__6094,G__6095,G__6096,G__6097,G__6098));
});
var G__6783__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__6099 = a;
var G__6100 = b;
var G__6101 = c;
var G__6102 = d;
var G__6103 = e;
var G__6104 = f;
var G__6105 = g;
var G__6106 = h;
var G__6107 = i;
var G__6108 = j;
var G__6109 = k;
var G__6110 = l;
var G__6111 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__6099,G__6100,G__6101,G__6102,G__6103,G__6104,G__6105,G__6106,G__6107,G__6108,G__6109,G__6110,G__6111) : self__.dispatch_fn.call(null,G__6099,G__6100,G__6101,G__6102,G__6103,G__6104,G__6105,G__6106,G__6107,G__6108,G__6109,G__6110,G__6111));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6112 = a;
var G__6113 = b;
var G__6114 = c;
var G__6115 = d;
var G__6116 = e;
var G__6117 = f;
var G__6118 = g;
var G__6119 = h;
var G__6120 = i;
var G__6121 = j;
var G__6122 = k;
var G__6123 = l;
var G__6124 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__6112,G__6113,G__6114,G__6115,G__6116,G__6117,G__6118,G__6119,G__6120,G__6121,G__6122,G__6123,G__6124) : target_fn.call(null,G__6112,G__6113,G__6114,G__6115,G__6116,G__6117,G__6118,G__6119,G__6120,G__6121,G__6122,G__6123,G__6124));
});
var G__6783__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__6125 = a;
var G__6126 = b;
var G__6127 = c;
var G__6128 = d;
var G__6129 = e;
var G__6130 = f;
var G__6131 = g;
var G__6132 = h;
var G__6133 = i;
var G__6134 = j;
var G__6135 = k;
var G__6136 = l;
var G__6137 = m;
var G__6138 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__6125,G__6126,G__6127,G__6128,G__6129,G__6130,G__6131,G__6132,G__6133,G__6134,G__6135,G__6136,G__6137,G__6138) : self__.dispatch_fn.call(null,G__6125,G__6126,G__6127,G__6128,G__6129,G__6130,G__6131,G__6132,G__6133,G__6134,G__6135,G__6136,G__6137,G__6138));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6139 = a;
var G__6140 = b;
var G__6141 = c;
var G__6142 = d;
var G__6143 = e;
var G__6144 = f;
var G__6145 = g;
var G__6146 = h;
var G__6147 = i;
var G__6148 = j;
var G__6149 = k;
var G__6150 = l;
var G__6151 = m;
var G__6152 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__6139,G__6140,G__6141,G__6142,G__6143,G__6144,G__6145,G__6146,G__6147,G__6148,G__6149,G__6150,G__6151,G__6152) : target_fn.call(null,G__6139,G__6140,G__6141,G__6142,G__6143,G__6144,G__6145,G__6146,G__6147,G__6148,G__6149,G__6150,G__6151,G__6152));
});
var G__6783__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__6153 = a;
var G__6154 = b;
var G__6155 = c;
var G__6156 = d;
var G__6157 = e;
var G__6158 = f;
var G__6159 = g;
var G__6160 = h;
var G__6161 = i;
var G__6162 = j;
var G__6163 = k;
var G__6164 = l;
var G__6165 = m;
var G__6166 = n;
var G__6167 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__6153,G__6154,G__6155,G__6156,G__6157,G__6158,G__6159,G__6160,G__6161,G__6162,G__6163,G__6164,G__6165,G__6166,G__6167) : self__.dispatch_fn.call(null,G__6153,G__6154,G__6155,G__6156,G__6157,G__6158,G__6159,G__6160,G__6161,G__6162,G__6163,G__6164,G__6165,G__6166,G__6167));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6168 = a;
var G__6169 = b;
var G__6170 = c;
var G__6171 = d;
var G__6172 = e;
var G__6173 = f;
var G__6174 = g;
var G__6175 = h;
var G__6176 = i;
var G__6177 = j;
var G__6178 = k;
var G__6179 = l;
var G__6180 = m;
var G__6181 = n;
var G__6182 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__6168,G__6169,G__6170,G__6171,G__6172,G__6173,G__6174,G__6175,G__6176,G__6177,G__6178,G__6179,G__6180,G__6181,G__6182) : target_fn.call(null,G__6168,G__6169,G__6170,G__6171,G__6172,G__6173,G__6174,G__6175,G__6176,G__6177,G__6178,G__6179,G__6180,G__6181,G__6182));
});
var G__6783__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__6183 = a;
var G__6184 = b;
var G__6185 = c;
var G__6186 = d;
var G__6187 = e;
var G__6188 = f;
var G__6189 = g;
var G__6190 = h;
var G__6191 = i;
var G__6192 = j;
var G__6193 = k;
var G__6194 = l;
var G__6195 = m;
var G__6196 = n;
var G__6197 = o;
var G__6198 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__6183,G__6184,G__6185,G__6186,G__6187,G__6188,G__6189,G__6190,G__6191,G__6192,G__6193,G__6194,G__6195,G__6196,G__6197,G__6198) : self__.dispatch_fn.call(null,G__6183,G__6184,G__6185,G__6186,G__6187,G__6188,G__6189,G__6190,G__6191,G__6192,G__6193,G__6194,G__6195,G__6196,G__6197,G__6198));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6199 = a;
var G__6200 = b;
var G__6201 = c;
var G__6202 = d;
var G__6203 = e;
var G__6204 = f;
var G__6205 = g;
var G__6206 = h;
var G__6207 = i;
var G__6208 = j;
var G__6209 = k;
var G__6210 = l;
var G__6211 = m;
var G__6212 = n;
var G__6213 = o;
var G__6214 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__6199,G__6200,G__6201,G__6202,G__6203,G__6204,G__6205,G__6206,G__6207,G__6208,G__6209,G__6210,G__6211,G__6212,G__6213,G__6214) : target_fn.call(null,G__6199,G__6200,G__6201,G__6202,G__6203,G__6204,G__6205,G__6206,G__6207,G__6208,G__6209,G__6210,G__6211,G__6212,G__6213,G__6214));
});
var G__6783__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__6215 = a;
var G__6216 = b;
var G__6217 = c;
var G__6218 = d;
var G__6219 = e;
var G__6220 = f;
var G__6221 = g;
var G__6222 = h;
var G__6223 = i;
var G__6224 = j;
var G__6225 = k;
var G__6226 = l;
var G__6227 = m;
var G__6228 = n;
var G__6229 = o;
var G__6230 = p;
var G__6231 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__6215,G__6216,G__6217,G__6218,G__6219,G__6220,G__6221,G__6222,G__6223,G__6224,G__6225,G__6226,G__6227,G__6228,G__6229,G__6230,G__6231) : self__.dispatch_fn.call(null,G__6215,G__6216,G__6217,G__6218,G__6219,G__6220,G__6221,G__6222,G__6223,G__6224,G__6225,G__6226,G__6227,G__6228,G__6229,G__6230,G__6231));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6232 = a;
var G__6233 = b;
var G__6234 = c;
var G__6235 = d;
var G__6236 = e;
var G__6237 = f;
var G__6238 = g;
var G__6239 = h;
var G__6240 = i;
var G__6241 = j;
var G__6242 = k;
var G__6243 = l;
var G__6244 = m;
var G__6245 = n;
var G__6246 = o;
var G__6247 = p;
var G__6248 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__6232,G__6233,G__6234,G__6235,G__6236,G__6237,G__6238,G__6239,G__6240,G__6241,G__6242,G__6243,G__6244,G__6245,G__6246,G__6247,G__6248) : target_fn.call(null,G__6232,G__6233,G__6234,G__6235,G__6236,G__6237,G__6238,G__6239,G__6240,G__6241,G__6242,G__6243,G__6244,G__6245,G__6246,G__6247,G__6248));
});
var G__6783__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__6249 = a;
var G__6250 = b;
var G__6251 = c;
var G__6252 = d;
var G__6253 = e;
var G__6254 = f;
var G__6255 = g;
var G__6256 = h;
var G__6257 = i;
var G__6258 = j;
var G__6259 = k;
var G__6260 = l;
var G__6261 = m;
var G__6262 = n;
var G__6263 = o;
var G__6264 = p;
var G__6265 = q;
var G__6266 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__6249,G__6250,G__6251,G__6252,G__6253,G__6254,G__6255,G__6256,G__6257,G__6258,G__6259,G__6260,G__6261,G__6262,G__6263,G__6264,G__6265,G__6266) : self__.dispatch_fn.call(null,G__6249,G__6250,G__6251,G__6252,G__6253,G__6254,G__6255,G__6256,G__6257,G__6258,G__6259,G__6260,G__6261,G__6262,G__6263,G__6264,G__6265,G__6266));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6267 = a;
var G__6268 = b;
var G__6269 = c;
var G__6270 = d;
var G__6271 = e;
var G__6272 = f;
var G__6273 = g;
var G__6274 = h;
var G__6275 = i;
var G__6276 = j;
var G__6277 = k;
var G__6278 = l;
var G__6279 = m;
var G__6280 = n;
var G__6281 = o;
var G__6282 = p;
var G__6283 = q;
var G__6284 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__6267,G__6268,G__6269,G__6270,G__6271,G__6272,G__6273,G__6274,G__6275,G__6276,G__6277,G__6278,G__6279,G__6280,G__6281,G__6282,G__6283,G__6284) : target_fn.call(null,G__6267,G__6268,G__6269,G__6270,G__6271,G__6272,G__6273,G__6274,G__6275,G__6276,G__6277,G__6278,G__6279,G__6280,G__6281,G__6282,G__6283,G__6284));
});
var G__6783__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__6285 = a;
var G__6286 = b;
var G__6287 = c;
var G__6288 = d;
var G__6289 = e;
var G__6290 = f;
var G__6291 = g;
var G__6292 = h;
var G__6293 = i;
var G__6294 = j;
var G__6295 = k;
var G__6296 = l;
var G__6297 = m;
var G__6298 = n;
var G__6299 = o;
var G__6300 = p;
var G__6301 = q;
var G__6302 = r;
var G__6303 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__6285,G__6286,G__6287,G__6288,G__6289,G__6290,G__6291,G__6292,G__6293,G__6294,G__6295,G__6296,G__6297,G__6298,G__6299,G__6300,G__6301,G__6302,G__6303) : self__.dispatch_fn.call(null,G__6285,G__6286,G__6287,G__6288,G__6289,G__6290,G__6291,G__6292,G__6293,G__6294,G__6295,G__6296,G__6297,G__6298,G__6299,G__6300,G__6301,G__6302,G__6303));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6304 = a;
var G__6305 = b;
var G__6306 = c;
var G__6307 = d;
var G__6308 = e;
var G__6309 = f;
var G__6310 = g;
var G__6311 = h;
var G__6312 = i;
var G__6313 = j;
var G__6314 = k;
var G__6315 = l;
var G__6316 = m;
var G__6317 = n;
var G__6318 = o;
var G__6319 = p;
var G__6320 = q;
var G__6321 = r;
var G__6322 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__6304,G__6305,G__6306,G__6307,G__6308,G__6309,G__6310,G__6311,G__6312,G__6313,G__6314,G__6315,G__6316,G__6317,G__6318,G__6319,G__6320,G__6321,G__6322) : target_fn.call(null,G__6304,G__6305,G__6306,G__6307,G__6308,G__6309,G__6310,G__6311,G__6312,G__6313,G__6314,G__6315,G__6316,G__6317,G__6318,G__6319,G__6320,G__6321,G__6322));
});
var G__6783__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__6323 = a;
var G__6324 = b;
var G__6325 = c;
var G__6326 = d;
var G__6327 = e;
var G__6328 = f;
var G__6329 = g;
var G__6330 = h;
var G__6331 = i;
var G__6332 = j;
var G__6333 = k;
var G__6334 = l;
var G__6335 = m;
var G__6336 = n;
var G__6337 = o;
var G__6338 = p;
var G__6339 = q;
var G__6340 = r;
var G__6341 = s;
var G__6342 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__6323,G__6324,G__6325,G__6326,G__6327,G__6328,G__6329,G__6330,G__6331,G__6332,G__6333,G__6334,G__6335,G__6336,G__6337,G__6338,G__6339,G__6340,G__6341,G__6342) : self__.dispatch_fn.call(null,G__6323,G__6324,G__6325,G__6326,G__6327,G__6328,G__6329,G__6330,G__6331,G__6332,G__6333,G__6334,G__6335,G__6336,G__6337,G__6338,G__6339,G__6340,G__6341,G__6342));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6343 = a;
var G__6344 = b;
var G__6345 = c;
var G__6346 = d;
var G__6347 = e;
var G__6348 = f;
var G__6349 = g;
var G__6350 = h;
var G__6351 = i;
var G__6352 = j;
var G__6353 = k;
var G__6354 = l;
var G__6355 = m;
var G__6356 = n;
var G__6357 = o;
var G__6358 = p;
var G__6359 = q;
var G__6360 = r;
var G__6361 = s;
var G__6362 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__6343,G__6344,G__6345,G__6346,G__6347,G__6348,G__6349,G__6350,G__6351,G__6352,G__6353,G__6354,G__6355,G__6356,G__6357,G__6358,G__6359,G__6360,G__6361,G__6362) : target_fn.call(null,G__6343,G__6344,G__6345,G__6346,G__6347,G__6348,G__6349,G__6350,G__6351,G__6352,G__6353,G__6354,G__6355,G__6356,G__6357,G__6358,G__6359,G__6360,G__6361,G__6362));
});
var G__6783__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__6783 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__6783__1.call(this,self__);
case 2:
return G__6783__2.call(this,self__,a);
case 3:
return G__6783__3.call(this,self__,a,b);
case 4:
return G__6783__4.call(this,self__,a,b,c);
case 5:
return G__6783__5.call(this,self__,a,b,c,d);
case 6:
return G__6783__6.call(this,self__,a,b,c,d,e);
case 7:
return G__6783__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__6783__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__6783__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__6783__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__6783__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__6783__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__6783__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__6783__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__6783__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__6783__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__6783__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__6783__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__6783__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__6783__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__6783__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__6783__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6783.cljs$core$IFn$_invoke$arity$1 = G__6783__1;
G__6783.cljs$core$IFn$_invoke$arity$2 = G__6783__2;
G__6783.cljs$core$IFn$_invoke$arity$3 = G__6783__3;
G__6783.cljs$core$IFn$_invoke$arity$4 = G__6783__4;
G__6783.cljs$core$IFn$_invoke$arity$5 = G__6783__5;
G__6783.cljs$core$IFn$_invoke$arity$6 = G__6783__6;
G__6783.cljs$core$IFn$_invoke$arity$7 = G__6783__7;
G__6783.cljs$core$IFn$_invoke$arity$8 = G__6783__8;
G__6783.cljs$core$IFn$_invoke$arity$9 = G__6783__9;
G__6783.cljs$core$IFn$_invoke$arity$10 = G__6783__10;
G__6783.cljs$core$IFn$_invoke$arity$11 = G__6783__11;
G__6783.cljs$core$IFn$_invoke$arity$12 = G__6783__12;
G__6783.cljs$core$IFn$_invoke$arity$13 = G__6783__13;
G__6783.cljs$core$IFn$_invoke$arity$14 = G__6783__14;
G__6783.cljs$core$IFn$_invoke$arity$15 = G__6783__15;
G__6783.cljs$core$IFn$_invoke$arity$16 = G__6783__16;
G__6783.cljs$core$IFn$_invoke$arity$17 = G__6783__17;
G__6783.cljs$core$IFn$_invoke$arity$18 = G__6783__18;
G__6783.cljs$core$IFn$_invoke$arity$19 = G__6783__19;
G__6783.cljs$core$IFn$_invoke$arity$20 = G__6783__20;
G__6783.cljs$core$IFn$_invoke$arity$21 = G__6783__21;
G__6783.cljs$core$IFn$_invoke$arity$22 = G__6783__22;
return G__6783;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args5935){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args5935)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6363 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__6363) : self__.dispatch_fn.call(null,G__6363));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6364 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__6364) : target_fn.call(null,G__6364));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6365 = a;
var G__6366 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__6365,G__6366) : self__.dispatch_fn.call(null,G__6365,G__6366));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6367 = a;
var G__6368 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__6367,G__6368) : target_fn.call(null,G__6367,G__6368));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6369 = a;
var G__6370 = b;
var G__6371 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__6369,G__6370,G__6371) : self__.dispatch_fn.call(null,G__6369,G__6370,G__6371));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6372 = a;
var G__6373 = b;
var G__6374 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__6372,G__6373,G__6374) : target_fn.call(null,G__6372,G__6373,G__6374));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6375 = a;
var G__6376 = b;
var G__6377 = c;
var G__6378 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__6375,G__6376,G__6377,G__6378) : self__.dispatch_fn.call(null,G__6375,G__6376,G__6377,G__6378));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6379 = a;
var G__6380 = b;
var G__6381 = c;
var G__6382 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__6379,G__6380,G__6381,G__6382) : target_fn.call(null,G__6379,G__6380,G__6381,G__6382));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6383 = a;
var G__6384 = b;
var G__6385 = c;
var G__6386 = d;
var G__6387 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__6383,G__6384,G__6385,G__6386,G__6387) : self__.dispatch_fn.call(null,G__6383,G__6384,G__6385,G__6386,G__6387));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6388 = a;
var G__6389 = b;
var G__6390 = c;
var G__6391 = d;
var G__6392 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__6388,G__6389,G__6390,G__6391,G__6392) : target_fn.call(null,G__6388,G__6389,G__6390,G__6391,G__6392));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6393 = a;
var G__6394 = b;
var G__6395 = c;
var G__6396 = d;
var G__6397 = e;
var G__6398 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__6393,G__6394,G__6395,G__6396,G__6397,G__6398) : self__.dispatch_fn.call(null,G__6393,G__6394,G__6395,G__6396,G__6397,G__6398));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6399 = a;
var G__6400 = b;
var G__6401 = c;
var G__6402 = d;
var G__6403 = e;
var G__6404 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__6399,G__6400,G__6401,G__6402,G__6403,G__6404) : target_fn.call(null,G__6399,G__6400,G__6401,G__6402,G__6403,G__6404));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6405 = a;
var G__6406 = b;
var G__6407 = c;
var G__6408 = d;
var G__6409 = e;
var G__6410 = f;
var G__6411 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__6405,G__6406,G__6407,G__6408,G__6409,G__6410,G__6411) : self__.dispatch_fn.call(null,G__6405,G__6406,G__6407,G__6408,G__6409,G__6410,G__6411));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6412 = a;
var G__6413 = b;
var G__6414 = c;
var G__6415 = d;
var G__6416 = e;
var G__6417 = f;
var G__6418 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__6412,G__6413,G__6414,G__6415,G__6416,G__6417,G__6418) : target_fn.call(null,G__6412,G__6413,G__6414,G__6415,G__6416,G__6417,G__6418));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6419 = a;
var G__6420 = b;
var G__6421 = c;
var G__6422 = d;
var G__6423 = e;
var G__6424 = f;
var G__6425 = g;
var G__6426 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__6419,G__6420,G__6421,G__6422,G__6423,G__6424,G__6425,G__6426) : self__.dispatch_fn.call(null,G__6419,G__6420,G__6421,G__6422,G__6423,G__6424,G__6425,G__6426));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6427 = a;
var G__6428 = b;
var G__6429 = c;
var G__6430 = d;
var G__6431 = e;
var G__6432 = f;
var G__6433 = g;
var G__6434 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__6427,G__6428,G__6429,G__6430,G__6431,G__6432,G__6433,G__6434) : target_fn.call(null,G__6427,G__6428,G__6429,G__6430,G__6431,G__6432,G__6433,G__6434));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6435 = a;
var G__6436 = b;
var G__6437 = c;
var G__6438 = d;
var G__6439 = e;
var G__6440 = f;
var G__6441 = g;
var G__6442 = h;
var G__6443 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__6435,G__6436,G__6437,G__6438,G__6439,G__6440,G__6441,G__6442,G__6443) : self__.dispatch_fn.call(null,G__6435,G__6436,G__6437,G__6438,G__6439,G__6440,G__6441,G__6442,G__6443));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6444 = a;
var G__6445 = b;
var G__6446 = c;
var G__6447 = d;
var G__6448 = e;
var G__6449 = f;
var G__6450 = g;
var G__6451 = h;
var G__6452 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__6444,G__6445,G__6446,G__6447,G__6448,G__6449,G__6450,G__6451,G__6452) : target_fn.call(null,G__6444,G__6445,G__6446,G__6447,G__6448,G__6449,G__6450,G__6451,G__6452));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6453 = a;
var G__6454 = b;
var G__6455 = c;
var G__6456 = d;
var G__6457 = e;
var G__6458 = f;
var G__6459 = g;
var G__6460 = h;
var G__6461 = i;
var G__6462 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__6453,G__6454,G__6455,G__6456,G__6457,G__6458,G__6459,G__6460,G__6461,G__6462) : self__.dispatch_fn.call(null,G__6453,G__6454,G__6455,G__6456,G__6457,G__6458,G__6459,G__6460,G__6461,G__6462));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6463 = a;
var G__6464 = b;
var G__6465 = c;
var G__6466 = d;
var G__6467 = e;
var G__6468 = f;
var G__6469 = g;
var G__6470 = h;
var G__6471 = i;
var G__6472 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__6463,G__6464,G__6465,G__6466,G__6467,G__6468,G__6469,G__6470,G__6471,G__6472) : target_fn.call(null,G__6463,G__6464,G__6465,G__6466,G__6467,G__6468,G__6469,G__6470,G__6471,G__6472));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6473 = a;
var G__6474 = b;
var G__6475 = c;
var G__6476 = d;
var G__6477 = e;
var G__6478 = f;
var G__6479 = g;
var G__6480 = h;
var G__6481 = i;
var G__6482 = j;
var G__6483 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__6473,G__6474,G__6475,G__6476,G__6477,G__6478,G__6479,G__6480,G__6481,G__6482,G__6483) : self__.dispatch_fn.call(null,G__6473,G__6474,G__6475,G__6476,G__6477,G__6478,G__6479,G__6480,G__6481,G__6482,G__6483));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6484 = a;
var G__6485 = b;
var G__6486 = c;
var G__6487 = d;
var G__6488 = e;
var G__6489 = f;
var G__6490 = g;
var G__6491 = h;
var G__6492 = i;
var G__6493 = j;
var G__6494 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__6484,G__6485,G__6486,G__6487,G__6488,G__6489,G__6490,G__6491,G__6492,G__6493,G__6494) : target_fn.call(null,G__6484,G__6485,G__6486,G__6487,G__6488,G__6489,G__6490,G__6491,G__6492,G__6493,G__6494));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6495 = a;
var G__6496 = b;
var G__6497 = c;
var G__6498 = d;
var G__6499 = e;
var G__6500 = f;
var G__6501 = g;
var G__6502 = h;
var G__6503 = i;
var G__6504 = j;
var G__6505 = k;
var G__6506 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__6495,G__6496,G__6497,G__6498,G__6499,G__6500,G__6501,G__6502,G__6503,G__6504,G__6505,G__6506) : self__.dispatch_fn.call(null,G__6495,G__6496,G__6497,G__6498,G__6499,G__6500,G__6501,G__6502,G__6503,G__6504,G__6505,G__6506));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6507 = a;
var G__6508 = b;
var G__6509 = c;
var G__6510 = d;
var G__6511 = e;
var G__6512 = f;
var G__6513 = g;
var G__6514 = h;
var G__6515 = i;
var G__6516 = j;
var G__6517 = k;
var G__6518 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__6507,G__6508,G__6509,G__6510,G__6511,G__6512,G__6513,G__6514,G__6515,G__6516,G__6517,G__6518) : target_fn.call(null,G__6507,G__6508,G__6509,G__6510,G__6511,G__6512,G__6513,G__6514,G__6515,G__6516,G__6517,G__6518));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6519 = a;
var G__6520 = b;
var G__6521 = c;
var G__6522 = d;
var G__6523 = e;
var G__6524 = f;
var G__6525 = g;
var G__6526 = h;
var G__6527 = i;
var G__6528 = j;
var G__6529 = k;
var G__6530 = l;
var G__6531 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__6519,G__6520,G__6521,G__6522,G__6523,G__6524,G__6525,G__6526,G__6527,G__6528,G__6529,G__6530,G__6531) : self__.dispatch_fn.call(null,G__6519,G__6520,G__6521,G__6522,G__6523,G__6524,G__6525,G__6526,G__6527,G__6528,G__6529,G__6530,G__6531));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6532 = a;
var G__6533 = b;
var G__6534 = c;
var G__6535 = d;
var G__6536 = e;
var G__6537 = f;
var G__6538 = g;
var G__6539 = h;
var G__6540 = i;
var G__6541 = j;
var G__6542 = k;
var G__6543 = l;
var G__6544 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__6532,G__6533,G__6534,G__6535,G__6536,G__6537,G__6538,G__6539,G__6540,G__6541,G__6542,G__6543,G__6544) : target_fn.call(null,G__6532,G__6533,G__6534,G__6535,G__6536,G__6537,G__6538,G__6539,G__6540,G__6541,G__6542,G__6543,G__6544));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6545 = a;
var G__6546 = b;
var G__6547 = c;
var G__6548 = d;
var G__6549 = e;
var G__6550 = f;
var G__6551 = g;
var G__6552 = h;
var G__6553 = i;
var G__6554 = j;
var G__6555 = k;
var G__6556 = l;
var G__6557 = m;
var G__6558 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__6545,G__6546,G__6547,G__6548,G__6549,G__6550,G__6551,G__6552,G__6553,G__6554,G__6555,G__6556,G__6557,G__6558) : self__.dispatch_fn.call(null,G__6545,G__6546,G__6547,G__6548,G__6549,G__6550,G__6551,G__6552,G__6553,G__6554,G__6555,G__6556,G__6557,G__6558));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6559 = a;
var G__6560 = b;
var G__6561 = c;
var G__6562 = d;
var G__6563 = e;
var G__6564 = f;
var G__6565 = g;
var G__6566 = h;
var G__6567 = i;
var G__6568 = j;
var G__6569 = k;
var G__6570 = l;
var G__6571 = m;
var G__6572 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__6559,G__6560,G__6561,G__6562,G__6563,G__6564,G__6565,G__6566,G__6567,G__6568,G__6569,G__6570,G__6571,G__6572) : target_fn.call(null,G__6559,G__6560,G__6561,G__6562,G__6563,G__6564,G__6565,G__6566,G__6567,G__6568,G__6569,G__6570,G__6571,G__6572));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6573 = a;
var G__6574 = b;
var G__6575 = c;
var G__6576 = d;
var G__6577 = e;
var G__6578 = f;
var G__6579 = g;
var G__6580 = h;
var G__6581 = i;
var G__6582 = j;
var G__6583 = k;
var G__6584 = l;
var G__6585 = m;
var G__6586 = n;
var G__6587 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__6573,G__6574,G__6575,G__6576,G__6577,G__6578,G__6579,G__6580,G__6581,G__6582,G__6583,G__6584,G__6585,G__6586,G__6587) : self__.dispatch_fn.call(null,G__6573,G__6574,G__6575,G__6576,G__6577,G__6578,G__6579,G__6580,G__6581,G__6582,G__6583,G__6584,G__6585,G__6586,G__6587));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6588 = a;
var G__6589 = b;
var G__6590 = c;
var G__6591 = d;
var G__6592 = e;
var G__6593 = f;
var G__6594 = g;
var G__6595 = h;
var G__6596 = i;
var G__6597 = j;
var G__6598 = k;
var G__6599 = l;
var G__6600 = m;
var G__6601 = n;
var G__6602 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__6588,G__6589,G__6590,G__6591,G__6592,G__6593,G__6594,G__6595,G__6596,G__6597,G__6598,G__6599,G__6600,G__6601,G__6602) : target_fn.call(null,G__6588,G__6589,G__6590,G__6591,G__6592,G__6593,G__6594,G__6595,G__6596,G__6597,G__6598,G__6599,G__6600,G__6601,G__6602));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6603 = a;
var G__6604 = b;
var G__6605 = c;
var G__6606 = d;
var G__6607 = e;
var G__6608 = f;
var G__6609 = g;
var G__6610 = h;
var G__6611 = i;
var G__6612 = j;
var G__6613 = k;
var G__6614 = l;
var G__6615 = m;
var G__6616 = n;
var G__6617 = o;
var G__6618 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__6603,G__6604,G__6605,G__6606,G__6607,G__6608,G__6609,G__6610,G__6611,G__6612,G__6613,G__6614,G__6615,G__6616,G__6617,G__6618) : self__.dispatch_fn.call(null,G__6603,G__6604,G__6605,G__6606,G__6607,G__6608,G__6609,G__6610,G__6611,G__6612,G__6613,G__6614,G__6615,G__6616,G__6617,G__6618));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6619 = a;
var G__6620 = b;
var G__6621 = c;
var G__6622 = d;
var G__6623 = e;
var G__6624 = f;
var G__6625 = g;
var G__6626 = h;
var G__6627 = i;
var G__6628 = j;
var G__6629 = k;
var G__6630 = l;
var G__6631 = m;
var G__6632 = n;
var G__6633 = o;
var G__6634 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__6619,G__6620,G__6621,G__6622,G__6623,G__6624,G__6625,G__6626,G__6627,G__6628,G__6629,G__6630,G__6631,G__6632,G__6633,G__6634) : target_fn.call(null,G__6619,G__6620,G__6621,G__6622,G__6623,G__6624,G__6625,G__6626,G__6627,G__6628,G__6629,G__6630,G__6631,G__6632,G__6633,G__6634));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6635 = a;
var G__6636 = b;
var G__6637 = c;
var G__6638 = d;
var G__6639 = e;
var G__6640 = f;
var G__6641 = g;
var G__6642 = h;
var G__6643 = i;
var G__6644 = j;
var G__6645 = k;
var G__6646 = l;
var G__6647 = m;
var G__6648 = n;
var G__6649 = o;
var G__6650 = p;
var G__6651 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__6635,G__6636,G__6637,G__6638,G__6639,G__6640,G__6641,G__6642,G__6643,G__6644,G__6645,G__6646,G__6647,G__6648,G__6649,G__6650,G__6651) : self__.dispatch_fn.call(null,G__6635,G__6636,G__6637,G__6638,G__6639,G__6640,G__6641,G__6642,G__6643,G__6644,G__6645,G__6646,G__6647,G__6648,G__6649,G__6650,G__6651));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6652 = a;
var G__6653 = b;
var G__6654 = c;
var G__6655 = d;
var G__6656 = e;
var G__6657 = f;
var G__6658 = g;
var G__6659 = h;
var G__6660 = i;
var G__6661 = j;
var G__6662 = k;
var G__6663 = l;
var G__6664 = m;
var G__6665 = n;
var G__6666 = o;
var G__6667 = p;
var G__6668 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__6652,G__6653,G__6654,G__6655,G__6656,G__6657,G__6658,G__6659,G__6660,G__6661,G__6662,G__6663,G__6664,G__6665,G__6666,G__6667,G__6668) : target_fn.call(null,G__6652,G__6653,G__6654,G__6655,G__6656,G__6657,G__6658,G__6659,G__6660,G__6661,G__6662,G__6663,G__6664,G__6665,G__6666,G__6667,G__6668));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6669 = a;
var G__6670 = b;
var G__6671 = c;
var G__6672 = d;
var G__6673 = e;
var G__6674 = f;
var G__6675 = g;
var G__6676 = h;
var G__6677 = i;
var G__6678 = j;
var G__6679 = k;
var G__6680 = l;
var G__6681 = m;
var G__6682 = n;
var G__6683 = o;
var G__6684 = p;
var G__6685 = q;
var G__6686 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__6669,G__6670,G__6671,G__6672,G__6673,G__6674,G__6675,G__6676,G__6677,G__6678,G__6679,G__6680,G__6681,G__6682,G__6683,G__6684,G__6685,G__6686) : self__.dispatch_fn.call(null,G__6669,G__6670,G__6671,G__6672,G__6673,G__6674,G__6675,G__6676,G__6677,G__6678,G__6679,G__6680,G__6681,G__6682,G__6683,G__6684,G__6685,G__6686));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6687 = a;
var G__6688 = b;
var G__6689 = c;
var G__6690 = d;
var G__6691 = e;
var G__6692 = f;
var G__6693 = g;
var G__6694 = h;
var G__6695 = i;
var G__6696 = j;
var G__6697 = k;
var G__6698 = l;
var G__6699 = m;
var G__6700 = n;
var G__6701 = o;
var G__6702 = p;
var G__6703 = q;
var G__6704 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__6687,G__6688,G__6689,G__6690,G__6691,G__6692,G__6693,G__6694,G__6695,G__6696,G__6697,G__6698,G__6699,G__6700,G__6701,G__6702,G__6703,G__6704) : target_fn.call(null,G__6687,G__6688,G__6689,G__6690,G__6691,G__6692,G__6693,G__6694,G__6695,G__6696,G__6697,G__6698,G__6699,G__6700,G__6701,G__6702,G__6703,G__6704));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6705 = a;
var G__6706 = b;
var G__6707 = c;
var G__6708 = d;
var G__6709 = e;
var G__6710 = f;
var G__6711 = g;
var G__6712 = h;
var G__6713 = i;
var G__6714 = j;
var G__6715 = k;
var G__6716 = l;
var G__6717 = m;
var G__6718 = n;
var G__6719 = o;
var G__6720 = p;
var G__6721 = q;
var G__6722 = r;
var G__6723 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__6705,G__6706,G__6707,G__6708,G__6709,G__6710,G__6711,G__6712,G__6713,G__6714,G__6715,G__6716,G__6717,G__6718,G__6719,G__6720,G__6721,G__6722,G__6723) : self__.dispatch_fn.call(null,G__6705,G__6706,G__6707,G__6708,G__6709,G__6710,G__6711,G__6712,G__6713,G__6714,G__6715,G__6716,G__6717,G__6718,G__6719,G__6720,G__6721,G__6722,G__6723));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6724 = a;
var G__6725 = b;
var G__6726 = c;
var G__6727 = d;
var G__6728 = e;
var G__6729 = f;
var G__6730 = g;
var G__6731 = h;
var G__6732 = i;
var G__6733 = j;
var G__6734 = k;
var G__6735 = l;
var G__6736 = m;
var G__6737 = n;
var G__6738 = o;
var G__6739 = p;
var G__6740 = q;
var G__6741 = r;
var G__6742 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__6724,G__6725,G__6726,G__6727,G__6728,G__6729,G__6730,G__6731,G__6732,G__6733,G__6734,G__6735,G__6736,G__6737,G__6738,G__6739,G__6740,G__6741,G__6742) : target_fn.call(null,G__6724,G__6725,G__6726,G__6727,G__6728,G__6729,G__6730,G__6731,G__6732,G__6733,G__6734,G__6735,G__6736,G__6737,G__6738,G__6739,G__6740,G__6741,G__6742));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6743 = a;
var G__6744 = b;
var G__6745 = c;
var G__6746 = d;
var G__6747 = e;
var G__6748 = f;
var G__6749 = g;
var G__6750 = h;
var G__6751 = i;
var G__6752 = j;
var G__6753 = k;
var G__6754 = l;
var G__6755 = m;
var G__6756 = n;
var G__6757 = o;
var G__6758 = p;
var G__6759 = q;
var G__6760 = r;
var G__6761 = s;
var G__6762 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__6743,G__6744,G__6745,G__6746,G__6747,G__6748,G__6749,G__6750,G__6751,G__6752,G__6753,G__6754,G__6755,G__6756,G__6757,G__6758,G__6759,G__6760,G__6761,G__6762) : self__.dispatch_fn.call(null,G__6743,G__6744,G__6745,G__6746,G__6747,G__6748,G__6749,G__6750,G__6751,G__6752,G__6753,G__6754,G__6755,G__6756,G__6757,G__6758,G__6759,G__6760,G__6761,G__6762));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6763 = a;
var G__6764 = b;
var G__6765 = c;
var G__6766 = d;
var G__6767 = e;
var G__6768 = f;
var G__6769 = g;
var G__6770 = h;
var G__6771 = i;
var G__6772 = j;
var G__6773 = k;
var G__6774 = l;
var G__6775 = m;
var G__6776 = n;
var G__6777 = o;
var G__6778 = p;
var G__6779 = q;
var G__6780 = r;
var G__6781 = s;
var G__6782 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__6763,G__6764,G__6765,G__6766,G__6767,G__6768,G__6769,G__6770,G__6771,G__6772,G__6773,G__6774,G__6775,G__6776,G__6777,G__6778,G__6779,G__6780,G__6781,G__6782) : target_fn.call(null,G__6763,G__6764,G__6765,G__6766,G__6767,G__6768,G__6769,G__6770,G__6771,G__6772,G__6773,G__6774,G__6775,G__6776,G__6777,G__6778,G__6779,G__6780,G__6781,G__6782));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function cljs$core$__GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
 * Removes all of the methods of multimethod.
 */
cljs.core.remove_all_methods = (function cljs$core$remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
 * Removes the method of multimethod associated with dispatch-value.
 */
cljs.core.remove_method = (function cljs$core$remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
 * Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
 * when there is a conflict
 */
cljs.core.prefer_method = (function cljs$core$prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
 * Given a multimethod, returns a map of dispatch values -> dispatch fns
 */
cljs.core.methods$ = (function cljs$core$methods(multifn){
return cljs.core._methods(multifn);
});
/**
 * Given a multimethod and a dispatch value, returns the dispatch fn
 * that would apply to that value, or nil if none apply and no default
 */
cljs.core.get_method = (function cljs$core$get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
 * Given a multimethod, returns a map of preferred value -> set of other values
 */
cljs.core.prefers = (function cljs$core$prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__6784 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__6784);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__11042__auto__,writer__11043__auto__,opt__11044__auto__){
return cljs.core._write(writer__11043__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function cljs$core$__GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});

cljs.core.pr_writer_ex_info = (function cljs$core$pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
 * @constructor
 */
cljs.core.ExceptionInfo = (function cljs$core$ExceptionInfo(message,data,cause){
var e = (new Error());
var this$ = this;
this$.message = message;

this$.data = data;

this$.cause = cause;

this$.name = e.name;

this$.description = e.description;

this$.number = e.number;

this$.fileName = e.fileName;

this$.lineNumber = e.lineNumber;

this$.columnNumber = e.columnNumber;

this$.stack = e.stack;

return this$;
});
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});
cljs.core.ExceptionInfo.prototype.toString = (function (){
var this$ = this;
return cljs.core.pr_str_STAR_(this$);
});
/**
 * Alpha - subject to change.
 * Create an instance of ExceptionInfo, an Error type that carries a
 * map of additional data.
 */
cljs.core.ex_info = (function() {
var cljs$core$ex_info = null;
var cljs$core$ex_info__2 = (function (msg,data){
return cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var cljs$core$ex_info__3 = (function (msg,data,cause){
return (new cljs.core.ExceptionInfo(msg,data,cause));
});
cljs$core$ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return cljs$core$ex_info__2.call(this,msg,data);
case 3:
return cljs$core$ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ex_info.cljs$core$IFn$_invoke$arity$2 = cljs$core$ex_info__2;
cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3 = cljs$core$ex_info__3;
return cljs$core$ex_info;
})()
;
/**
 * Alpha - subject to change.
 * Returns exception data (a map) if ex is an ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_data = (function cljs$core$ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns the message attached to the given Error / ExceptionInfo object.
 * For non-Errors returns nil.
 */
cljs.core.ex_message = (function cljs$core$ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns exception cause (an Error / ExceptionInfo) if ex is an
 * ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_cause = (function cljs$core$ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
 * Returns an JavaScript compatible comparator based upon pred.
 */
cljs.core.comparator = (function cljs$core$comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__6792 = x;
var G__6793 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__6792,G__6793) : pred.call(null,G__6792,G__6793));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__6794 = y;
var G__6795 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__6794,G__6795) : pred.call(null,G__6794,G__6795));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function cljs$core$special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
 * test [v] finds fn at key :test in var metadata and calls it,
 * presuming failure will throw exception
 */
cljs.core.test = (function cljs$core$test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$_COLON_ok;
} else {
return cljs.core.constant$keyword$_COLON_no_test;
}
});
